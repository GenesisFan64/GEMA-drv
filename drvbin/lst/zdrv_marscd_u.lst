 AS V1.42 Beta [Bld 212] - Source File driver_only.asm - Page 1 - 10/25/2024 03:38:56 AM


       1/       0 :                     ; ===========================================================================
       2/       0 :                     
       3/       0 :                     		padding		off		; Don't pad dc.b
       4/       0 :                     		listing 	purecode
       5/       0 :                     		supmode 	on 		; Supervisor mode (68000)
       6/       0 :                     		page 		0
       7/       0 :                     
       8/       0 :                     		include	"macros.asm"			; Assembler macros
(1)    1/       0 :                     ; ===========================================================================
(1)    2/       0 :                     ; -------------------------------------------------------------------
(1)    3/       0 :                     ; MACROS Section
(1)    4/       0 :                     ;
(1)    5/       0 :                     ; *** THIS MUST BE INCLUDED AT START OF THE CODE ***
(1)    6/       0 :                     ; -------------------------------------------------------------------
(1)    7/       0 :                     
(1)    8/       0 :                     ; ====================================================================
(1)    9/       0 :                     ; ------------------------------------------------------------
(1)   10/       0 :                     ; AS Functions
(1)   11/       0 :                     ; ------------------------------------------------------------
(1)   12/       0 :                     
(1)   13/       0 :                     splitw		function l,r,(((l))<<16&$FFFF0000|((r))&$FFFF)		; Two WORDS stored in a single LONG: $12341234
(1)   14/       0 :                     
(1)   15/       0 :                     ; Common functions
(1)   16/       0 :                     cell_vram	function a,(a<<5)					; Cell position to real VRAM position
(1)   17/       0 :                     color_indx	function a,a<<1						; Applies to both VDP and SuperVDP
(1)   18/       0 :                     pstr_mem	function a,b,((a|$80)<<24)|b&$FFFFFF			; PRINT memory: pstr_mem(type,mem_pos)
(1)   19/       0 :                     full_loc	function a,-(-a)&$FFFFFFFF
(1)   20/       0 :                     
(1)   21/       0 : =$3C000              SET_WRAMSIZE	equ $3C000
(1)   22/       0 :                     
(1)   23/       0 :                     ; ====================================================================
(1)   24/       0 :                     ; ------------------------------------------------------------
(1)   25/       0 :                     ; Macros
(1)   26/       0 :                     ; ------------------------------------------------------------
(1)   27/       0 :                     
(1)   28/       0 :                     ; --------------------------------------------
(1)   29/       0 :                     ; Memory reference labels
(1)   30/       0 :                     ;
(1)   31/       0 :                     ; Example:
(1)   32/       0 :                     ; 		memory RAM_Somewhere
(1)   33/       0 :                     ; RAM_ThisLong	ds.l 1
(1)   34/       0 :                     ; RAM_ThisWord	ds.w 1
(1)   35/       0 :                     ; RAM_ThisByte	ds.b 1		; <-- careful with alignment
(1)   36/       0 :                     ; 		endmemory ; finish
(1)   37/       0 :                     ; --------------------------------------------
(1)   38/       0 :                     
(1)   39/       0 :                     memory		macro thisinput			; Reserve memory address
(1)   40/       0 :                     GLBL_LASTPC	:= *
(1)   41/       0 :                     		dephase
(1)   42/       0 :                     		phase thisinput
(1)   43/       0 :                     GLBL_LASTORG	:= *
(1)   44/       0 :                     		endm
(1)   45/       0 :                     
(1)   46/       0 :                     ; --------------------------------------------
(1)   47/       0 :                     
(1)   48/       0 :                     endmemory	macro				; Then finish.
(1)   49/       0 :                     .here:		dephase
(1)   50/       0 :                     		ds.b -(.here-GLBL_LASTORG)
(1)   51/       0 :                     		phase GLBL_LASTPC
(1)   52/       0 :                     		endm
(1)   53/       0 :                     
(1)   54/       0 :                     ; --------------------------------------------
(1)   55/       0 :                     ; Report memory usage
(1)   56/       0 :                     ; --------------------------------------------
(1)   57/       0 :                     
(1)   58/       0 :                     report		macro text,this,that
(1)   59/       0 :                     	if MOMPASS == 2
(1)   60/       0 :                     		if that == -1
(1)   61/       0 :                     			message text+": \{(this)&$FFFFFF}"
(1)   62/       0 :                     		else
(1)   63/       0 :                     			if this > that
(1)   64/       0 :                     				warning "RAN OUT OF "+text+" SPACE (\{(this)&$FFFFFF} of \{(that)&$FFFFFF})"
(1)   65/       0 :                     			else
(1)   66/       0 :                     				message text+" uses \{(this)&$FFFFFF} of \{(that)&$FFFFFF}"
(1)   67/       0 :                     			endif
(1)   68/       0 :                     		endif
(1)   69/       0 :                     	endif
(1)   70/       0 :                     		endm
(1)   71/       0 :                     
(1)   72/       0 :                     ; --------------------------------------------
(1)   73/       0 :                     ; Same as report but only show on error
(1)   74/       0 :                     ; --------------------------------------------
(1)   75/       0 :                     
(1)   76/       0 :                     erreport	macro text,this,that
(1)   77/       0 :                     	if MOMPASS == 2
(1)   78/       0 :                     		if this > that
(1)   79/       0 :                     			error "RAN OUT OF "+text+" (\{(this)&$FFFFFF} of \{(that)&$FFFFFF})"
(1)   80/       0 :                     		endif
(1)   81/       0 :                     	endif
(1)   82/       0 :                     		endm
(1)   83/       0 :                     
(1)   84/       0 :                     ; --------------------------------------------
(1)   85/       0 :                     ; ZERO Fill padding
(1)   86/       0 :                     ; --------------------------------------------
(1)   87/       0 :                     
(1)   88/       0 :                     rompad		macro target
(1)   89/       0 :                     .this_sz := target - *
(1)   90/       0 :                     		if .this_sz < 0
(1)   91/       0 :                     			error "Too much data at $\{target} ($\{(-.this_sz)} bytes)"
(1)   92/       0 :                     		else
(1)   93/       0 :                     			dc.b [.this_sz]0
(1)   94/       0 :                     		endif
(1)   95/       0 :                     	endm
(1)   96/       0 :                     
(1)   97/       0 :                     ; ====================================================================
(1)   98/       0 :                     ; ------------------------------------------------------------
(1)   99/       0 :                     ; Filesystem macros
(1)  100/       0 :                     ;
(1)  101/       0 :                     ; NOTE: A pre-generated ISO head is required
(1)  102/       0 :                     ;       at $8000 until $B7FF
(1)  103/       0 :                     ; ------------------------------------------------------------
(1)  104/       0 :                     
(1)  105/       0 :                     ; ------------------------------------------------------------
(1)  106/       0 :                     ; FS setup
(1)  107/       0 :                     ; ------------------------------------------------------------
(1)  108/       0 :                     
(1)  109/       0 :                     fs_mkList	macro type,start,end
(1)  110/       0 :                     .fstrt:
(1)  111/       0 :                     		dc.b .fend-.fstrt				; Block size
(1)  112/       0 :                     		dc.b 0						; Zero
(1)  113/       0 :                     		dc.b (start>>11&$FF),(start>>19&$FF)		; Start sector, little endian
(1)  114/       0 :                     		dc.b (start>>27&$FF),(start>>35&$FF)
(1)  115/       0 :                     		dc.l start>>11					; Start sector, big endian
(1)  116/       0 :                     		dc.b ((end-start)&$FF),((end-start)>>8&$FF)	; Filesize, little endian
(1)  117/       0 :                     		dc.b ((end-start)>>16&$FF),((end-start)>>24&$FF)
(1)  118/       0 :                     		dc.l end-start					; Filesize, big endian
(1)  119/       0 :                     		dc.b (2024-1900)+1				; Year
(1)  120/       0 :                     		dc.b 0,0,0,0,0,0				; **never done**
(1)  121/       0 :                     		dc.b 2						; File flags
(1)  122/       0 :                     		dc.b 0,0
(1)  123/       0 :                     		dc.b 1,0					; Volume sequence number, little
(1)  124/       0 :                     		dc.b 0,1					; Volume sequence number, big
(1)  125/       0 :                     		dc.b 1,type
(1)  126/       0 :                     .fend:
(1)  127/       0 :                     		endm
(1)  128/       0 :                     
(1)  129/       0 :                     ; ------------------------------------------------------------
(1)  130/       0 :                     ; FS File
(1)  131/       0 :                     ; ------------------------------------------------------------
(1)  132/       0 :                     
(1)  133/       0 :                     fs_file		macro filename,start,end
(1)  134/       0 :                     .fstrt:		dc.b .fend-.fstrt				; Block size
(1)  135/       0 :                     		dc.b 0						; zero
(1)  136/       0 :                     		dc.b (start>>11&$FF),(start>>19&$FF)		; Start sector, little
(1)  137/       0 :                     		dc.b (start>>27&$FF),(start>>35&$FF)
(1)  138/       0 :                     		dc.l start>>11					; Start sector, big
(1)  139/       0 :                     		dc.b ((end-start)&$FF),((end-start)>>8&$FF)	; Filesize, little
(1)  140/       0 :                     		dc.b ((end-start)>>16&$FF),((end-start)>>24&$FF)
(1)  141/       0 :                     		dc.l end-start					; Filesize, big
(1)  142/       0 :                     		dc.b (2024-1900)+1				; Year
(1)  143/       0 :                     		dc.b 0,0,0,0,0,0				; (filler)
(1)  144/       0 :                     		dc.b 0						; File flags
(1)  145/       0 :                     		dc.b 0,0
(1)  146/       0 :                     		dc.b 1,0					; Volume sequence number, little
(1)  147/       0 :                     		dc.b 0,1					; Volume sequence number, big
(1)  148/       0 :                     		dc.b .flend-.flen
(1)  149/       0 :                     .flen:		dc.b filename,";1"
(1)  150/       0 :                     .flend:		dc.b 0
(1)  151/       0 :                     .fend:
(1)  152/       0 :                     		endm
(1)  153/       0 :                     
(1)  154/       0 :                     ; ------------------------------------------------------------
(1)  155/       0 :                     ; Make filler sector at the end-of-file
(1)  156/       0 :                     ; ------------------------------------------------------------
(1)  157/       0 :                     
(1)  158/       0 :                     fs_end		macro
(1)  159/       0 :                     		dc.b 0
(1)  160/       0 :                     		align $800			; Filler sector
(1)  161/       0 :                     		endm
(1)  162/       0 :                     
(1)  163/       0 :                     ; ====================================================================
(1)  164/       0 :                     ; ------------------------------------------------------------
(1)  165/       0 :                     ; Nikona storage macros
(1)  166/       0 :                     ; ------------------------------------------------------------
(1)  167/       0 :                     
(1)  168/       0 :                     ; --------------------------------------------
(1)  169/       0 :                     ; Screen mode code
(1)  170/       0 :                     ;
(1)  171/       0 :                     ; screen_code START_LABEL,END_LABEL,CODE_PATH
(1)  172/       0 :                     ; --------------------------------------------
(1)  173/       0 :                     
(1)  174/       0 :                     screen_code macro lblstart,lblend,path
(1)  175/       0 :                     	if MCD|MARSCD
(1)  176/       0 :                     		align $800		; SCD/CD32X sector align
(1)  177/       0 :                     	elseif MARS
(1)  178/       0 :                     		phase $880000+*		; 32X ROM-area
(1)  179/       0 :                     		align 4
(1)  180/       0 :                     	endif
(1)  181/       0 :                     lblstart label *
(1)  182/       0 :                     	if MARS
(1)  183/       0 :                     		dephase
(1)  184/       0 :                     	endif
(1)  185/       0 :                     
(1)  186/       0 :                     mctopscrn:
(1)  187/       0 :                     	if MARS|MCD|MARSCD
(1)  188/       0 :                     		phase RAM_UserCode	; SCD/32X/CD32X code area
(1)  189/       0 :                     	endif
(1)  190/       0 :                     mcscrn_s:
(1)  191/       0 :                     	include path;"game/screenX/code.asm"
(1)  192/       0 :                     mcscrn_e:
(1)  193/       0 :                     	if MARS
(1)  194/       0 :                     		dephase	; dephase RAM section
(1)  195/       0 :                     		dephase ; dephase $880000+ section
(1)  196/       0 :                     	elseif MCD|MARSCD
(1)  197/       0 :                     		dephase
(1)  198/       0 :                     		phase mctopscrn+(mcscrn_e-RAM_UserCode)
(1)  199/       0 :                     		align $800
(1)  200/       0 :                     	endif
(1)  201/       0 :                     ; Md_Screen00_e:
(1)  202/       0 :                     lblend label *
(1)  203/       0 :                     	erreport "SCREEN CODE: lblstart",mcscrn_e-mcscrn_s,MAX_UserCode
(1)  204/       0 :                     	endm
(1)  205/       0 :                     
(1)  206/       0 :                     ; --------------------------------------------
(1)  207/       0 :                     ; Data bank
(1)  208/       0 :                     ; --------------------------------------------
(1)  209/       0 :                     
(1)  210/       0 :                     data_dset macro startlbl
(1)  211/       0 :                     	if MCD|MARSCD
(1)  212/       0 :                     		align $800
(1)  213/       0 :                     	endif
(1)  214/       0 :                     ; MCD_DBANK0:
(1)  215/       0 :                     startlbl label *
(1)  216/       0 :                     	if MCD|MARSCD
(1)  217/       0 :                     		phase sysmcd_wram
(1)  218/       0 :                     	elseif MARS
(1)  219/       0 :                     		phase $900000+(startlbl&$0FFFFF)
(1)  220/       0 :                     		align 4
(1)  221/       0 :                     	endif
(1)  222/       0 :                     GLBL_MDATA_ST := *
(1)  223/       0 :                     	endm
(1)  224/       0 :                     
(1)  225/       0 :                     ; --------------------------------------------
(1)  226/       0 :                     
(1)  227/       0 :                     data_dend macro endlbl
(1)  228/       0 :                     GLBL_MDATA_RP := *-GLBL_MDATA_ST	; save size for _dend
(1)  229/       0 :                     
(1)  230/       0 :                     	if MCD|MARSCD
(1)  231/       0 :                     	if MOMPASS>2
(1)  232/       0 :                     		if GLBL_MDATA_RP > SET_WRAMSIZE
(1)  233/       0 :                     			warning "SCD/CD32X: THIS BANK SIZE IS TOO LARGE for WORD-RAM"
(1)  234/       0 :                     		endif
(1)  235/       0 :                     	endif
(1)  236/       0 :                     	endif
(1)  237/       0 :                     
(1)  238/       0 :                     	if MARS
(1)  239/       0 :                     		if * >= $900000+$100000
(1)  240/       0 :                     			warning "32X: THIS DATA BANK IS TOO LARGE for $900000"
(1)  241/       0 :                     		endif
(1)  242/       0 :                     
(1)  243/       0 :                     		dephase
(1)  244/       0 :                     	elseif MCD|MARSCD
(1)  245/       0 :                     		dephase
(1)  246/       0 :                     
(1)  247/       0 :                     mlastpos := *	; <-- CD/CD32X ONLY
(1)  248/       0 :                     mpadlbl	:= (mlastpos&$FFF800)+$800
(1)  249/       0 :                     		rompad mpadlbl
(1)  250/       0 :                     endlbl label *	; <-- CD/CD32X ONLY
(1)  251/       0 :                     		erreport "68K DATA BANK",GLBL_MDATA_RP,SET_WRAMSIZE	; <- Lowest size compatible for ALL
(1)  252/       0 :                     	endif
(1)  253/       0 :                     	endm
(1)  254/       0 :                     
(1)  255/       0 :                     ; --------------------------------------------
(1)  256/       0 :                     
(1)  257/       0 :                     binclude_dma	macro lblstart,file
(1)  258/       0 :                     	if MARS
(1)  259/       0 :                     GLBL_LASTPHDMA	set *
(1)  260/       0 :                     	dephase
(1)  261/       0 :                     GLBL_PHASEDMA	set *
(1)  262/       0 :                     		endif
(1)  263/       0 :                     
(1)  264/       0 :                     		align 2
(1)  265/       0 :                     lblstart	label *
(1)  266/       0 :                     		binclude file
(1)  267/       0 :                     		align 2
(1)  268/       0 :                     
(1)  269/       0 :                     	if MARS
(1)  270/       0 :                     GLBL_ENDPHDMA	set *-GLBL_PHASEDMA
(1)  271/       0 :                     		phase GLBL_LASTPHDMA+GLBL_ENDPHDMA
(1)  272/       0 :                     	endif
(1)  273/       0 :                     		endm
(1)  274/       0 :                     
(1)  275/       0 :                     binclude_dma_e	macro lblstart,lblend,file
(1)  276/       0 :                     	if MARS
(1)  277/       0 :                     GLBL_LASTPHDMA	set *
(1)  278/       0 :                     	dephase
(1)  279/       0 :                     GLBL_PHASEDMA	set *
(1)  280/       0 :                     		endif
(1)  281/       0 :                     
(1)  282/       0 :                     		align 2
(1)  283/       0 :                     lblstart	label *
(1)  284/       0 :                     		binclude file
(1)  285/       0 :                     lblend		label *
(1)  286/       0 :                     		align 2
(1)  287/       0 :                     
(1)  288/       0 :                     	if MARS
(1)  289/       0 :                     GLBL_ENDPHDMA	set *-GLBL_PHASEDMA
(1)  290/       0 :                     		phase GLBL_LASTPHDMA+GLBL_ENDPHDMA
(1)  291/       0 :                     	endif
(1)  292/       0 :                     		endm
(1)  293/       0 :                     
(1)  294/       0 :                     ; --------------------------------------------
(1)  295/       0 :                     ; 32X graphics pack Enter/Exit
(1)  296/       0 :                     ; --------------------------------------------
(1)  297/       0 :                     
(1)  298/       0 :                     mars_VramStart	macro thelabel
(1)  299/       0 :                     thelabel label *
(1)  300/       0 :                     		phase 0
(1)  301/       0 :                     		endm
(1)  302/       0 :                     
(1)  303/       0 :                     mars_VramEnd	macro thelabel
(1)  304/       0 :                     		align 8
(1)  305/       0 :                     .end:
(1)  306/       0 :                     ; 		if MOMPASS == 1
(1)  307/       0 :                     			erreport "32X VRAM DATA",.end,$18000
(1)  308/       0 :                     ; 		endif
(1)  309/       0 :                     		dephase
(1)  310/       0 :                     thelabel label *
(1)  311/       0 :                     		endm
(1)  312/       0 :                     
(1)  313/       0 :                     ; --------------------------------------------
(1)  314/       0 :                     ; Fill CD sectors
(1)  315/       0 :                     ; --------------------------------------------
(1)  316/       0 :                     
(1)  317/       0 :                     fillSectors macro num
(1)  318/       0 :                     	rept num
(1)  319/       0 :                     		align $800-1
(1)  320/       0 :                     		dc.b 0
(1)  321/       0 :                     	endm
(1)  322/       0 :                     	endm
(1)  323/       0 :                     
(1)  324/       0 :                     ; ====================================================================
(1)  325/       0 :                     ; ------------------------------------------------------------
(1)  326/       0 :                     ; Nikona CODE macros
(1)  327/       0 :                     ; ------------------------------------------------------------
(1)  328/       0 :                     
(1)  329/       0 :                     ; --------------------------------------------
(1)  330/       0 :                     ; VDP color debug
(1)  331/       0 :                     ; --------------------------------------------
(1)  332/       0 :                     
(1)  333/       0 :                     vdp_showme	macro color
(1)  334/       0 :                     		move.l	#$C0000000,(vdp_ctrl).l
(1)  335/       0 :                     		move.w	#color,(vdp_data).l
(1)  336/       0 :                     		endm
(1)  337/       0 :                     
       9/       0 :                     		include	"system/mcd/map.asm"	; Sega CD hardware map (shared with Sub-CPU)
(1)    1/       0 :                     ; ===========================================================================
(1)    2/       0 :                     ; -------------------------------------------------------------------
(1)    3/       0 :                     ; SEGA CD SUB-CPU MAP
(1)    4/       0 :                     ; -------------------------------------------------------------------
(1)    5/       0 :                     
(1)    6/       0 :                     ; ----------------------------------------------------------------
(1)    7/       0 :                     ; SEGA CD map
(1)    8/       0 :                     ; ----------------------------------------------------------------
(1)    9/       0 :                     
(1)   10/       0 : =$200000             sysmcd_wram	equ	$200000
(1)   11/       0 : =$A12000             sysmcd_reg	equ	$A12000
(1)   12/       0 :                     
(1)   13/       0 :                     ; ------------------------------------------------
(1)   14/       0 :                     ; Register area
(1)   15/       0 :                     ;
(1)   16/       0 :                     ; MAIN-CPU: $A12000 (sysmcd_reg)
(1)   17/       0 :                     ; SUB-CPU:  $FF8000 (scpu_reg)
(1)   18/       0 :                     ; ------------------------------------------------
(1)   19/       0 :                     
(1)   20/       0 :                     ; -------------
(1)   21/       0 :                     ; bits
(1)   22/       0 : =$2                  bitWRamMode	equ 2		;2M | 1M
(1)   23/       0 :                     
(1)   24/       0 :                     ; -------------
(1)   25/       0 :                     ; Registers
(1)   26/       0 : =$3                  mcd_memory	equ $03
(1)   27/       0 : =$6                  mcd_hint	equ $06		; [W] HBlank RAM redirection-jump (MAIN CPU ONLY)
(1)   28/       0 : =$E                  mcd_comm_m	equ $0E		; [B] Comm port MAIN R/W | SUB READ ONLY
(1)   29/       0 : =$F                  mcd_comm_s	equ $0F		; [B] Comm port SUB R/W  | MAIN READ ONLY
(1)   30/       0 : =$10                 mcd_dcomm_m	equ $10		; [S: $0E] Communication MAIN
(1)   31/       0 : =$20                 mcd_dcomm_s	equ $20		; [S: $0E] Communication SUB
(1)   32/       0 : =$32                 mcd_intmask	equ $32		;
(1)   33/       0 :                     
(1)   34/       0 :                     ; ====================================================================
(1)   35/       0 :                     
      10/       0 :                     		include	"system/mars/map.asm"	; 32X hardware map (shared with SH2)
(1)    1/       0 :                     ; ===========================================================================
(1)    2/       0 :                     ; -------------------------------------------------------------------
(1)    3/       0 :                     ; SH2 MAP
(1)    4/       0 :                     ;
(1)    5/       0 :                     ; Variables are shared with 68K
(1)    6/       0 :                     ; -------------------------------------------------------------------
(1)    7/       0 :                     
(1)    8/       0 :                     ; ----------------------------------------------------------------
(1)    9/       0 :                     ; 32X map
(1)   10/       0 :                     ; ----------------------------------------------------------------
(1)   11/       0 :                     
(1)   12/       0 : =$A130EC             sysmars_id		equ	$A130EC		; 32X's ID: "MARS"
(1)   13/       0 : =$A15100             sysmars_reg		equ	$A15100		; MARS 32X registers area
(1)   14/       0 : =$A15180             sysmars_svdp		equ	$A15180		; SVDP registers
(1)   15/       0 : =$840000             sysmars_framebuffer	equ	$840000
(1)   16/       0 : =$860000             sysmars_overwrite	equ	$860000
(1)   17/       0 :                     
(1)   18/       0 :                     ; ------------------------------------------------------------
(1)   19/       0 :                     ; SH2 MAP
(1)   20/       0 :                     ; ------------------------------------------------------------
(1)   21/       0 :                     
(1)   22/       0 : =$0                  CS0		equ	$00000000	; Boot ROM & System registers
(1)   23/       0 : =$2000000            CS1		equ	$02000000	; ROM view (CARTRIDGE ONLY, BLOCKED if RV=1)
(1)   24/       0 : =$4000000            CS2		equ	$04000000	; Framebuffer/Overwrite area
(1)   25/       0 : =$6000000            CS3		equ	$06000000	; SDRAM
(1)   26/       0 : =$20000000           TH		equ	$20000000	; Cache-Thru OR Value
(1)   27/       0 : =$20004000           _sysreg		equ	$00004000|TH	; 32X system registers
(1)   28/       0 : =$20004100           _vdpreg		equ	$00004100|TH	; SuperVDP registers
(1)   29/       0 : =$20004200           _palette	equ	$00004200|TH	; Palette RAM for Pixel-Packed or RLE mode
(1)   30/       0 : =$24000000           _framebuffer:	equ	CS2|TH		; Framebuffer: First 240 words are the linetable
(1)   31/       0 : =$24020000           _overwrite:	equ	CS2|TH+$20000	; Overwrite:   Same but any 0 value writes are ignored
(1)   32/       0 :                     
(1)   33/       0 :                     ; ------------------------------------------------------------
(1)   34/       0 :                     ; Variables
(1)   35/       0 :                     ; ------------------------------------------------------------
(1)   36/       0 :                     
(1)   37/       0 :                     ; ------------------------------------------------
(1)   38/       0 :                     ; System
(1)   39/       0 :                     ;
(1)   40/       0 :                     ; _sysreg / sysmars_reg
(1)   41/       0 :                     ; ------------------------------------------------
(1)   42/       0 :                     
(1)   43/       0 : =$0                  adapter		equ	$00		; adapter control register
(1)   44/       0 : =$1                  intmask		equ	$01		; SH2 CPU ONLY: interrupts mask
(1)   45/       0 : =$3                  standby		equ	$03		; CMD interrupt request bit by MD side (slave|master) (BYTE)
(1)   46/       0 : =$4                  bankset		equ	$04		; 68K ONLY: $900000 bank
(1)   47/       0 : =$6                  dreqctl		equ	$06		; DREQ control (WORD)
(1)   48/       0 : =$8                  dreqsource	equ	$08		; DREQ source address
(1)   49/       0 : =$C                  dreqdest	equ	$0C		; DREQ destination address
(1)   50/       0 : =$10                 dreqlen		equ	$10		; DREQ length
(1)   51/       0 : =$12                 dreqfifo	equ	$12		; DREQ FIFO
(1)   52/       0 : =$14                 vresintclr	equ	$14		; VRES interrupt clear
(1)   53/       0 : =$16                 vintclr		equ	$16		; V interrupt clear
(1)   54/       0 : =$18                 hintclr		equ	$18		; H interrupt clear
(1)   55/       0 : =$1A                 cmdintclr	equ	$1a		; CMD interrupt clear
(1)   56/       0 : =$1C                 pwmintclr	equ	$1C		; PWM interrupt clear
(1)   57/       0 : =$20                 comm0		equ	$20		; Communication ports
(1)   58/       0 : =$21                 comm1		equ	$21		; ** ALL CPUs can see this ports: including Z80
(1)   59/       0 : =$22                 comm2		equ	$22		; only be careful with the read/write directions. **
(1)   60/       0 : =$23                 comm3		equ	$23		;
(1)   61/       0 : =$24                 comm4		equ	$24		;
(1)   62/       0 : =$25                 comm5		equ	$25		;
(1)   63/       0 : =$26                 comm6		equ	$26		;
(1)   64/       0 : =$27                 comm7		equ	$27		;
(1)   65/       0 : =$28                 comm8		equ	$28		;
(1)   66/       0 : =$29                 comm9		equ	$29		;
(1)   67/       0 : =$2A                 comm10		equ	$2A		;
(1)   68/       0 : =$2B                 comm11		equ	$2B		;
(1)   69/       0 : =$2C                 comm12		equ	$2C		;
(1)   70/       0 : =$2D                 comm13		equ	$2D		;
(1)   71/       0 : =$2E                 comm14		equ	$2E		;
(1)   72/       0 : =$2F                 comm15		equ	$2F		;
(1)   73/       0 : =$30                 timerctl	equ	$30		; PWM Timer Control
(1)   74/       0 : =$31                 pwmctl		equ	$31		; PWM Control
(1)   75/       0 : =$32                 cycle		equ	$32		; PWM Cycle
(1)   76/       0 : =$34                 lchwidth	equ	$34		; PWM L ch Width
(1)   77/       0 : =$36                 rchwidth	equ	$36		; PWM R ch Width
(1)   78/       0 : =$38                 monowidth	equ	$38		; PWM Monaural Width
(1)   79/       0 :                     
(1)   80/       0 :                     ; adapter
(1)   81/       0 : =$1                  ADEN		equ	%00000001	; MARS Enabled: No/Yes
(1)   82/       0 : =$2                  RES		equ	%00000010	; SH2 Reset: Yes/Cancelled
(1)   83/       0 : =$80                 FM		equ	%10000000	; SuperVDP permission: MD or SH
(1)   84/       0 :                     
(1)   85/       0 :                     ; framectl
(1)   86/       0 : =$1                  FS		equ	%00000001	; Current framebuffer DRAM pixel data
(1)   87/       0 : =$2                  FEN		equ	%00000010	; Can write to Framebuffer: Yes/No
(1)   88/       0 :                     
(1)   89/       0 :                     ; vdpsts
(1)   90/       0 : =$80                 VBLK		equ	%10000000	; VBlank bit
(1)   91/       0 : =$40                 HBLK		equ	%01000000	; HBlank bit
(1)   92/       0 : =$20                 PEN		equ	%00100000	; Can write to Palette: Yes/No
(1)   93/       0 :                     
(1)   94/       0 :                     ; intmask
(1)   95/       0 : =$8                  VIRQ_ON		equ	$08		; IRQ masks for IRQ mask register
(1)   96/       0 : =$4                  HIRQ_ON		equ	$04
(1)   97/       0 : =$2                  CMDIRQ_ON	equ	$02
(1)   98/       0 : =$1                  PWMIRQ_ON	equ	$01
(1)   99/       0 :                     
(1)  100/       0 :                     ; ------------------------------------------------
(1)  101/       0 :                     ; Super VDP
(1)  102/       0 :                     ;
(1)  103/       0 :                     ; _vdpreg
(1)  104/       0 :                     ; ------------------------------------------------
(1)  105/       0 :                     
(1)  106/       0 : =$0                  tvmode		equ	$00		; TV mode
(1)  107/       0 : =$1                  bitmapmd	equ	$01		; Bitmap mode
(1)  108/       0 : =$2                  shift		equ	$02		; Lineshift bit
(1)  109/       0 : =$4                  filllength	equ	$04		; Auto Fill Length register
(1)  110/       0 : =$6                  fillstart	equ	$06		; Auto Fill Start Address register
(1)  111/       0 : =$8                  filldata	equ	$08		; Auto Fill Data register
(1)  112/       0 : =$A                  vdpsts		equ	$0A		; VDP Status register
(1)  113/       0 : =$B                  framectl	equ	$0B		; Frame Buffer Control register
(1)  114/       0 :                     
(1)  115/       0 :                     ; ------------------------------------------------------------
(1)  116/       0 :                     ; SH2 internal registers
(1)  117/       0 :                     ;
(1)  118/       0 :                     ; DREQ and PWM are directly connected to
(1)  119/       0 :                     ; their specific channel:
(1)  120/       0 :                     ; Channel 0: DREQ
(1)  121/       0 :                     ; Channel 1: PWM
(1)  122/       0 :                     ; ------------------------------------------------------------
(1)  123/       0 :                     
(1)  124/       0 : =$FFFFFE00           _SERIAL		equ	$FFFFFE00	; Serial Control
(1)  125/       0 : =$FFFFFE10           _FRT		equ	$FFFFFE10	; Free run timer
(1)  126/       0 : =$0                  _TIER		equ	$00		; Timer interrupt enable register
(1)  127/       0 : =$1                  _TCSR		equ	$01		; Timer control & status register
(1)  128/       0 : =$2                  _FRC_H		equ	$02		; Free running counter High
(1)  129/       0 : =$3                  _FRC_L		equ	$03		; Free running counter Low
(1)  130/       0 : =$4                  _OCR_H		equ	$04		; Output compare register High
(1)  131/       0 : =$5                  _OCR_L		equ	$05		; Output compare register Low
(1)  132/       0 : =$6                  _TCR		equ	$06		; Timer control register
(1)  133/       0 : =$7                  _TOCR		equ	$07		; Timer output compare control register
(1)  134/       0 : =$FFFFFE92           _CCR		equ	$FFFFFE92	; Cache register (WORD)
(1)  135/       0 : =$FFFFFF00           _JR		equ	$FFFFFF00	; DIVU (--- / val)
(1)  136/       0 : =$FFFFFF04           _HRL32		equ	$FFFFFF04	; DIVU (val / ---) or RIGHT-long result on Read.
(1)  137/       0 : =$FFFFFF10           _HRH		equ	$FFFFFF10	; DIVU Result: LEFT long
(1)  138/       0 : =$FFFFFF14           _HRL		equ	$FFFFFF14	; DIVU Result: RIGHT long
(1)  139/       0 : =$FFFFFF80           _DMASOURCE0	equ	$FFFFFF80	; DMA source address 0
(1)  140/       0 : =$FFFFFF84           _DMADEST0	equ	$FFFFFF84	; DMA destination address 0
(1)  141/       0 : =$FFFFFF88           _DMACOUNT0	equ	$FFFFFF88	; DMA transfer count 0
(1)  142/       0 : =$FFFFFF8C           _DMACHANNEL0	equ	$FFFFFF8C	; DMA channel control 0
(1)  143/       0 : =$FFFFFF90           _DMASOURCE1	equ	$FFFFFF90	; DMA source address 1
(1)  144/       0 : =$FFFFFF94           _DMADEST1	equ	$FFFFFF94	; DMA destination address 1
(1)  145/       0 : =$FFFFFF98           _DMACOUNT1	equ	$FFFFFF98	; DMA transfer count 1
(1)  146/       0 : =$FFFFFF9C           _DMACHANNEL1	equ	$FFFFFF9C	; DMA channel control 1
(1)  147/       0 : =$FFFFFFA0           _DMAVECTORN0	equ	$FFFFFFA0	; DMA vector number N0
(1)  148/       0 : =$FFFFFFA4           _DMAVECTORE0	equ	$FFFFFFA4	; DMA vector number E0
(1)  149/       0 : =$FFFFFFA8           _DMAVECTORN1	equ	$FFFFFFA8	; DMA vector number N1
(1)  150/       0 : =$FFFFFFAC           _DMAVECTORE1	equ	$FFFFFFAC	; DMA vector number E1
(1)  151/       0 : =$FFFFFFB0           _DMAOPERATION	equ	$FFFFFFB0	; DMA operation
(1)  152/       0 : =$FFFFFFB4           _DMAREQACK0	equ	$FFFFFFB4	; DMA request/ack select control 0
(1)  153/       0 : =$FFFFFFB8           _DMAREQACK1	equ	$FFFFFFB8	; DMA request/ack select control 1
(1)  154/       0 :                     
      11/       0 :                     		include	"system/md/map.asm"	; Genesis hardware map and other areas
(1)    1/       0 :                     ; ===========================================================================
(1)    2/       0 :                     ; ----------------------------------------------------------------
(1)    3/       0 :                     ; Genesis / Pico 68000 map
(1)    4/       0 :                     ; ----------------------------------------------------------------
(1)    5/       0 :                     
(1)    6/       0 : =$200000             sys_sram	equ	$200000		; Second half of 4MB rom or external RAM (Normal or save data)
(1)    7/       0 : =$A00000             z80_cpu		equ	$A00000		; Z80 CPU area, size: $2000
(1)    8/       0 : =$A04000             ym_ctrl_1	equ	$A04000		; YM2612 reg 1
(1)    9/       0 : =$A04001             ym_data_1	equ	$A04001		; YM2612 reg 2
(1)   10/       0 : =$A04002             ym_ctrl_2	equ	$A04002		; YM2612 reg 1
(1)   11/       0 : =$A04003             ym_data_2	equ	$A04003		; YM2612 reg 2
(1)   12/       0 : =$A10001             sys_io		equ	$A10001		; bits: OVRSEAS(7)|PAL(6)|DISK(5)|VER(3-0)
(1)   13/       0 : =$A10003             sys_data_1	equ	$A10003		; Port 1 DATA
(1)   14/       0 : =$A10005             sys_data_2	equ	$A10005		; Port 2 DATA
(1)   15/       0 : =$A10007             sys_data_3	equ	$A10007		; Modem DATA
(1)   16/       0 : =$A10009             sys_ctrl_1	equ	$A10009		; Port 1 CTRL
(1)   17/       0 : =$A1000B             sys_ctrl_2	equ	$A1000B		; Port 2 CTRL
(1)   18/       0 : =$A1000D             sys_ctrl_3	equ	$A1000D		; Modem CTRL
(1)   19/       0 : =$A11100             z80_bus 	equ	$A11100		; only use bit 0 (bit 8 as WORD)
(1)   20/       0 : =$A11200             z80_reset	equ	$A11200		; WRITE only ($0000 reset/$0100 cancel)
(1)   21/       0 : =$A130F1             md_bank_sram	equ	$A130F1		; Make SRAM visible at $200000
(1)   22/       0 : =$A14000             sys_tmss	equ	$A14000		; write "SEGA" here for ver > 0
(1)   23/       0 : =$C00000             vdp_data	equ	$C00000		; video data port
(1)   24/       0 : =$C00004             vdp_ctrl	equ	$C00004		; video control port
(1)   25/       0 : =$C00011             psg_ctrl	equ	$C00011		; PSG control
(1)   26/       0 :                     
(1)   27/       0 :                     ; ----------------------------------------------------------------
(1)   28/       0 :                     ; Genesis / Mega drive Z80 map
(1)   29/       0 :                     ; ----------------------------------------------------------------
(1)   30/       0 :                     
(1)   31/       0 : =$4000               zym_ctrl_1	equ	$4000		; YM2612 reg 1
(1)   32/       0 : =$4001               zym_data_1	equ	$4001		; YM2612 reg 2
(1)   33/       0 : =$4002               zym_ctrl_2	equ	$4002		; YM2612 reg 1
(1)   34/       0 : =$4003               zym_data_2	equ	$4003		; YM2612 reg 2
(1)   35/       0 : =$6000               zbank		equ	$6000		; Z80 ROM BANK: %XXXXXXXX X0000000 00000000 (9 writes)
(1)   36/       0 :                     ; zvdp_data	equ	$7F00		; video data port
(1)   37/       0 :                     ; zvdp_ctrl	equ	$7F04		; video control port
(1)   38/       0 : =$7F11               zpsg_ctrl	equ	$7F11		; PSG control
(1)   39/       0 :                     
      12/       0 :                     
      13/       0 :                     ; ====================================================================
      14/       0 :                     ; ----------------------------------------------------------------
      15/       0 :                     ; EXTERNAL
      16/       0 :                     ; ----------------------------------------------------------------
      17/       0 :                     
      18/       0 :                     ; 68K RAM location at the area $FF8000-$FFFFFF
      19/       0 :                     ; to write a flag for the readRom RAM-area patch
      20/       0 :                     
      21/       0 : =$FFFFFF00           RAM_ZCdFlagD	equ $FFFFFF00
      22/       0 :                     
      23/       0 :                     ; ====================================================================
      24/       0 :                     ; ----------------------------------------------------------------
      25/       0 :                     ; AS Assembler starting settings
      26/       0 :                     ; ----------------------------------------------------------------
      27/       0 :                     
      28/       0 :                     		cpu Z80
      29/       0 :                     		org 0
      30/       0 :                     		include "../sound/drv/gema_zdrv.asm"
(1)    1/       0 :                     ; ===========================================================================
(1)    2/       0 :                     ; -------------------------------------------------------------------
(1)    3/       0 :                     ; GEMA Z80 code
(1)    4/       0 :                     ; -------------------------------------------------------------------
(1)    5/       0 :                     
(1)    6/       0 :                     		phase 0
(1)    7/       0 :                     		cpu Z80		; Enter Z80 CPU
(1)    8/       0 :                     
(1)    9/       0 :                     ; --------------------------------------------------------
(1)   10/       0 :                     ; SETTINGS
(1)   11/       0 :                     ; --------------------------------------------------------
(1)   12/       0 :                     
(1)   13/       0 :                     ; !! = HARDCODED
(1)   14/       0 : =0AH                 MAX_TRFRPZ	equ 10		; !! Max readRom packets(bytes) **AFFECTS WAVE QUALITY**
(1)   15/       0 : =20H                 MAX_TRKCHN	equ 32		; !! Max internal shared tracker channel slots *** LIMTED to 32 ***
(1)   16/       0 : =20H                 MAX_RCACH	equ 20h		; !! Max storage for ROM pattern data *** 1-BIT SIZES ONLY, MUST BE ALIGNED ***
(1)   17/       0 : =8H                  MAX_BUFFNTRY	equ 4*2		; !! nikona_BuffList buffer entry size
(1)   18/       0 : =3H                  MAX_SLOTS	equ 3		; !! Number of buffers
(1)   19/       0 : =20H                 MAX_ZCMND	equ 20h		; !! Size of command array ** 1-bit SIZES ONLY ** (68k uses this label too)
(1)   20/       0 :                     
(1)   21/       0 : =12H                 MAX_TBLSIZE	equ 12h		; Maximum size for chip tables
(1)   22/       0 : =1AH                 MAX_TRKINDX	equ 26		; Max channel indexes per buffer: 4PSG+6FM+8PCM+8PWM
(1)   23/       0 :                     
(1)   24/       0 :                     ; --------------------------------------------------------
(1)   25/       0 :                     ; Structs
(1)   26/       0 :                     ; --------------------------------------------------------
(1)   27/       0 :                     
(1)   28/       0 :                     ; trkBuff struct
(1)   29/       0 :                     ;
(1)   30/       0 :                     ; trk_Status: %ERP- V--0
(1)   31/       0 :                     ; E - enabled
(1)   32/       0 :                     ; R - Init|Restart track
(1)   33/       0 :                     ; P - refill-on-playback
(1)   34/       0 :                     ; V - volume change flag
(1)   35/       0 :                     ; 0 - Use global sub-beats
(1)   36/       0 : =0H                  trk_Status	equ 00h	; ** Track Status and Flags (MUST BE at 00h)
(1)   37/       0 : =1H                  trk_SeqId	equ 01h ; ** Track ID to play.
(1)   38/       0 : =2H                  trk_SetBlk	equ 02h	; ** Start on this block
(1)   39/       0 : =3H                  trk_TickSet	equ 03h	; ** Ticks for this track
(1)   40/       0 : =4H                  trk_Blocks	equ 04h ; ** [W] Current track's blocks
(1)   41/       0 : =6H                  trk_Patt	equ 06h ; ** [W] Current track's heads and patterns
(1)   42/       0 : =8H                  trk_Cach	equ 08h	; ** [W] Current track's cache notedata
(1)   43/       0 : =0AH                 trk_Read	equ 0Ah	; [W] Track current pattern read
(1)   44/       0 : =0CH                 trk_Rows	equ 0Ch	; [W] Track row counter
(1)   45/       0 : =0EH                 trk_VolMaster	equ 0Eh ; [W] Master volume for this track slot (00-max), +80h update
(1)   46/       0 : =10H                 trk_cachHalf	equ 10h ; ROM-cache halfcheck
(1)   47/       0 : =11H                 trk_rowPause	equ 11h	; Row-pause timer
(1)   48/       0 : =12H                 trk_TickTmr	equ 12h	; Ticks timer
(1)   49/       0 : =13H                 trk_currBlk	equ 13h	; Current block
(1)   50/       0 : =14H                 trk_Priority	equ 14h ; Priority level for this buffer
(1)   51/       0 : =15H                 trk_BankHeads	equ 15h ; Header bank
(1)   52/       0 : =16H                 trk_BankBlk	equ 16h	; Block bank
(1)   53/       0 : =17H                 trk_MaxChnl	equ 17h ; MAX channels used in this track
(1)   54/       0 : =18H                 trk_VolFdTarget	equ 18h	; Target fade volume
(1)   55/       0 : =19H                 trk_RomPattRead	equ 19h ; [3b] ROM current pattern data to be cache'd
(1)   56/       0 : =1CH                 trk_RomPatt	equ 1Ch ; [3b] ROM BASE pattern data
(1)   57/       0 : =1FH                 trk_RomInst	equ 1Fh ; [3b] ROM instrument data
(1)   58/       0 : =22H                 trk_RomBlks	equ 22h ; [3b] ROM blocks data
(1)   59/       0 : =25H                 trk_ChnIndx	equ 25h	; CHANNEL INDEXING START HERE
(1)   60/       0 :                     
(1)   61/       0 :                     ; chnBuff struct, 8 BYTES ONLY.
(1)   62/       0 :                     ;
(1)   63/       0 :                     ; chnl_Flags: E0LRevin
(1)   64/       0 :                     ; 	 E - Channel is active
(1)   65/       0 :                     ; 	LR - 1-bit Left/Right panning bits: 0-ON 1-OFF
(1)   66/       0 :                     ; 	 e - Effect*
(1)   67/       0 :                     ; 	 v - Volume*
(1)   68/       0 :                     ; 	 i - Intrument*
(1)   69/       0 :                     ; 	 n - Note*
(1)   70/       0 :                     
(1)   71/       0 : =0H                  chnl_Flags	equ 0	; !! Playback flags: %E0LRevin ** MUST BE LOCATED AT 0 **
(1)   72/       0 : =1H                  chnl_Chip	equ 1	; %ccccpppp c - Current Chip ID / p - Priority level
(1)   73/       0 : =2H                  chnl_Note	equ 2	; IT Music note or command
(1)   74/       0 : =3H                  chnl_Ins	equ 3	; IT Instrument starting from 1 (0 is invalid)
(1)   75/       0 : =4H                  chnl_Vol	equ 4	; IT Volume: MAX(64) to MIN(0)
(1)   76/       0 : =5H                  chnl_EffId	equ 5	; IT Effect number
(1)   77/       0 : =6H                  chnl_EffArg	equ 6	; IT Effect argument
(1)   78/       0 : =7H                  chnl_Type	equ 7	; Impulse type bits
(1)   79/       0 :                     
(1)   80/       0 :                     
(1)   81/       0 :                     ; Table struct
(1)   82/       0 : =0H                  ztbl_Link	equ 00h			; !! current linked channel in trkChnls
(1)   83/       0 : =2H                  ztbl_Priority	equ 02h			; !! 00h-7Fh: Priority level 0-15 + 80h+chipID Silence request
(1)   84/       0 : =3H                  ztbl_Chip	equ 03h			; Chip index (YM2612: direct index) *MUST BE ON THE LIST*
(1)   85/       0 : =4H                  ztbl_MasterVol	equ 04h			; MASTER volume for this channel
(1)   86/       0 : =5H                  ztbl_FreqIndx	equ 05h			; Frequency list index (YM2612: %oooiiiii oct|index)
(1)   87/       0 : =6H                  ztbl_PitchBend	equ 06h			; Pitchbend incr/decr
(1)   88/       0 : =7H                  ztbl_Volume	equ 07h			; Current Volume: 00-max
(1)   89/       0 : =8H                  ztbl_VolSlide	equ 08h			; Volume slide incr/decr
(1)   90/       0 : =0AH                 ztbl_InstCach	equ 0Ah			; <-- 8 bytes
(1)   91/       0 :                     
(1)   92/       0 :                     ; --------------------------------------------------------
(1)   93/       0 :                     ; Variables
(1)   94/       0 :                     ; --------------------------------------------------------
(1)   95/       0 :                     
(1)   96/       0 :                     ; Z80 opcode labels for the wave playback routines
(1)   97/       0 : =0H                  zopcNop		equ 00h
(1)   98/       0 : =8H                  zopcEx		equ 08h
(1)   99/       0 : =0C9H                zopcRet		equ 0C9h
(1)  100/       0 : =0D9H                zopcExx		equ 0D9h		; (dac_me ONLY)
(1)  101/       0 : =0F5H                zopcPushAf	equ 0F5h		; (dac_fill ONLY)
(1)  102/       0 :                     
(1)  103/       0 :                     ; PSG
(1)  104/       0 : =0H                  COM		equ 0
(1)  105/       0 : =4H                  LEV		equ 4
(1)  106/       0 : =8H                  ATK		equ 8
(1)  107/       0 : =0CH                 DKY		equ 12
(1)  108/       0 : =10H                 SLV		equ 16
(1)  109/       0 : =14H                 RRT		equ 20
(1)  110/       0 : =18H                 MODE		equ 24
(1)  111/       0 : =1CH                 DTL		equ 28
(1)  112/       0 : =20H                 DTH		equ 32
(1)  113/       0 : =24H                 ALV		equ 36
(1)  114/       0 : =28H                 FLG		equ 40
(1)  115/       0 : =2CH                 ARP		equ 44
(1)  116/       0 : =30H                 MVOL		equ 48
(1)  117/       0 : =34H                 EFFV		equ 52
(1)  118/       0 : =38H                 PTMR		equ 56
(1)  119/       0 :                     
(1)  120/       0 :                     ; ====================================================================
(1)  121/       0 :                     ; --------------------------------------------------------
(1)  122/       0 :                     ; Code starts here
(1)  123/       0 :                     ; --------------------------------------------------------
(1)  124/       0 :                     
(1)  125/       0 : F3                  		di			; Disable interrupts
(1)  126/       1 : ED 56               		im	1		; Interrupt mode 1
(1)  127/       3 : 31 00 20            		ld	sp,2000h	; Set STACK at the end of Z80
(1)  128/       6 : 18 36               		jr	z80_init	; Jump to z80_init
(1)  129/       8 :                     
(1)  130/       8 :                     ; --------------------------------------------------------
(1)  131/       8 :                     ; RST 8 (dac_me)
(1)  132/       8 :                     ;
(1)  133/       8 :                     ; Writes wave data to DAC using data stored
(1)  134/       8 :                     ; on the wave buffer, call this routine every 6 or 8
(1)  135/       8 :                     ; instructions to keep the samplerate stable.
(1)  136/       8 :                     ;
(1)  137/       8 :                     ; Input (EXX):
(1)  138/       8 :                     ;  c - WAVE buffer MSB
(1)  139/       8 :                     ; de - Pitch (xx.00)
(1)  140/       8 :                     ; h  - WAVE buffer LSB (as xx.00)
(1)  141/       8 :                     ;
(1)  142/       8 :                     ; Uses (EXX):
(1)  143/       8 :                     ; b
(1)  144/       8 :                     ;
(1)  145/       8 :                     ; Notes:
(1)  146/       8 :                     ; ONLY USE dac_on and dac_off to turn OFF/ON
(1)  147/       8 :                     ; DAC playback
(1)  148/       8 :                     ;
(1)  149/       8 :                     ; Samplerate is 16000hz with minimal quality loss.
(1)  150/       8 :                     ; --------------------------------------------------------
(1)  151/       8 :                     
(1)  152/       8 :                     ; EXX set:
(1)  153/       8 :                     ; af - temporal
(1)  154/       8 :                     ; bc - l temporal | dWaveBuff MSB
(1)  155/       8 :                     ; de - pitch increment
(1)  156/       8 :                     ; hl - wave buffer position 00.00h
(1)  157/       8 :                     		org 8
(1)  158/       8 : D9                  dac_me:		exx			; * flip registers <-- Changes between EXX(play) and RET(stop)
(1)  159/       9 : 08                  		ex	af,af'		; Swap af
(1)  160/       A : 45                  		ld	b,l		; Save old hl buff
(1)  161/       B : 6C                  		ld	l,h		;
(1)  162/       C : 61                  		ld	h,c		; h - Set buffer MSB
(1)  163/       D : 3E 2A               		ld	a,2Ah		;
(1)  164/       F : 32 00 40            		ld	(Zym_ctrl_1),a	; Set YM Register 2Ah
(1)  165/      12 : 7E                  		ld	a,(hl)		; Read wave byte and
(1)  166/      13 : 32 01 40            		ld	(Zym_data_1),a	; write it to DAC
(1)  167/      16 : 65                  		ld	h,l		; Get hl buff back
(1)  168/      17 : 68                  		ld	l,b		;
(1)  169/      18 : 19                  		add	hl,de		; Pitch increment hl
(1)  170/      19 : 08                  		ex	af,af'		; Return af
(1)  171/      1A : D9                  		exx			; * return registers
(1)  172/      1B : C9                  		ret
(1)  173/      1C :                     
(1)  174/      1C :                     ; --------------------------------------------------------
(1)  175/      1C :                     ; 1Ch - Master tracklist pointer
(1)  176/      1C :                     gemaMstrListPos:
(1)  177/      1C : 00                  		db 0			; ** 32-bit 68k address **
(1)  178/      1D : 00                  		db 0
(1)  179/      1E : 00                  		db 0
(1)  180/      1F : 00                  		db 0
(1)  181/      20 :                     
(1)  182/      20 :                     ; --------------------------------------------------------
(1)  183/      20 :                     ; RST 20h (dac_me)
(1)  184/      20 :                     ; *** self-modifiable code ***
(1)  185/      20 :                     ;
(1)  186/      20 :                     ; Checks if the WAVE cache needs refilling to keep
(1)  187/      20 :                     ; it playing.
(1)  188/      20 :                     ; --------------------------------------------------------
(1)  189/      20 :                     
(1)  190/      20 :                     		org 20h
(1)  191/      20 : F5                  dac_fill:	push	af		; Save af <-- Changes between PUSH AF(play) and RET(stop)
(1)  192/      21 : 3A 37 00            		ld	a,(dDacFifoMid)	; a - Get half-way value
(1)  193/      24 : D9                  		exx			; * swap regs
(1)  194/      25 : AC                  		xor	h		; Grab LSB.00
(1)  195/      26 : D9                  		exx			; * swap regs
(1)  196/      27 : E6 80               		and	80h		; Check if half-bit changed
(1)  197/      29 : C4 6B 14            		call	nz,dac_refill	; If yes, call refill and update LSB
(1)  198/      2C : F1                  		pop	af		; Restore af
(1)  199/      2D : C9                  		ret
(1)  200/      2E :                     
(1)  201/      2E :                     ; --------------------------------------------------------
(1)  202/      2E :                     ; 02Eh - User read/write values
(1)  203/      2E :                     
(1)  204/      2E : 00                  commZRead	db 0			; cmd fifo READ pointer (here)
(1)  205/      2F : 00                  psgHatMode	db 0			; Current PSGN mode
(1)  206/      30 : 00                  fmSpecial	db 0			; copy of FM3 enable bit
(1)  207/      31 : 00 00               sbeatAcc	dw 0			; Accumulates on each tick to trigger the sub beats
(1)  208/      33 : D6 00               sbeatPtck	dw 214			; Default global subbeats (this-32 for PAL) 214=125
(1)  209/      35 : 00                  x68ksrclsb	db 0			; readRom temporal LSB
(1)  210/      36 : 00                  x68ksrcmid	db 0			; readRom temporal MID
(1)  211/      37 : 00                  dDacFifoMid	db 0			; WAVE play halfway refill flag (00h/80h)
(1)  212/      38 :                     
(1)  213/      38 :                     ; --------------------------------------------------------
(1)  214/      38 :                     ; Z80 Interrupt at 0038h
(1)  215/      38 :                     ; --------------------------------------------------------
(1)  216/      38 :                     
(1)  217/      38 :                     		org 38h				; Align 38h
(1)  218/      38 : ED 73 F6 1C         		ld	(tickSpSet),sp		; Write TICK flag using current sp (read tickFlag only)
(1)  219/      3C : F3                  		di				; Disable interrupt
(1)  220/      3D : C9                  		ret
(1)  221/      3E :                     
(1)  222/      3E :                     ; --------------------------------------------------------
(1)  223/      3E :                     ; Initialize
(1)  224/      3E :                     ; --------------------------------------------------------
(1)  225/      3E :                     
(1)  226/      3E :                     z80_init:
(1)  227/      3E : CD 3D 11            		call	gema_init		; Init values
(1)  228/      41 : FB                  		ei
(1)  229/      42 :                     
(1)  230/      42 :                     ; --------------------------------------------------------
(1)  231/      42 :                     ; MAIN LOOP
(1)  232/      42 :                     ; --------------------------------------------------------
(1)  233/      42 :                     
(1)  234/      42 :                     drv_loop:
(1)  235/      42 : CF                  		rst	8
(1)  236/      43 : CD AF 11            		call	get_tick		; Check tick on VBlank
(1)  237/      46 : E7                  		rst	20h			; Refill wave here
(1)  238/      47 : CF                  		rst	8
(1)  239/      48 : 06 00               		ld	b,0			; b - Reset current flags (beat|tick)
(1)  240/      4A : 3A F8 1C            		ld	a,(tickCnt)		; Decrement tick counter
(1)  241/      4D : D6 01               		sub	1
(1)  242/      4F : 38 0B               		jr	c,.noticks		; If non-zero, no tick passed.
(1)  243/      51 : 32 F8 1C            		ld	(tickCnt),a
(1)  244/      54 : CD 8D 12            		call	chip_env		; Process PSG and YM
(1)  245/      57 : CD AF 11            		call	get_tick		; Check for another tick
(1)  246/      5A : 06 01               		ld 	b,01b			; Set TICK and clear BEAT flags (01b)
(1)  247/      5C :                     .noticks:
(1)  248/      5C : 3A 32 00            		ld	a,(sbeatAcc+1)		; check beat counter (scaled by tempo)
(1)  249/      5F : D6 01               		sub	1
(1)  250/      61 : 38 06               		jr	c,.nobeats
(1)  251/      63 : CF                  		rst	8
(1)  252/      64 : 32 32 00            		ld	(sbeatAcc+1),a		; 1/24 beat passed.
(1)  253/      67 : CB C8               		set	1,b			; Set BEAT (10b) flag
(1)  254/      69 :                     .nobeats:
(1)  255/      69 : CF                  		rst	8
(1)  256/      6A : 78                  		ld	a,b			; Any beat/tick bits set?
(1)  257/      6B : B7                  		or	a
(1)  258/      6C : 28 14               		jr	z,.neither
(1)  259/      6E : 32 F9 1C            		ld	(currTickBits),a	; Save BEAT/TICK bits
(1)  260/      71 : CF                  		rst	8
(1)  261/      72 : CD AF 11            		call	get_tick
(1)  262/      75 : CD EF 05            		call	set_chips		; Send changes to sound chips
(1)  263/      78 : CD AF 11            		call	get_tick
(1)  264/      7B : CF                  		rst	8
(1)  265/      7C : CD 24 02            		call	upd_track		; Update track data
(1)  266/      7F : CD AF 11            		call	get_tick
(1)  267/      82 :                     .neither:
(1)  268/      82 : CF                  		rst	8
(1)  270/      83 : CD 09 10            		call	zmars_send		; External communication with CD and 32X
(1)  272/      86 : CD AF 11            		call	get_tick
(1)  273/      89 :                     .next_cmd:
(1)  274/      89 : 3A 80 1F            		ld	a,(commZWrite)		; Check if commZ R/W indexes
(1)  275/      8C : 47                  		ld	b,a			; are in the same spot a == b
(1)  276/      8D : 3A 2E 00            		ld	a,(commZRead)
(1)  277/      90 : B8                  		cp	b			; If equal, loop back.
(1)  278/      91 : 28 AF               		jr	z,drv_loop
(1)  279/      93 : CF                  		rst	8
(1)  280/      94 : CD AC 00            		call	.grab_arg		; Read staring flag -1
(1)  281/      97 : FE FF               		cp	-1			; Got START -1?
(1)  282/      99 : 20 A7               		jr	nz,drv_loop		; If not, end of commands
(1)  283/      9B : CD AC 00            		call	.grab_arg		; Read command number
(1)  284/      9E : 87                  		add	a,a			; ID * 2
(1)  285/      9F : 21 CB 00            		ld	hl,.list		; Index-jump...
(1)  286/      A2 : 16 00               		ld	d,0
(1)  287/      A4 : 5F                  		ld	e,a
(1)  288/      A5 : 19                  		add	hl,de
(1)  289/      A6 : 7E                  		ld	a,(hl)
(1)  290/      A7 : 23                  		inc	hl
(1)  291/      A8 : 66                  		ld	h,(hl)
(1)  292/      A9 : CF                  		rst	8
(1)  293/      AA : 6F                  		ld	l,a
(1)  294/      AB : E9                  		jp	(hl)
(1)  295/      AC :                     
(1)  296/      AC :                     ; --------------------------------------------------------
(1)  297/      AC :                     ; Read cmd byte, auto re-rolls to 3Fh
(1)  298/      AC :                     ; --------------------------------------------------------
(1)  299/      AC :                     
(1)  300/      AC :                     .grab_arg:
(1)  301/      AC : D5                  		push	de
(1)  302/      AD : E5                  		push	hl
(1)  303/      AE :                     .getcbytel:
(1)  304/      AE : 3A 80 1F            		ld	a,(commZWrite)
(1)  305/      B1 : 57                  		ld	d,a
(1)  306/      B2 : CF                  		rst	8
(1)  307/      B3 : 3A 2E 00            		ld	a,(commZRead)
(1)  308/      B6 : BA                  		cp	d		; commZ R/W indexes are the same?
(1)  309/      B7 : 28 F5               		jr	z,.getcbytel	; wait until these counters change.
(1)  310/      B9 : 16 00               		ld	d,0
(1)  311/      BB : 5F                  		ld	e,a
(1)  312/      BC : 21 60 1F            		ld	hl,commZfifo	; Read commZ list + index
(1)  313/      BF : 19                  		add	hl,de
(1)  314/      C0 : CF                  		rst	8
(1)  315/      C1 : 3C                  		inc	a
(1)  316/      C2 : E6 1F               		and	MAX_ZCMND-1	; ** commZ list buffer limit
(1)  317/      C4 : 32 2E 00            		ld	(commZRead),a
(1)  318/      C7 : 7E                  		ld	a,(hl)		; a - got this byte from the buffer
(1)  319/      C8 : E1                  		pop	hl
(1)  320/      C9 : D1                  		pop	de
(1)  321/      CA : C9                  		ret
(1)  322/      CB :                     
(1)  323/      CB :                     ; --------------------------------------------------------
(1)  324/      CB :                     
(1)  325/      CB :                     .list:
(1)  326/      CB : DB 00               		dw .cmnd_0		; 00h - TESTING
(1)  327/      CD : DE 00               		dw .cmnd_1		; 01h - Set Master tracklist
(1)  328/      CF : F7 00               		dw .cmnd_2		; 02h - Play by track number
(1)  329/      D1 : 31 01               		dw .cmnd_3		; 03h - Stop by track number
(1)  330/      D3 : DB 00               		dw .cmnd_0		; 04h - **
(1)  331/      D5 : 6F 01               		dw .cmnd_5		; 05h - Fade volume (FadeIn/FadeOut)
(1)  332/      D7 : A8 01               		dw .cmnd_6		; 06h - Set maximum volume to slot
(1)  333/      D9 : E1 01               		dw .cmnd_7		; 07h - Set GLOBAL sub-beats
(1)  334/      DB :                     
(1)  335/      DB :                     ; --------------------------------------------------------
(1)  336/      DB :                     ; Command 00h
(1)  337/      DB :                     ;
(1)  338/      DB :                     ; Reserved for TESTING purposes.
(1)  339/      DB :                     ; --------------------------------------------------------
(1)  340/      DB :                     
(1)  341/      DB :                     .cmnd_0:
(1)  342/      DB : C3 89 00            		jp	.next_cmd
(1)  343/      DE :                     
(1)  344/      DE :                     ; --------------------------------------------------------
(1)  345/      DE :                     ; Command 01h:
(1)  346/      DE :                     ;
(1)  347/      DE :                     ; Set the Track MASTER-list.
(1)  348/      DE :                     ; --------------------------------------------------------
(1)  349/      DE :                     
(1)  350/      DE :                     .cmnd_1:
(1)  351/      DE : 21 1F 00            		ld	hl,gemaMstrListPos+3	; 32-bit big endian
(1)  352/      E1 : CD AC 00            		call	.grab_arg		; $000000xx
(1)  353/      E4 : 77                  		ld	(hl),a
(1)  354/      E5 : 2B                  		dec	hl
(1)  355/      E6 : CD AC 00            		call	.grab_arg		; $0000xx00
(1)  356/      E9 : 77                  		ld	(hl),a
(1)  357/      EA : 2B                  		dec	hl
(1)  358/      EB : CD AC 00            		call	.grab_arg		; $00xx0000
(1)  359/      EE : 77                  		ld	(hl),a
(1)  360/      EF : 2B                  		dec	hl
(1)  361/      F0 : CD AC 00            		call	.grab_arg		; $xx000000 (filler)
(1)  362/      F3 : 77                  		ld	(hl),a
(1)  363/      F4 : C3 89 00            		jp	.next_cmd
(1)  364/      F7 :                     
(1)  365/      F7 :                     ; --------------------------------------------------------
(1)  366/      F7 :                     ; Command 02h:
(1)  367/      F7 :                     ;
(1)  368/      F7 :                     ; Make new track by sequence number
(1)  369/      F7 :                     ;
(1)  370/      F7 :                     ; Arguments:
(1)  371/      F7 :                     ; SeqID,BlockPos,SlotIndex(If -1 autofill)
(1)  372/      F7 :                     ; --------------------------------------------------------
(1)  373/      F7 :                     
(1)  374/      F7 :                     .cmnd_2:
(1)  375/      F7 : CD AC 00            		call	.grab_arg		; d1: Sequence ID
(1)  376/      FA : 4F                  		ld	c,a			; copy as c
(1)  377/      FB : CD AC 00            		call	.grab_arg		; d2: Block from
(1)  378/      FE : 47                  		ld	b,a			; copy as b
(1)  379/      FF : CF                  		rst	8
(1)  380/     100 : CD AC 00            		call	.grab_arg		; d0: Slot index
(1)  381/     103 : FD 21 FC 19         		ld	iy,nikona_BuffList	; iy - Slot buffer list
(1)  382/     107 : B7                  		or	a
(1)  383/     108 : FA 17 01            		jp	m,.srch_mode
(1)  384/     10B :                     ; 		cp	-1			; if d2 == -1, search
(1)  385/     10B :                     ; 		jr	z,.srch_mode
(1)  386/     10B : FE 03               		cp	MAX_SLOTS		; If maxed out slots
(1)  387/     10D : D2 89 00            		jp	nc,.next_cmd
(1)  388/     110 : CF                  		rst	8
(1)  389/     111 : CD FF 01            		call	.cmnd_rdslot
(1)  390/     114 : C3 26 01            		jp	.wrtto_slot
(1)  391/     117 :                     ; -1
(1)  392/     117 :                     .srch_mode:
(1)  393/     117 : CD 11 02            		call	.srch_slot
(1)  394/     11A : FE FF               		cp	-1
(1)  395/     11C : CA 89 00            		jp	z,.next_cmd		; Then skip, no free slot.
(1)  396/     11F : CB 7E               		bit	7,(hl)			; Is this track free?
(1)  397/     121 : CA 26 01            		jp	z,.wrtto_slot
(1)  398/     124 : 18 F1               		jr	.srch_mode
(1)  399/     126 :                     .wrtto_slot:
(1)  400/     126 : 36 C0               		ld	(hl),0C0h		; ** Write trk_Status flags: Enable+Restart
(1)  401/     128 : 23                  		inc	hl
(1)  402/     129 : CF                  		rst	8
(1)  403/     12A : 71                  		ld	(hl),c			; ** write trk_SeqId
(1)  404/     12B : 23                  		inc	hl
(1)  405/     12C : 70                  		ld	(hl),b			; ** write trk_SetBlk
(1)  406/     12D : 79                  		ld	a,c
(1)  407/     12E : C3 89 00            		jp	.next_cmd
(1)  408/     131 :                     
(1)  409/     131 :                     ; --------------------------------------------------------
(1)  410/     131 :                     ; Command 03h:
(1)  411/     131 :                     ;
(1)  412/     131 :                     ; Stop track with the same sequence number
(1)  413/     131 :                     ;
(1)  414/     131 :                     ; SeqID,SlotIndex(-1 allslots)
(1)  415/     131 :                     ; --------------------------------------------------------
(1)  416/     131 :                     
(1)  417/     131 :                     .cmnd_3:
(1)  418/     131 : CD AC 00            		call	.grab_arg			; d1: Sequence ID
(1)  419/     134 : 4F                  		ld	c,a				; copy to c
(1)  420/     135 : CD AC 00            		call	.grab_arg			; d0: Slot index
(1)  421/     138 : FD 21 FC 19         		ld	iy,nikona_BuffList		; iy - Slot buffer list
(1)  422/     13C : B7                  		or	a
(1)  423/     13D : FA 4F 01            		jp	m,.srch_del			; if -1, search for all with same ID
(1)  424/     140 : FE 03               		cp	MAX_SLOTS			; If maxed out slots
(1)  425/     142 : D2 89 00            		jp	nc,.next_cmd
(1)  426/     145 : CF                  		rst	8
(1)  427/     146 : CD FF 01            		call	.cmnd_rdslot
(1)  428/     149 : CD 5C 01            		call	.wrtto_del
(1)  429/     14C : C3 89 00            		jp	.next_cmd
(1)  430/     14F :                     ; -1
(1)  431/     14F :                     .srch_del:
(1)  432/     14F : CD 11 02            		call	.srch_slot
(1)  433/     152 : FE FF               		cp	-1
(1)  434/     154 : CA 89 00            		jp	z,.next_cmd
(1)  435/     157 : CD 5C 01            		call	.wrtto_del
(1)  436/     15A : 18 F3               		jr	.srch_del
(1)  437/     15C :                     .wrtto_del:
(1)  438/     15C : CB 7E               		bit	7,(hl)
(1)  439/     15E : C8                  		ret	z
(1)  440/     15F : CB 79               		bit	7,c		; <-- lazy -1 check
(1)  441/     161 : 20 05               		jr	nz,.del_all
(1)  442/     163 : DD 7E 01            		ld	a,(ix+trk_SeqId)
(1)  443/     166 : B9                  		cp	c
(1)  444/     167 : C0                  		ret	nz
(1)  445/     168 :                     .del_all:
(1)  446/     168 : 36 FF               		ld	(hl),-1		; -1 flag, stop channel and clear slot
(1)  447/     16A : 23                  		inc	hl
(1)  448/     16B : 36 FF               		ld	(hl),-1		; Reset seqId
(1)  449/     16D : CF                  		rst	8
(1)  450/     16E : C9                  		ret
(1)  451/     16F :                     
(1)  452/     16F :                     ; --------------------------------------------------------
(1)  453/     16F :                     ; Command 05h:
(1)  454/     16F :                     ;
(1)  455/     16F :                     ; Fade volume (FadeIn/FadeOut)
(1)  456/     16F :                     ;
(1)  457/     16F :                     ; Arguments:
(1)  458/     16F :                     ; TargetVol,SlotIndex(If -1 autofill)
(1)  459/     16F :                     ; --------------------------------------------------------
(1)  460/     16F :                     
(1)  461/     16F :                     .cmnd_5:
(1)  462/     16F : CD AC 00            		call	.grab_arg		; d1: Master volume
(1)  463/     172 : 4F                  		ld	c,a			; copy to c
(1)  464/     173 : CD AC 00            		call	.grab_arg		; d0: Slot index
(1)  465/     176 : FD 21 FC 19         		ld	iy,nikona_BuffList	; iy - Slot buffer list
(1)  466/     17A : B7                  		or	a
(1)  467/     17B : FA 8D 01            		jp	m,.srch_fvol		; if -1, search for all with same ID
(1)  468/     17E : FE 03               		cp	MAX_SLOTS		; If maxed out slots
(1)  469/     180 : D2 89 00            		jp	nc,.next_cmd
(1)  470/     183 : CF                  		rst	8
(1)  471/     184 : CD FF 01            		call	.cmnd_rdslot
(1)  472/     187 : CD 9A 01            		call	.wrtto_fvol
(1)  473/     18A : C3 89 00            		jp	.next_cmd
(1)  474/     18D :                     ; -1
(1)  475/     18D :                     .srch_fvol:
(1)  476/     18D : CD 11 02            		call	.srch_slot
(1)  477/     190 : FE FF               		cp	-1
(1)  478/     192 : CA 89 00            		jp	z,.next_cmd		; Then skip, no free slot.
(1)  479/     195 : CD 9A 01            		call	.wrtto_fvol
(1)  480/     198 : 18 F3               		jr	.srch_fvol
(1)  481/     19A :                     .wrtto_fvol:
(1)  482/     19A : CB 7E               		bit	7,(hl)			; Active?
(1)  483/     19C : C8                  		ret	z
(1)  484/     19D : CB DE               		set	3,(hl)			; Volume update flag
(1)  485/     19F : DD 71 18            		ld	(ix+trk_VolFdTarget),c
(1)  486/     1A2 : DD 36 0F 00         		ld	(ix+trk_VolMaster+1),0
(1)  487/     1A6 : CF                  		rst	8
(1)  488/     1A7 : C9                  		ret
(1)  489/     1A8 :                     
(1)  490/     1A8 :                     ; --------------------------------------------------------
(1)  491/     1A8 :                     ; Command 06h:
(1)  492/     1A8 :                     ;
(1)  493/     1A8 :                     ; Set track's master volume
(1)  494/     1A8 :                     ;
(1)  495/     1A8 :                     ; Arguments:
(1)  496/     1A8 :                     ; MasterVol,SlotIndex(If -1 autofill)
(1)  497/     1A8 :                     ; --------------------------------------------------------
(1)  498/     1A8 :                     
(1)  499/     1A8 :                     .cmnd_6:
(1)  500/     1A8 : CD AC 00            		call	.grab_arg		; d1: Master volume
(1)  501/     1AB : 4F                  		ld	c,a			; copy to c
(1)  502/     1AC : CD AC 00            		call	.grab_arg		; d0: Slot index
(1)  503/     1AF : FD 21 FC 19         		ld	iy,nikona_BuffList	; iy - Slot buffer list
(1)  504/     1B3 : B7                  		or	a
(1)  505/     1B4 : FA C6 01            		jp	m,.srch_vol		; if -1, search for all with same ID
(1)  506/     1B7 : FE 03               		cp	MAX_SLOTS		; If maxed out slots
(1)  507/     1B9 : D2 89 00            		jp	nc,.next_cmd
(1)  508/     1BC : CF                  		rst	8
(1)  509/     1BD : CD FF 01            		call	.cmnd_rdslot
(1)  510/     1C0 : CD D3 01            		call	.wrtto_vol
(1)  511/     1C3 : C3 89 00            		jp	.next_cmd
(1)  512/     1C6 :                     ; -1
(1)  513/     1C6 :                     .srch_vol:
(1)  514/     1C6 : CD 11 02            		call	.srch_slot
(1)  515/     1C9 : FE FF               		cp	-1
(1)  516/     1CB : CA 89 00            		jp	z,.next_cmd		; Then skip, no free slot.
(1)  517/     1CE : CD D3 01            		call	.wrtto_vol
(1)  518/     1D1 : 18 F3               		jr	.srch_vol
(1)  519/     1D3 :                     .wrtto_vol:
(1)  520/     1D3 : CB DE               		set	3,(hl)			; Volume update flag
(1)  521/     1D5 : DD 71 0E            		ld	(ix+trk_VolMaster),c
(1)  522/     1D8 : DD 71 18            		ld	(ix+trk_VolFdTarget),c
(1)  523/     1DB : DD 36 0F 00         		ld	(ix+trk_VolMaster+1),0
(1)  524/     1DF : CF                  		rst	8
(1)  525/     1E0 : C9                  		ret
(1)  526/     1E1 :                     
(1)  527/     1E1 :                     ; --------------------------------------------------------
(1)  528/     1E1 :                     ; Command 07h:
(1)  529/     1E1 :                     ;
(1)  530/     1E1 :                     ; Set global sub-beats
(1)  531/     1E1 :                     ; --------------------------------------------------------
(1)  532/     1E1 :                     
(1)  533/     1E1 :                     .cmnd_7:
(1)  534/     1E1 : CD AC 00            		call	.grab_arg	; d0.w: $00xx
(1)  535/     1E4 : 4F                  		ld	c,a
(1)  536/     1E5 : CD AC 00            		call	.grab_arg	; d0.w: $xx00
(1)  537/     1E8 : 67                  		ld	h,a
(1)  538/     1E9 : 69                  		ld	l,c
(1)  539/     1EA : 3A 88 1F            		ld	a,(palMode)
(1)  540/     1ED : B7                  		or	a
(1)  541/     1EE : 28 04               		jr	z,.not_pal
(1)  542/     1F0 : 11 28 00            		ld	de,40
(1)  543/     1F3 : 19                  		add	hl,de
(1)  544/     1F4 :                     .not_pal:
(1)  545/     1F4 : 7C                  		ld	a,h
(1)  546/     1F5 : 32 34 00            		ld	(sbeatPtck+1),a
(1)  547/     1F8 : 7D                  		ld	a,l
(1)  548/     1F9 : 32 33 00            		ld	(sbeatPtck),a
(1)  549/     1FC : C3 89 00            		jp	.next_cmd
(1)  550/     1FF :                     
(1)  551/     1FF :                     ; --------------------------------------------------------
(1)  552/     1FF :                     ; Shared subs
(1)  553/     1FF :                     ; --------------------------------------------------------
(1)  554/     1FF :                     
(1)  555/     1FF :                     .cmnd_rdslot:
(1)  556/     1FF : 87                  		add	a,a			; ** MANUAL MAX_BUFFNTRY
(1)  557/     200 : 87                  		add	a,a			; id*8
(1)  558/     201 : 87                  		add	a,a
(1)  559/     202 : 16 00               		ld	d,0
(1)  560/     204 : 5F                  		ld	e,a
(1)  561/     205 : FD 19               		add	iy,de
(1)  562/     207 : FD 6E 00            		ld	l,(iy)
(1)  563/     20A : FD 66 01            		ld	h,(iy+1)
(1)  564/     20D : E5                  		push	hl
(1)  565/     20E : DD E1               		pop	ix
(1)  566/     210 : C9                  		ret
(1)  567/     211 :                     
(1)  568/     211 :                     ; ------------------------------------------------
(1)  569/     211 :                     ; iy - nikona_BuffList
(1)  570/     211 :                     
(1)  571/     211 :                     .srch_slot:
(1)  572/     211 : FD 7E 00            		ld	a,(iy)
(1)  573/     214 : FE FF               		cp	-1			; End of list?
(1)  574/     216 : C8                  		ret	z
(1)  575/     217 : FD 66 01            		ld	h,(iy+1)		; hl - Current track slot
(1)  576/     21A : 6F                  		ld	l,a
(1)  577/     21B : E5                  		push	hl
(1)  578/     21C : DD E1               		pop	ix
(1)  579/     21E : 11 08 00            		ld	de,MAX_BUFFNTRY
(1)  580/     221 : FD 19               		add	iy,de			; Next entry for later
(1)  581/     223 : C9                  		ret
(1)  582/     224 :                     
(1)  583/     224 :                     ; ====================================================================
(1)  584/     224 :                     ; ----------------------------------------------------------------
(1)  585/     224 :                     ; MAIN Playback section
(1)  586/     224 :                     ; ----------------------------------------------------------------
(1)  587/     224 :                     
(1)  588/     224 :                     ; --------------------------------------------------------
(1)  589/     224 :                     ; Read mini-impulse-tracker data
(1)  590/     224 :                     ; --------------------------------------------------------
(1)  591/     224 :                     
(1)  592/     224 :                     upd_track:
(1)  593/     224 : E7                  		rst	20h
(1)  594/     225 : CD AF 11            		call	get_tick		; Check for tick flag
(1)  595/     228 :                     	; ** MANUAL BUFF READ **
(1)  596/     228 : FD 21 0D 19         		ld	iy,trkBuff_0
(1)  597/     22C : CD 3B 02            		call	.read_track
(1)  598/     22F : FD 21 4C 19         		ld	iy,trkBuff_1
(1)  599/     233 : CD 3B 02            		call	.read_track
(1)  600/     236 : CF                  		rst	8
(1)  601/     237 : FD 21 8B 19         		ld	iy,trkBuff_2
(1)  602/     23B :                     
(1)  603/     23B :                     ; ----------------------------------------
(1)  604/     23B :                     ; Read track
(1)  605/     23B :                     ;
(1)  606/     23B :                     ; iy - Track buffer
(1)  607/     23B :                     ; ----------------------------------------
(1)  608/     23B :                     
(1)  609/     23B :                     .read_track:
(1)  610/     23B : CF                  		rst	8
(1)  611/     23C : FD 46 00            		ld	b,(iy+trk_Status)	; b - Track status and settings
(1)  612/     23F : CB 78               		bit	7,b			; bit7: Track active?
(1)  613/     241 : C8                  		ret	z			; Return if not.
(1)  614/     242 : 78                  		ld	a,b
(1)  615/     243 : FE FF               		cp	-1			; Flag is -1?
(1)  616/     245 : C8                  		ret	z			; Return if mid-flag
(1)  617/     246 : CF                  		rst	8
(1)  618/     247 :                     	; ----------------------------------------
(1)  619/     247 :                     	; Track volume changes
(1)  620/     247 : FD 6E 0F            		ld	l,(iy+trk_VolMaster+1)
(1)  621/     24A : FD 66 0E            		ld	h,(iy+trk_VolMaster)
(1)  622/     24D : FD 4E 18            		ld	c,(iy+trk_VolFdTarget)
(1)  623/     250 : 11 00 01            		ld	de,0100h		; <-- Manual volfade speed MAX 0100h
(1)  624/     253 : 79                  		ld	a,c
(1)  625/     254 : BC                  		cp	h
(1)  626/     255 : 28 1E               		jr	z,.keep_vol
(1)  627/     257 : 30 06               		jr	nc,.fade_out
(1)  628/     259 : 11 80 FF            		ld	de,-80h
(1)  629/     25C : 19                  		add	hl,de
(1)  630/     25D : 18 0C               		jr	.too_much
(1)  631/     25F :                     .fade_out:
(1)  632/     25F : 19                  		add	hl,de
(1)  633/     260 : CF                  		rst	8
(1)  634/     261 : 7C                  		ld	a,h
(1)  635/     262 : B9                  		cp	c
(1)  636/     263 : 38 06               		jr	c,.too_much
(1)  637/     265 : 61                  		ld	h,c
(1)  638/     266 : 2E 00               		ld	l,0
(1)  639/     268 : FD 71 18            		ld	(iy+trk_VolFdTarget),c
(1)  640/     26B :                     .too_much:
(1)  641/     26B : FD CB 00 DE         		set	3,(iy+trk_Status)	; Volume update flag
(1)  642/     26F : FD 75 0F            		ld	(iy+trk_VolMaster+1),l
(1)  643/     272 : FD 74 0E            		ld	(iy+trk_VolMaster),h
(1)  644/     275 :                     .keep_vol:
(1)  645/     275 :                     	; ----------------------------------------
(1)  646/     275 : 3A F9 1C            		ld	a,(currTickBits)	; a - Tick/Beat bits
(1)  647/     278 : CB 40               		bit	0,b			; bit0: This track uses Beats?
(1)  648/     27A : 28 03               		jr	z,.sfxmd
(1)  649/     27C : CB 4F               		bit	1,a			; BEAT passed?
(1)  650/     27E : C8                  		ret	z			; No BEAT.
(1)  651/     27F :                     .sfxmd:
(1)  652/     27F : CB 47               		bit	0,a			; TICK passed?
(1)  653/     281 : C8                  		ret	z			; No TICK.
(1)  654/     282 : CF                  		rst	8
(1)  655/     283 :                     	; ----------------------------------------
(1)  656/     283 :                     	; Start reading notes
(1)  657/     283 : CB 70               		bit	6,b			; bit6: Restart/First time?
(1)  658/     285 : C4 08 05            		call	nz,.first_fill
(1)  659/     288 : CB 68               		bit	5,b			; bit5: FILL request by effect?
(1)  660/     28A : C4 01 05            		call	nz,.effect_fill
(1)  661/     28D : FD 7E 12            		ld	a,(iy+trk_TickTmr)	; TICK ex-timer for this track
(1)  662/     290 : 3D                  		dec	a
(1)  663/     291 : FD 77 12            		ld	(iy+trk_TickTmr),a
(1)  664/     294 : B7                  		or	a			; Check a
(1)  665/     295 : C0                  		ret	nz			; If Tick timer != 0, exit.
(1)  666/     296 : CF                  		rst	8
(1)  667/     297 : FD 7E 03            		ld	a,(iy+trk_TickSet)	; Set new tick timer
(1)  668/     29A : FD 77 12            		ld	(iy+trk_TickTmr),a
(1)  669/     29D :                     	; ----------------------------------------
(1)  670/     29D : FD 4E 0C            		ld	c,(iy+trk_Rows)		; bc - Set row counter
(1)  671/     2A0 : FD 46 0D            		ld	b,(iy+(trk_Rows+1))
(1)  672/     2A3 : 79                  		ld	a,c			; Check rowcount
(1)  673/     2A4 : B0                  		or	b
(1)  674/     2A5 : 20 14               		jr	nz,.row_active		; If bc != 0: row is currenly playing.
(1)  675/     2A7 :                     	; ----------------------------------------
(1)  676/     2A7 :                     	; Read next block
(1)  677/     2A7 : CF                  		rst	8
(1)  678/     2A8 : FD 7E 13            		ld	a,(iy+trk_currBlk)	; Next block
(1)  679/     2AB : 3C                  		inc	a
(1)  680/     2AC : FD 77 13            		ld 	(iy+trk_currBlk),a
(1)  681/     2AF : CD 1E 04            		call	.set_track		; Read track data ** ROM ACCESS **
(1)  682/     2B2 : FE FF               		cp	-1			; Track finished?
(1)  683/     2B4 : C8                  		ret	z
(1)  684/     2B5 : FD 4E 0C            		ld	c,(iy+trk_Rows)		; Set new rowcount to bc
(1)  685/     2B8 : FD 46 0D            		ld	b,(iy+(trk_Rows+1))
(1)  686/     2BB :                     	; ----------------------------------------
(1)  687/     2BB :                     	; bc - Row count
(1)  688/     2BB :                     .row_active:
(1)  689/     2BB : CF                  		rst	8
(1)  690/     2BC : FD 6E 0A            		ld	l,(iy+trk_Read)		; hl - CURRENT pattern to read
(1)  691/     2BF : FD 66 0B            		ld	h,(iy+((trk_Read+1)))
(1)  692/     2C2 :                     
(1)  693/     2C2 :                     ; --------------------------------
(1)  694/     2C2 :                     ; Main read-loop
(1)  695/     2C2 :                     ; --------------------------------
(1)  696/     2C2 :                     
(1)  697/     2C2 :                     .next_note:
(1)  698/     2C2 : FD 7E 11            		ld	a,(iy+trk_rowPause)	; Check row timer
(1)  699/     2C5 : B7                  		or	a
(1)  700/     2C6 : 20 16               		jr	nz,.decrow
(1)  701/     2C8 : 7E                  		ld	a,(hl)			; Check if byte is a timer or a note
(1)  702/     2C9 : B7                  		or	a
(1)  703/     2CA : 28 06               		jr	z,.exit			; If == 00h: exit
(1)  704/     2CC : FA E9 02            		jp	m,.has_note		; If 80h-0FFh: Note data
(1)  705/     2CF : FD 77 11            		ld	(iy+trk_rowPause),a	; If 01h-07Fh: Row-pause timer
(1)  706/     2D2 :                     
(1)  707/     2D2 :                     ; --------------------------------
(1)  708/     2D2 :                     ; Exit
(1)  709/     2D2 :                     ; --------------------------------
(1)  710/     2D2 :                     
(1)  711/     2D2 :                     .exit:
(1)  712/     2D2 : CF                  		rst	8
(1)  713/     2D3 : CD E6 03            		call	.inc_cpatt		; * Increment patt pos
(1)  714/     2D6 : FD 75 0A            		ld	(iy+trk_Read),l		; Update READ location
(1)  715/     2D9 : FD 74 0B            		ld	(iy+((trk_Read+1))),h
(1)  716/     2DC : 18 03               		jr	.decrow_e
(1)  717/     2DE :                     .decrow:
(1)  718/     2DE : FD 35 11            		dec	(iy+trk_rowPause)	; Decrement row-pause timer
(1)  719/     2E1 :                     .decrow_e:
(1)  720/     2E1 : 0B                  		dec	bc			; Decrement rowcount
(1)  721/     2E2 : FD 71 0C            		ld	(iy+trk_Rows),c		; Write last row to memory
(1)  722/     2E5 : FD 70 0D            		ld	(iy+(trk_Rows+1)),b
(1)  723/     2E8 : C9                  		ret	; Exit.
(1)  724/     2E9 :                     
(1)  725/     2E9 :                     ; --------------------------------
(1)  726/     2E9 :                     ; New note request
(1)  727/     2E9 :                     ;
(1)  728/     2E9 :                     ; a - %1tcccccc
(1)  729/     2E9 :                     ;   | t - next byte has new type
(1)  730/     2E9 :                     ;   | c - channel
(1)  731/     2E9 :                     ; --------------------------------
(1)  732/     2E9 :                     
(1)  733/     2E9 :                     .has_note:
(1)  734/     2E9 : CF                  		rst	8
(1)  735/     2EA : C5                  		push	bc			; Save rowcount
(1)  736/     2EB : 4F                  		ld	c,a			; Copy patt byte control to c
(1)  737/     2EC : CD E6 03            		call	.inc_cpatt		; * Increment patt pos
(1)  738/     2EF : E5                  		push	hl			; Save hl patt pos
(1)  739/     2F0 : FD E5               		push	iy
(1)  740/     2F2 : E1                  		pop	hl
(1)  741/     2F3 : DD 21 00 1E         		ld	ix,trkChnls		; ix - Channels buffer
(1)  742/     2F7 : 11 25 00            		ld	de,trk_ChnIndx		; <-- this clears d
(1)  743/     2FA : CF                  		rst	8
(1)  744/     2FB : 19                  		add	hl,de			; hl - Track's index points buffer
(1)  745/     2FC : 79                  		ld	a,c			; Get patt note position
(1)  746/     2FD : E6 1F               		and	00011111b		; Filter index bits
(1)  747/     2FF : 5F                  		ld	e,a			; Save as e
(1)  748/     300 : 19                  		add	hl,de			; Increment more by this pos
(1)  749/     301 : 7E                  		ld	a,(hl)			; Check if this index is occupied.
(1)  750/     302 : B7                  		or	a
(1)  751/     303 : 28 0A               		jr	z,.srch_new		; If == 0, new index
(1)  752/     305 : E6 1F               		and	00011111b		; If already used, read that channel
(1)  753/     307 : 87                  		add	a,a
(1)  754/     308 : 87                  		add	a,a
(1)  755/     309 : 87                  		add	a,a
(1)  756/     30A : 5F                  		ld	e,a
(1)  757/     30B : DD 19               		add	ix,de
(1)  758/     30D : 18 2B               		jr	.cont_chnl
(1)  759/     30F :                     
(1)  760/     30F :                     ; Make NEW channel
(1)  761/     30F :                     ; ix - channel list start
(1)  762/     30F :                     .srch_new:
(1)  763/     30F : CF                  		rst	8
(1)  764/     310 : 06 1F               		ld	b,MAX_TRKCHN-1	; Max channels to check - 1
(1)  765/     312 : 16 00               		ld	d,0		; Reset out index
(1)  766/     314 :                     .next_chnl:
(1)  767/     314 : DD 7E 00            		ld	a,(ix)		; Read chnl_Flags
(1)  768/     317 : B7                  		or	a		; If plus, track channel is free
(1)  769/     318 : F2 2F 03            		jp	p,.chnl_free
(1)  770/     31B : DD 23               		inc	ix		; Search next channel, increment by 8
(1)  771/     31D : DD 23               		inc	ix
(1)  772/     31F : DD 23               		inc	ix
(1)  773/     321 : DD 23               		inc	ix
(1)  774/     323 : CF                  		rst	8
(1)  775/     324 : DD 23               		inc	ix
(1)  776/     326 : DD 23               		inc	ix
(1)  777/     328 : DD 23               		inc	ix
(1)  778/     32A : DD 23               		inc	ix
(1)  779/     32C : 14                  		inc	d		; Increment out index
(1)  780/     32D : 10 E5               		djnz	.next_chnl
(1)  781/     32F :                     .chnl_free:
(1)  782/     32F : CF                  		rst	8
(1)  783/     330 : 7A                  		ld	a,d			; Read index we got
(1)  784/     331 : E6 1F               		and	00011111b		; Filter bits
(1)  785/     333 : F6 80               		or	10000000b		; + set as used
(1)  786/     335 : 77                  		ld	(hl),a			; Write index slot
(1)  787/     336 : DD CB 00 FE         		set	7,(ix+chnl_Flags)	; Enable channel on the list
(1)  788/     33A :                     .cont_chnl:
(1)  789/     33A :                     
(1)  790/     33A : E1                  		pop	hl			; Recover patt pos
(1)  791/     33B :                     	; ix - current channel
(1)  792/     33B : CF                  		rst	8
(1)  793/     33C : DD 46 07            		ld	b,(ix+chnl_Type)	; b - current TYPE byte
(1)  794/     33F : CB 71               		bit	6,c			; This byte has new TYPE setting?
(1)  795/     341 : 28 08               		jr	z,.old_type
(1)  796/     343 : 7E                  		ld	a,(hl)
(1)  797/     344 : DD 77 07            		ld	(ix+chnl_Type),a	; Update TYPE byte
(1)  798/     347 : 47                  		ld	b,a			; Set to b
(1)  799/     348 : CD E6 03            		call	.inc_cpatt		; Next patt pos
(1)  800/     34B :                     .old_type:
(1)  801/     34B :                     	; b - evinEVIN
(1)  802/     34B :                     	;     E-effect/V-volume/I-instrument/N-note
(1)  803/     34B :                     	;     evin: byte is already stored on track-channel buffer
(1)  804/     34B :                     	;     EVIN: next byte(s) contain a new value. for eff:2 bytes
(1)  805/     34B :                     
(1)  806/     34B : CF                  		rst	8
(1)  807/     34C : CB 40               		bit	0,b			; New NOTE?
(1)  808/     34E : 28 07               		jr	z,.no_note
(1)  809/     350 : 7E                  		ld	a,(hl)			; Set NOTE and increment patt
(1)  810/     351 : DD 77 02            		ld	(ix+chnl_Note),a
(1)  811/     354 : CD E6 03            		call	.inc_cpatt
(1)  812/     357 :                     .no_note:
(1)  813/     357 : CB 48               		bit	1,b			; New INS?
(1)  814/     359 : 28 07               		jr	z,.no_ins
(1)  815/     35B : 7E                  		ld	a,(hl)			; Set INS and increment patt
(1)  816/     35C : DD 77 03            		ld	(ix+chnl_Ins),a
(1)  817/     35F : CD E6 03            		call	.inc_cpatt
(1)  818/     362 :                     .no_ins:
(1)  819/     362 : CB 50               		bit	2,b			; New VOL?
(1)  820/     364 : 28 07               		jr	z,.no_vol
(1)  821/     366 : 7E                  		ld	a,(hl)			; Set VOL and increment patt
(1)  822/     367 : DD 77 04            		ld	(ix+chnl_Vol),a
(1)  823/     36A : CD E6 03            		call	.inc_cpatt
(1)  824/     36D :                     .no_vol:
(1)  825/     36D : CB 58               		bit	3,b			; New EFFECT?
(1)  826/     36F : 28 0F               		jr	z,.no_eff
(1)  827/     371 : 7E                  		ld	a,(hl)			; Set EFFECT ID, incr patt
(1)  828/     372 : DD 77 05            		ld	(ix+chnl_EffId),a
(1)  829/     375 : CD E6 03            		call	.inc_cpatt
(1)  830/     378 : CF                  		rst	8
(1)  831/     379 : 7E                  		ld	a,(hl)			; Set EFFECT ARG, incr patt
(1)  832/     37A : DD 77 06            		ld	(ix+chnl_EffArg),a
(1)  833/     37D : CD E6 03            		call	.inc_cpatt
(1)  834/     380 :                     .no_eff:
(1)  835/     380 : 78                  		ld	a,b			; Merge the Impulse evin bits into main EVIN bits
(1)  836/     381 : 0F                  		rrca
(1)  837/     382 : 0F                  		rrca
(1)  838/     383 : 0F                  		rrca
(1)  839/     384 : 0F                  		rrca
(1)  840/     385 : E6 0F               		and	00001111b		; Filter bits
(1)  841/     387 : 4F                  		ld	c,a			; Save as c
(1)  842/     388 : 78                  		ld	a,b
(1)  843/     389 : E6 0F               		and	00001111b		; Filter again
(1)  844/     38B : B1                  		or	c			; Merge c with a
(1)  845/     38C : CF                  		rst	8
(1)  846/     38D : 4F                  		ld	c,a			; Save bit flags
(1)  847/     38E : DD 7E 00            		ld	a,(ix+chnl_Flags)
(1)  848/     391 : B1                  		or	c
(1)  849/     392 : DD 77 00            		ld	(ix+chnl_Flags),a
(1)  850/     395 : C1                  		pop	bc			; Restore rowcount
(1)  851/     396 :                     	; ----------------------------------------
(1)  852/     396 :                     	; Effects that affect internal playback
(1)  853/     396 : DD 7E 00            		ld	a,(ix+chnl_Flags)
(1)  854/     399 : E6 08               		and	1000b			; ONLY check for the EFFECT bit
(1)  855/     39B : CA C2 02            		jp	z,.next_note
(1)  856/     39E : DD 7E 05            		ld	a,(ix+chnl_EffId)
(1)  857/     3A1 : B7                  		or	a			; 00h = invalid effect
(1)  858/     3A2 : CA C2 02            		jp	z,.next_note
(1)  859/     3A5 : FE 01               		cp	1			; Effect A: Tick set
(1)  860/     3A7 : 28 0B               		jr	z,.eff_A
(1)  861/     3A9 : FE 02               		cp	2			; Effect B: Position Jump
(1)  862/     3AB : 28 18               		jr	z,.eff_B
(1)  863/     3AD : FE 03               		cp	3			; Effect C: Pattern break
(1)  864/     3AF : 28 32               		jr	z,.eff_C
(1)  865/     3B1 : C3 C2 02            		jp	.next_note
(1)  866/     3B4 :                     
(1)  867/     3B4 :                     ; ----------------------------------------
(1)  868/     3B4 :                     ; Effect A: Set ticks
(1)  869/     3B4 :                     ; ----------------------------------------
(1)  870/     3B4 :                     
(1)  871/     3B4 :                     .eff_A:
(1)  872/     3B4 : CF                  		rst	8
(1)  873/     3B5 : DD 5E 06            		ld	e,(ix+chnl_EffArg)	; e - ticks number
(1)  874/     3B8 : FD 73 03            		ld	(iy+trk_TickSet),e	; set for both Set and Timer.
(1)  875/     3BB : FD 73 12            		ld	(iy+trk_TickTmr),e
(1)  876/     3BE : DD CB 00 9E         		res	3,(ix+chnl_Flags)	; <-- Clear EFFECT bit
(1)  877/     3C2 : C3 C2 02            		jp	.next_note
(1)  878/     3C5 :                     
(1)  879/     3C5 :                     ; ----------------------------------------
(1)  880/     3C5 :                     ; Effect B: jump to a new block
(1)  881/     3C5 :                     ; ----------------------------------------
(1)  882/     3C5 :                     
(1)  883/     3C5 :                     .eff_B:
(1)  884/     3C5 : DD 5E 06            		ld	e,(ix+chnl_EffArg)	; e - Block SLOT to jump
(1)  885/     3C8 : FD 73 13            		ld 	(iy+trk_currBlk),e
(1)  886/     3CB : CF                  		rst	8
(1)  887/     3CC : FD 36 11 00         		ld	(iy+trk_rowPause),0	; Reset rowpause
(1)  888/     3D0 : DD CB 00 9E         		res	3,(ix+chnl_Flags)	; <-- Clear EFFECT bit
(1)  889/     3D4 : FD CB 00 EE         		set	5,(iy+trk_Status)	; set fill-from-effect flag on exit
(1)  890/     3D8 : 3E 80               		ld	a,80h
(1)  891/     3DA : FD 77 15            		ld	(iy+trk_BankHeads),a
(1)  892/     3DD : FD 77 16            		ld	(iy+trk_BankBlk),a
(1)  893/     3E0 : C3 C2 02            		jp	.next_note
(1)  894/     3E3 :                     
(1)  895/     3E3 :                     ; ----------------------------------------
(1)  896/     3E3 :                     ; Effect C: Pattern break/exit
(1)  897/     3E3 :                     ;
(1)  898/     3E3 :                     ; Only used on SFX, arguments ignored.
(1)  899/     3E3 :                     ; ----------------------------------------
(1)  900/     3E3 :                     
(1)  901/     3E3 :                     .eff_C:
(1)  902/     3E3 : C3 F6 04            		jp	.track_end
(1)  903/     3E6 :                     
(1)  904/     3E6 :                     ; ----------------------------------------
(1)  905/     3E6 :                     ; Increment the current patt position
(1)  906/     3E6 :                     ; and recieve more data
(1)  907/     3E6 :                     ;
(1)  908/     3E6 :                     ; Breaks:
(1)  909/     3E6 :                     ; a,e
(1)  910/     3E6 :                     ; ----------------------------------------
(1)  911/     3E6 :                     
(1)  912/     3E6 :                     .inc_cpatt:
(1)  913/     3E6 : FD 5E 08            		ld	e,(iy+trk_Cach)		; Read curret cache LSB
(1)  914/     3E9 : 7D                  		ld	a,l
(1)  915/     3EA : 3C                  		inc	a
(1)  916/     3EB : E6 1F               		and	MAX_RCACH-1
(1)  917/     3ED : FE 1E               		cp	MAX_RCACH-2		; ALMOST RAN OUT of bytes?
(1)  918/     3EF : 30 03               		jr	nc,.ran_out
(1)  919/     3F1 : B3                  		or	e
(1)  920/     3F2 : 6F                  		ld	l,a
(1)  921/     3F3 : C9                  		ret
(1)  922/     3F4 :                     .ran_out:
(1)  923/     3F4 : FD 6E 08            		ld	l,(iy+trk_Cach)
(1)  924/     3F7 : E5                  		push	hl
(1)  925/     3F8 : C5                  		push	bc
(1)  926/     3F9 : 06 00               		ld	b,0
(1)  927/     3FB : 4F                  		ld	c,a
(1)  928/     3FC : CF                  		rst	8
(1)  929/     3FD : 5D                  		ld	e,l
(1)  930/     3FE : 54                  		ld	d,h
(1)  931/     3FF : FD 6E 19            		ld	l,(iy+trk_RomPattRead)
(1)  932/     402 : FD 66 1A            		ld	h,(iy+(trk_RomPattRead+1))
(1)  933/     405 : FD 7E 1B            		ld	a,(iy+(trk_RomPattRead+2))
(1)  934/     408 : 09                  		add	hl,bc
(1)  935/     409 : CE 00               		adc	a,0
(1)  936/     40B : FD 75 19            		ld	(iy+trk_RomPattRead),l
(1)  937/     40E : FD 74 1A            		ld	(iy+(trk_RomPattRead+1)),h
(1)  938/     411 : CF                  		rst	8
(1)  939/     412 : FD 77 1B            		ld	(iy+(trk_RomPattRead+2)),a
(1)  940/     415 : 01 20 00            		ld	bc,MAX_RCACH
(1)  941/     418 : CD D0 11            		call	readRom		; *** ROM ACCESS ***
(1)  942/     41B : C1                  		pop	bc
(1)  943/     41C : E1                  		pop	hl
(1)  944/     41D : C9                  		ret
(1)  945/     41E :                     
(1)  946/     41E :                     ; ----------------------------------------
(1)  947/     41E :                     ; Set track pattern by trk_currBlk
(1)  948/     41E :                     ; ----------------------------------------
(1)  949/     41E :                     
(1)  950/     41E :                     .set_track:
(1)  951/     41E :                     	; ----------------------------------------
(1)  952/     41E :                     	; Make block id list
(1)  953/     41E : FD 5E 04            		ld	e,(iy+trk_Blocks)
(1)  954/     421 : FD 56 05            		ld	d,(iy+(trk_Blocks+1))
(1)  955/     424 : FD 7E 13            		ld	a,(iy+trk_currBlk)
(1)  956/     427 : 4F                  		ld	c,a
(1)  957/     428 : C5                  		push	bc
(1)  958/     429 : D5                  		push	de
(1)  959/     42A : CF                  		rst	8
(1)  960/     42B : 0F                  		rrca
(1)  961/     42C : 0F                  		rrca
(1)  962/     42D : 0F                  		rrca
(1)  963/     42E : E6 1F               		and	00011111b
(1)  964/     430 : FD 4E 16            		ld	c,(iy+trk_BankBlk)	; c - current block bank
(1)  965/     433 : CB 79               		bit	7,c			; First time?
(1)  966/     435 : 20 03               		jr	nz,.first_blk
(1)  967/     437 : B9                  		cp	c			; SAME instrument data?
(1)  968/     438 : 28 1D               		jr	z,.keep_blk
(1)  969/     43A :                     .first_blk:
(1)  970/     43A : CF                  		rst	8
(1)  971/     43B : FD 77 16            		ld	(iy+trk_BankBlk),a	; Save inst number
(1)  972/     43E : 07                  		rlca
(1)  973/     43F : 07                  		rlca
(1)  974/     440 : 07                  		rlca
(1)  975/     441 : 06 00               		ld	b,0
(1)  976/     443 : 4F                  		ld	c,a
(1)  977/     444 : FD 6E 22            		ld	l,(iy+trk_RomBlks)
(1)  978/     447 : FD 66 23            		ld	h,(iy+(trk_RomBlks+1))
(1)  979/     44A : FD 7E 24            		ld	a,(iy+(trk_RomBlks+2))
(1)  980/     44D : E7                  		rst	20h
(1)  981/     44E : 09                  		add	hl,bc
(1)  982/     44F : CE 00               		adc	a,0
(1)  983/     451 : 01 08 00            		ld	bc,8			; 8 blocks stored
(1)  984/     454 : CD D0 11            		call	readRom			; ** ROM ACCESS **
(1)  985/     457 :                     .keep_blk:
(1)  986/     457 : E1                  		pop	hl
(1)  987/     458 : C1                  		pop	bc
(1)  988/     459 : 79                  		ld	a,c
(1)  989/     45A : E6 07               		and	00000111b
(1)  990/     45C : CF                  		rst	8
(1)  991/     45D : 16 00               		ld	d,0
(1)  992/     45F : 5F                  		ld	e,a
(1)  993/     460 : 19                  		add	hl,de
(1)  994/     461 :                     	; ----------------------------------------
(1)  995/     461 : 7E                  		ld	a,(hl)			; Read block byte
(1)  996/     462 : FE FF               		cp	-1			; If block == -1, end track
(1)  997/     464 : CA F6 04            		jp	z,.track_end
(1)  998/     467 : CF                  		rst	8
(1)  999/     468 :                     	; ----------------------------------------
(1) 1000/     468 : FD 5E 06            		ld	e,(iy+trk_Patt)		; Read CACHE patt heads
(1) 1001/     46B : FD 56 07            		ld	d,(iy+(trk_Patt+1))
(1) 1002/     46E : 4F                  		ld	c,a
(1) 1003/     46F : D5                  		push	de
(1) 1004/     470 : C5                  		push	bc
(1) 1005/     471 : CF                  		rst	8
(1) 1006/     472 : 0F                  		rrca
(1) 1007/     473 : 0F                  		rrca
(1) 1008/     474 : 0F                  		rrca
(1) 1009/     475 : E6 1F               		and	00011111b
(1) 1010/     477 : FD 4E 15            		ld	c,(iy+trk_BankHeads)	; c - current intrument loaded
(1) 1011/     47A : CB 79               		bit	7,c			; First time?
(1) 1012/     47C : 20 03               		jr	nz,.first_head
(1) 1013/     47E : B9                  		cp	c			; SAME instrument data?
(1) 1014/     47F : 28 26               		jr	z,.keep_it
(1) 1015/     481 :                     .first_head:
(1) 1016/     481 : CF                  		rst	8
(1) 1017/     482 : FD 77 15            		ld	(iy+trk_BankHeads),a	; Save inst number
(1) 1018/     485 : 47                  		ld	b,a
(1) 1019/     486 : 0F                  		rrca
(1) 1020/     487 : 0F                  		rrca
(1) 1021/     488 : 0F                  		rrca
(1) 1022/     489 : E6 E0               		and	11100000b
(1) 1023/     48B : 4F                  		ld	c,a
(1) 1024/     48C : 78                  		ld	a,b
(1) 1025/     48D : 0F                  		rrca
(1) 1026/     48E : 0F                  		rrca
(1) 1027/     48F : 0F                  		rrca
(1) 1028/     490 : E6 03               		and	00000011b
(1) 1029/     492 : 47                  		ld	b,a
(1) 1030/     493 :                     	; ----------------------------------------
(1) 1031/     493 : FD 6E 1C            		ld	l,(iy+trk_RomPatt)	; Transfer FIRST patt
(1) 1032/     496 : FD 66 1D            		ld	h,(iy+(trk_RomPatt+1))	; packet
(1) 1033/     499 : FD 7E 1E            		ld	a,(iy+(trk_RomPatt+2))
(1) 1034/     49C : E7                  		rst	20h
(1) 1035/     49D : CF                  		rst	8
(1) 1036/     49E : 09                  		add	hl,bc
(1) 1037/     49F : CE 00               		adc	a,0
(1) 1038/     4A1 : 01 20 00            		ld	bc,4*8			; 8 heads stored
(1) 1039/     4A4 : CD D0 11            		call	readRom			; ** ROM ACCESS **
(1) 1040/     4A7 :                     .keep_it:
(1) 1041/     4A7 : C1                  		pop	bc
(1) 1042/     4A8 : 79                  		ld	a,c
(1) 1043/     4A9 : E6 07               		and	00000111b
(1) 1044/     4AB : 87                  		add	a,a
(1) 1045/     4AC : 87                  		add	a,a
(1) 1046/     4AD : 57                  		ld	d,a
(1) 1047/     4AE : CF                  		rst	8
(1) 1048/     4AF : E6 FC               		and	11111100b
(1) 1049/     4B1 : 5F                  		ld	e,a
(1) 1050/     4B2 : 7A                  		ld	a,d
(1) 1051/     4B3 : E6 03               		and	00000011b
(1) 1052/     4B5 : 57                  		ld	d,a
(1) 1053/     4B6 : E1                  		pop	hl
(1) 1054/     4B7 : 19                  		add	hl,de
(1) 1055/     4B8 : 5E                  		ld	e,(hl)			; de - Pos
(1) 1056/     4B9 : 23                  		inc	hl
(1) 1057/     4BA : CF                  		rst	8
(1) 1058/     4BB : 56                  		ld	d,(hl)
(1) 1059/     4BC : 23                  		inc	hl
(1) 1060/     4BD : 7E                  		ld	a,(hl)
(1) 1061/     4BE : 23                  		inc	hl
(1) 1062/     4BF : FD 77 0C            		ld	(iy+trk_Rows),a
(1) 1063/     4C2 : 7E                  		ld	a,(hl)
(1) 1064/     4C3 : 23                  		inc	hl
(1) 1065/     4C4 : FD 77 0D            		ld	(iy+(trk_Rows+1)),a
(1) 1066/     4C7 : FD 6E 1C            		ld	l,(iy+trk_RomPatt)	; Transfer FIRST patt
(1) 1067/     4CA : FD 66 1D            		ld	h,(iy+(trk_RomPatt+1))	; packet
(1) 1068/     4CD : CF                  		rst	8
(1) 1069/     4CE : FD 7E 1E            		ld	a,(iy+(trk_RomPatt+2))
(1) 1070/     4D1 : 19                  		add	hl,de
(1) 1071/     4D2 : CE 00               		adc	a,0
(1) 1072/     4D4 : FD 75 19            		ld	(iy+trk_RomPattRead),l
(1) 1073/     4D7 : FD 74 1A            		ld	(iy+(trk_RomPattRead+1)),h
(1) 1074/     4DA : FD 77 1B            		ld	(iy+(trk_RomPattRead+2)),a
(1) 1075/     4DD : FD 5E 08            		ld	e,(iy+trk_Cach)
(1) 1076/     4E0 : FD 56 09            		ld	d,(iy+(trk_Cach+1))
(1) 1077/     4E3 : FD 73 0A            		ld	(iy+trk_Read),e
(1) 1078/     4E6 : FD 72 0B            		ld	(iy+(trk_Read+1)),d
(1) 1079/     4E9 : 0E 20               		ld	c,MAX_RCACH
(1) 1080/     4EB : FD 36 10 00         		ld	(iy+trk_cachHalf),0
(1) 1081/     4EF : FD 36 11 00         		ld	(iy+trk_rowPause),0
(1) 1082/     4F3 : C3 D0 11            		jp	readRom		; ** ROM access **
(1) 1083/     4F6 :                     
(1) 1084/     4F6 :                     ; ----------------------------------------
(1) 1085/     4F6 :                     ; **JUMP ONLY**
(1) 1086/     4F6 :                     .track_end:
(1) 1087/     4F6 : CF                  		rst	8
(1) 1088/     4F7 : AF                  		xor	a
(1) 1089/     4F8 :                     ; 		ld	(iy+trk_rowPause),a
(1) 1090/     4F8 :                     ; 		ld	(iy+trk_TickTmr),a
(1) 1091/     4F8 : FD 36 00 FF         		ld	(iy+trk_Status),-1	; Disable track slot
(1) 1092/     4FC : FD 36 01 FF         		ld	(iy+trk_SeqId),-1
(1) 1093/     500 : C9                  		ret
(1) 1094/     501 :                     
(1) 1095/     501 :                     ; ----------------------------------------
(1) 1096/     501 :                     ; Track refill
(1) 1097/     501 :                     ; ----------------------------------------
(1) 1098/     501 :                     
(1) 1099/     501 :                     .effect_fill:
(1) 1100/     501 : FD CB 00 AE         		res	5,(iy+trk_Status)	; Reset refill-from-effect flag
(1) 1101/     505 : C3 1E 04            		jp	.set_track
(1) 1102/     508 :                     
(1) 1103/     508 :                     ; ----------------------------------------
(1) 1104/     508 :                     ; Track Start/Reset
(1) 1105/     508 :                     ;
(1) 1106/     508 :                     ; iy - Track buffer
(1) 1107/     508 :                     ; ----------------------------------------
(1) 1108/     508 :                     
(1) 1109/     508 :                     .first_fill:
(1) 1110/     508 : FD CB 00 B6         		res	6,(iy+trk_Status)	; Clear FILL flag
(1) 1111/     50C : CD AA 05            		call	track_out
(1) 1112/     50F : FD 36 12 01         		ld	(iy+trk_TickTmr),1	; Reset tick timer
(1) 1113/     513 : FD 7E 02            		ld	a,(iy+trk_SetBlk)	; Make start block as current block
(1) 1114/     516 : CF                  		rst	8
(1) 1115/     517 : FD 77 13            		ld 	(iy+trk_currBlk),a	; block
(1) 1116/     51A : FD 7E 01            		ld	a,(iy+trk_SeqId)
(1) 1117/     51D : FE FF               		cp	-1			; Sequence -1?
(1) 1118/     51F : C8                  		ret	z
(1) 1119/     520 : 87                  		add	a,a
(1) 1120/     521 : 87                  		add	a,a
(1) 1121/     522 : 16 00               		ld	d,0
(1) 1122/     524 : 5F                  		ld	e,a
(1) 1123/     525 : 21 1C 00            		ld	hl,gemaMstrListPos
(1) 1124/     528 : 23                  		inc	hl
(1) 1125/     529 : 7E                  		ld	a,(hl)			; $00xx0000
(1) 1126/     52A : 23                  		inc	hl
(1) 1127/     52B : 4E                  		ld	c,(hl)			; $0000xx00
(1) 1128/     52C : 23                  		inc	hl
(1) 1129/     52D : 6E                  		ld	l,(hl)			; $000000xx
(1) 1130/     52E : CF                  		rst	8
(1) 1131/     52F : 61                  		ld	h,c
(1) 1132/     530 : 19                  		add	hl,de
(1) 1133/     531 : CE 00               		adc	a,0
(1) 1134/     533 : 11 85 18            		ld	de,trkInfoCach
(1) 1135/     536 : D5                  		push	de
(1) 1136/     537 : 01 04 00            		ld	bc,4
(1) 1137/     53A : CD D0 11            		call	readRom		; *** ROM ACCESS ***
(1) 1138/     53D : E1                  		pop	hl
(1) 1139/     53E : 7E                  		ld	a,(hl)
(1) 1140/     53F : 23                  		inc	hl
(1) 1141/     540 : CB 7F               		bit	7,a
(1) 1142/     542 : 28 04               		jr	z,.no_glbl
(1) 1143/     544 : FD CB 00 C6         		set	0,(iy+trk_Status)	; Enable GLOBAL sub-beats
(1) 1144/     548 :                     .no_glbl:
(1) 1145/     548 : CF                  		rst	8
(1) 1146/     549 : E6 7F               		and	01111111b
(1) 1147/     54B : FD 77 03            		ld	(iy+trk_TickSet),a
(1) 1148/     54E : 7E                  		ld	a,(hl)			; Read and temporally
(1) 1149/     54F : 23                  		inc	hl			; grab it's pointers
(1) 1150/     550 : 4E                  		ld	c,(hl)
(1) 1151/     551 : 23                  		inc	hl
(1) 1152/     552 : 6E                  		ld	l,(hl)
(1) 1153/     553 : 61                  		ld	h,c
(1) 1154/     554 : 11 DE 19            		ld	de,headerOut
(1) 1155/     557 : 0E 0E               		ld	c,0Eh
(1) 1156/     559 : CD D0 11            		call	readRom		; ** ROM access **
(1) 1157/     55C :                     
(1) 1158/     55C :                     	; headerOut:
(1) 1159/     55C :                     	; dc.w numof_chnls
(1) 1160/     55C :                     	; dc.l .blk,.pat,.ins
(1) 1161/     55C :                     	; *** READING BACKWARDS
(1) 1162/     55C : DD 21 EB 19         		ld	ix,headerOut_e-1	; Read temp header BACKWARDS
(1) 1163/     560 : E7                  		rst	20h
(1) 1164/     561 : CD 97 05            		call	.grab_rhead		; Instrument data
(1) 1165/     564 : FD 75 1F            		ld	(iy+trk_RomInst),l
(1) 1166/     567 : FD 74 20            		ld	(iy+(trk_RomInst+1)),h
(1) 1167/     56A : FD 70 21            		ld	(iy+(trk_RomInst+2)),b
(1) 1168/     56D : CD 97 05            		call	.grab_rhead		; Pattern heads
(1) 1169/     570 : FD 75 1C            		ld	(iy+trk_RomPatt),l	; Save ROM patt base
(1) 1170/     573 : FD 74 1D            		ld	(iy+(trk_RomPatt+1)),h
(1) 1171/     576 : FD 70 1E            		ld	(iy+(trk_RomPatt+2)),b
(1) 1172/     579 : FD 36 15 80         		ld	(iy+trk_BankHeads),80h	; Reset pattern banking
(1) 1173/     57D : CD 97 05            		call	.grab_rhead		; Block data
(1) 1174/     580 : FD 75 22            		ld	(iy+trk_RomBlks),l	; Save ROM patt base
(1) 1175/     583 : FD 74 23            		ld	(iy+(trk_RomBlks+1)),h
(1) 1176/     586 : FD 70 24            		ld	(iy+(trk_RomBlks+2)),b
(1) 1177/     589 : FD 36 16 80         		ld	(iy+trk_BankBlk),80h	; Reset pattern banking
(1) 1178/     58D : DD 7E 00            		ld	a,(ix)			; dc.w numof_chnls
(1) 1179/     590 : FD 77 17            		ld	(iy+trk_MaxChnl),a
(1) 1180/     593 : CF                  		rst	8
(1) 1181/     594 : C3 1E 04            		jp	.set_track
(1) 1182/     597 :                     
(1) 1183/     597 :                     ; Read 68K pointer:
(1) 1184/     597 :                     ; hl - 00xxxx
(1) 1185/     597 :                     ;  b - xx0000
(1) 1186/     597 :                     .grab_rhead:
(1) 1187/     597 : DD 6E 00            		ld	l,(ix)
(1) 1188/     59A : DD 2B               		dec	ix
(1) 1189/     59C : DD 66 00            		ld	h,(ix)
(1) 1190/     59F : CF                  		rst	8
(1) 1191/     5A0 : DD 2B               		dec	ix
(1) 1192/     5A2 : DD 46 00            		ld	b,(ix)
(1) 1193/     5A5 : DD 2B               		dec	ix
(1) 1194/     5A7 :                     ; 		ld	c,(ix)
(1) 1195/     5A7 : DD 2B               		dec	ix
(1) 1196/     5A9 : C9                  		ret
(1) 1197/     5AA :                     
(1) 1198/     5AA :                     ; ----------------------------------------
(1) 1199/     5AA :                     ; Reset tracker channels
(1) 1200/     5AA :                     ;
(1) 1201/     5AA :                     ; iy - Track buffer
(1) 1202/     5AA :                     ;
(1) 1203/     5AA :                     ; Breaks:
(1) 1204/     5AA :                     ; b ,de,hl,ix
(1) 1205/     5AA :                     ; ----------------------------------------
(1) 1206/     5AA :                     
(1) 1207/     5AA :                     track_out:
(1) 1208/     5AA : FD E5               		push	iy
(1) 1209/     5AC : E1                  		pop	hl
(1) 1210/     5AD : DD 21 00 1E         		ld	ix,trkChnls
(1) 1211/     5B1 : CF                  		rst	8
(1) 1212/     5B2 : 11 25 00            		ld	de,trk_ChnIndx
(1) 1213/     5B5 : 19                  		add	hl,de
(1) 1214/     5B6 : 06 1A               		ld	b,MAX_TRKINDX
(1) 1215/     5B8 :                     .indx_del:
(1) 1216/     5B8 : 7E                  		ld	a,(hl)
(1) 1217/     5B9 : B7                  		or	a
(1) 1218/     5BA : 28 2A               		jr	z,.nothin
(1) 1219/     5BC : CF                  		rst	8
(1) 1220/     5BD : DD E5               		push	ix
(1) 1221/     5BF : E6 1F               		and	00011111b
(1) 1222/     5C1 : 87                  		add	a,a
(1) 1223/     5C2 : 87                  		add	a,a
(1) 1224/     5C3 : 87                  		add	a,a
(1) 1225/     5C4 : 5F                  		ld	e,a
(1) 1226/     5C5 : CF                  		rst	8
(1) 1227/     5C6 : DD 19               		add	ix,de
(1) 1228/     5C8 : AF                  		xor	a
(1) 1229/     5C9 : DD 36 02 FE         		ld	(ix+chnl_Note),-2
(1) 1230/     5CD : DD 36 00 01         		ld	(ix+chnl_Flags),1
(1) 1231/     5D1 : DD 36 04 40         		ld	(ix+chnl_Vol),64
(1) 1232/     5D5 : DD 77 05            		ld	(ix+chnl_EffId),a
(1) 1233/     5D8 : CF                  		rst	8
(1) 1234/     5D9 : DD 77 06            		ld	(ix+chnl_EffArg),a
(1) 1235/     5DC : DD 77 03            		ld	(ix+chnl_Ins),a
(1) 1236/     5DF : DD 77 07            		ld	(ix+chnl_Type),a
(1) 1237/     5E2 : DD E1               		pop	ix
(1) 1238/     5E4 : 77                  		ld	(hl),a
(1) 1239/     5E5 : 00                  		nop
(1) 1240/     5E6 :                     .nothin:
(1) 1241/     5E6 : 23                  		inc	hl
(1) 1242/     5E7 : 10 CF               		djnz	.indx_del
(1) 1243/     5E9 : 3E 01               		ld	a,1
(1) 1244/     5EB : 32 D0 19            		ld	(marsUpd),a
(1) 1245/     5EE : C9                  		ret
(1) 1246/     5EF :                     
(1) 1247/     5EF :                     ; ============================================================
(1) 1248/     5EF :                     ; --------------------------------------------------------
(1) 1249/     5EF :                     ; Process track channels to the sound chips
(1) 1250/     5EF :                     ; --------------------------------------------------------
(1) 1251/     5EF :                     
(1) 1252/     5EF :                     set_chips:
(1) 1253/     5EF : CD AF 11            		call	get_tick
(1) 1254/     5F2 :                     	; ** MANUAL BUFF READ **
(1) 1255/     5F2 : FD 21 0D 19         		ld	iy,trkBuff_0
(1) 1256/     5F6 : CD 36 06            		call	tblbuff_read
(1) 1257/     5F9 : FD 21 4C 19         		ld	iy,trkBuff_1
(1) 1258/     5FD : CD 36 06            		call	tblbuff_read
(1) 1259/     600 : CF                  		rst	8
(1) 1260/     601 : FD 21 8B 19         		ld	iy,trkBuff_2
(1) 1261/     605 : CD 36 06            		call	tblbuff_read
(1) 1262/     608 : CD AF 11            		call	get_tick
(1) 1263/     60B :                     proc_chips:
(1) 1264/     60B : E7                  		rst	20h
(1) 1265/     60C : CF                  		rst	8
(1) 1266/     60D : FD 21 46 1C         		ld	iy,tblPSGN		; PSG Noise
(1) 1267/     611 : CD F8 07            		call	dtbl_singl
(1) 1268/     614 : CF                  		rst	8
(1) 1269/     615 : FD 21 0E 1C         		ld	iy,tblPSG		; PSG Squares
(1) 1270/     619 : CD E6 07            		call	dtbl_multi
(1) 1271/     61C : CD AF 11            		call	get_tick
(1) 1272/     61F : FD 21 A0 1B         		ld	iy,tblFM		; FM/FM3/DAC
(1) 1273/     623 : CD E6 07            		call	dtbl_multi
(1) 1274/     626 : CF                  		rst	8
(1) 1275/     627 : FD 21 0E 1B         		ld	iy,tblPCM		; SEGA CD PCM
(1) 1276/     62B : CD E6 07            		call	dtbl_multi
(1) 1277/     62E : CF                  		rst	8
(1) 1278/     62F : FD 21 58 1C         		ld	iy,tblPWM		; 32X PWM
(1) 1279/     633 : C3 E6 07            		jp	dtbl_multi
(1) 1280/     636 :                     
(1) 1281/     636 :                     ; ----------------------------------------
(1) 1282/     636 :                     ; Read current track
(1) 1283/     636 :                     ;
(1) 1284/     636 :                     ; iy - Buffer
(1) 1285/     636 :                     tblbuff_read:
(1) 1286/     636 : E7                  		rst	20h			; Refill wave here
(1) 1287/     637 : CD AF 11            		call	get_tick
(1) 1288/     63A : CF                  		rst	8
(1) 1289/     63B : FD 46 00            		ld	b,(iy+trk_Status)	; bit7: Track active?
(1) 1290/     63E : CB 78               		bit	7,b
(1) 1291/     640 : C8                  		ret	z
(1) 1292/     641 : 78                  		ld	a,b			; trk_Status == -1?
(1) 1293/     642 : FE FF               		cp	-1
(1) 1294/     644 : C2 4E 06            		jp	nz,.track_cont
(1) 1295/     647 : CD AA 05            		call	track_out
(1) 1296/     64A : FD 36 00 00         		ld	(iy+trk_Status),0
(1) 1297/     64E :                     ; 		rst	20h			; Refill wave
(1) 1298/     64E :                     .track_cont:
(1) 1299/     64E : FD E5               		push	iy
(1) 1300/     650 : E1                  		pop	hl
(1) 1301/     651 : CF                  		rst	8
(1) 1302/     652 : DD 21 00 1E         		ld	ix,trkChnls
(1) 1303/     656 : 11 25 00            		ld	de,trk_ChnIndx
(1) 1304/     659 : 19                  		add	hl,de
(1) 1305/     65A : FD 7E 17            		ld	a,(iy+trk_MaxChnl)
(1) 1306/     65D : B7                  		or	a
(1) 1307/     65E : 20 02               		jr	nz,.valid
(1) 1308/     660 : 3E 1A               		ld	a,MAX_TRKINDX		; If zero, Read ALL channels
(1) 1309/     662 :                     .valid:
(1) 1310/     662 : CF                  		rst	8
(1) 1311/     663 : 47                  		ld	b,a
(1) 1312/     664 :                     .next_indx:
(1) 1313/     664 : 7E                  		ld	a,(hl)			; Read index
(1) 1314/     665 : B7                  		or	a
(1) 1315/     666 : 20 05               		jr	nz,.has_indx		; If non-zero: valid
(1) 1316/     668 : C5                  		push	bc			; ** wave sync
(1) 1317/     669 :                     ; 		ld	b,4
(1) 1318/     669 :                     ; 		djnz	$
(1) 1319/     669 : C1                  		pop	bc			; **
(1) 1320/     66A : CF                  		rst	8
(1) 1321/     66B : 18 1C               		jr	.no_indx
(1) 1322/     66D :                     .has_indx:
(1) 1323/     66D : E6 1F               		and	00011111b
(1) 1324/     66F : 87                  		add	a,a
(1) 1325/     670 : 87                  		add	a,a
(1) 1326/     671 : 87                  		add	a,a
(1) 1327/     672 : CF                  		rst	8
(1) 1328/     673 : 16 00               		ld	d,0
(1) 1329/     675 : 5F                  		ld	e,a
(1) 1330/     676 : C5                  		push	bc
(1) 1331/     677 : E5                  		push	hl
(1) 1332/     678 : DD E5               		push	ix
(1) 1333/     67A : DD 19               		add	ix,de
(1) 1334/     67C : DD 7E 00            		ld	a,(ix)			; Read 0000evin
(1) 1335/     67F : E6 0F               		and	00001111b
(1) 1336/     681 : C4 91 06            		call	nz,.do_chip		; Call if non-zero
(1) 1337/     684 : CF                  		rst	8
(1) 1338/     685 : DD E1               		pop	ix
(1) 1339/     687 : E1                  		pop	hl
(1) 1340/     688 : C1                  		pop	bc
(1) 1341/     689 :                     .no_indx:
(1) 1342/     689 : 23                  		inc	hl
(1) 1343/     68A : 10 D8               		djnz	.next_indx
(1) 1344/     68C : FD CB 00 9E         		res	3,(iy+trk_Status)	; RESET Volume update bit
(1) 1345/     690 : C9                  		ret
(1) 1346/     691 :                     
(1) 1347/     691 :                     ; ----------------------------------------
(1) 1348/     691 :                     ; iy - Track buffer
(1) 1349/     691 :                     ; ix - Current channel
(1) 1350/     691 :                     
(1) 1351/     691 :                     .do_chip:
(1) 1352/     691 : DD 7E 03            		ld	a,(ix+chnl_Ins)		; Check intrument type FIRST
(1) 1353/     694 : B7                  		or	a
(1) 1354/     695 : C8                  		ret	z			; If 0 == stop
(1) 1355/     696 : E7                  		rst	20h			; Refill wave here
(1) 1356/     697 : 3D                  		dec	a			; inst-1
(1) 1357/     698 : E6 7F               		and	01111111b
(1) 1358/     69A : 21 F4 19            		ld	hl,instListOut		; hl - Temporal storage for instrument
(1) 1359/     69D : E5                  		push	hl
(1) 1360/     69E : CF                  		rst	8
(1) 1361/     69F : 07                  		rlca
(1) 1362/     6A0 : 07                  		rlca
(1) 1363/     6A1 : 07                  		rlca
(1) 1364/     6A2 : 47                  		ld	b,a
(1) 1365/     6A3 : E6 F8               		and	11111000b
(1) 1366/     6A5 : 4F                  		ld	c,a
(1) 1367/     6A6 : 78                  		ld	a,b
(1) 1368/     6A7 : AF                  		xor	a
(1) 1369/     6A8 : E6 03               		and	00000011b
(1) 1370/     6AA : CF                  		rst	8
(1) 1371/     6AB : 47                  		ld	b,a
(1) 1372/     6AC : EB                  		ex	hl,de
(1) 1373/     6AD : FD 6E 1F            		ld	l,(iy+trk_RomInst)
(1) 1374/     6B0 : FD 66 20            		ld	h,(iy+(trk_RomInst+1))
(1) 1375/     6B3 : FD 7E 21            		ld	a,(iy+(trk_RomInst+2))
(1) 1376/     6B6 : 09                  		add	hl,bc
(1) 1377/     6B7 : CE 00               		adc	a,0
(1) 1378/     6B9 : 01 08 00            		ld	bc,8			; 8 bytes
(1) 1379/     6BC : CD D0 11            		call	readRom		; ** ROM access **
(1) 1380/     6BF : E1                  		pop	hl
(1) 1381/     6C0 : E5                  		push	hl			; <-- save hl
(1) 1382/     6C1 : CD DB 06            		call	.grab_link
(1) 1383/     6C4 : D1                  		pop	de			; --> recover as de
(1) 1384/     6C5 :                     	; hl - current table
(1) 1385/     6C5 :                     	; de - instrument data
(1) 1386/     6C5 : FE FF               		cp	-1			; Found any link?
(1) 1387/     6C7 : C8                  		ret	z
(1) 1388/     6C8 : 23                  		inc	hl			; MANUAL SETTING ztbl_MasterVol
(1) 1389/     6C9 : 23                  		inc	hl
(1) 1390/     6CA : 23                  		inc	hl
(1) 1391/     6CB : 23                  		inc	hl
(1) 1392/     6CC : FD 7E 0E            		ld	a,(iy+trk_VolMaster)
(1) 1393/     6CF : 77                  		ld	(hl),a
(1) 1394/     6D0 : 01 06 00            		ld	bc,ztbl_InstCach-4	; Move to instr data
(1) 1395/     6D3 : 09                  		add	hl,bc
(1) 1396/     6D4 : EB                  		ex	hl,de			; <-- swap for ldir
(1) 1397/     6D5 : 01 08 00            		ld	bc,8
(1) 1398/     6D8 : ED B0               		ldir				; COPYPASTE instr data from temporal
(1) 1399/     6DA : C9                  		ret
(1) 1400/     6DB :                     
(1) 1401/     6DB :                     ; ----------------------------------------
(1) 1402/     6DB :                     ; Search for a linked channel on the
(1) 1403/     6DB :                     ; chip table
(1) 1404/     6DB :                     ;
(1) 1405/     6DB :                     ; Input:
(1) 1406/     6DB :                     ; iy - Track buffer
(1) 1407/     6DB :                     ; ix - Current channel
(1) 1408/     6DB :                     ; hl - Intrument data
(1) 1409/     6DB :                     ;
(1) 1410/     6DB :                     ; Returns:
(1) 1411/     6DB :                     ; hl | Channel table to use
(1) 1412/     6DB :                     ;  a | Return value:
(1) 1413/     6DB :                     ;       0 | Found
(1) 1414/     6DB :                     ;      -1 | Not found
(1) 1415/     6DB :                     ; ----------------------------------------
(1) 1416/     6DB :                     
(1) 1417/     6DB :                     .grab_link:
(1) 1418/     6DB : 7E                  		ld	a,(hl)			; Check INSTRUMENT type
(1) 1419/     6DC : E6 F0               		and	11110000b		; Filter bits
(1) 1420/     6DE : 5F                  		ld	e,a			; e - NEW chip
(1) 1421/     6DF : DD 7E 01            		ld	a,(ix+chnl_Chip)	; a - CURRENT chip in this channel
(1) 1422/     6E2 : E6 F0               		and	11110000b
(1) 1423/     6E4 : 28 76               		jr	z,.new_chip		; If 0: It's a NEW chip
(1) 1424/     6E6 : BB                  		cp 	e			; CURRENT chip is same as NEW?
(1) 1425/     6E7 : 28 11               		jr	z,.same_link		; If yes, check linked channel.
(1) 1426/     6E9 : CF                  		rst	8
(1) 1427/     6EA : 57                  		ld	d,a			; d - Chip to silence
(1) 1428/     6EB : D5                  		push	de
(1) 1429/     6EC : CD 06 07            		call	.srch_link		; Search OLD link
(1) 1430/     6EF : D1                  		pop	de
(1) 1431/     6F0 : FE FF               		cp	-1
(1) 1432/     6F2 : 28 03               		jr	z,.dont_res
(1) 1433/     6F4 : CD 00 10            		call	tblz_clear
(1) 1434/     6F7 :                     .dont_res:
(1) 1435/     6F7 : CF                  		rst	8
(1) 1436/     6F8 : 18 62               		jr	.new_chip
(1) 1437/     6FA :                     .same_link:
(1) 1438/     6FA : CD 06 07            		call	.srch_link		; Search link
(1) 1439/     6FD : FE FF               		cp	-1
(1) 1440/     6FF : C0                  		ret	nz
(1) 1441/     700 : DD 5E 01            		ld	e,(ix+chnl_Chip)
(1) 1442/     703 : CF                  		rst	8
(1) 1443/     704 : 18 56               		jr	.new_chip
(1) 1444/     706 :                     
(1) 1445/     706 :                     ; ----------------------------------------
(1) 1446/     706 :                     ; ** RELINK **
(1) 1447/     706 :                     ; a - Chip to search for
(1) 1448/     706 :                     
(1) 1449/     706 :                     .srch_link:
(1) 1450/     706 : CD CA 07            		call	.pick_tbl		; Pick chip table in hl
(1) 1451/     709 : DD E5               		push	ix			; Copy ix to bc for checking
(1) 1452/     70B : C1                  		pop	bc
(1) 1453/     70C : B7                  		or	a			; Single table?
(1) 1454/     70D : FA 27 07            		jp	m,.singl_link
(1) 1455/     710 :                     .srch_lloop:
(1) 1456/     710 : 7E                  		ld	a,(hl)			; Read Table's LSB
(1) 1457/     711 : FE FF               		cp	-1			; If -1 (EOL) also return -1
(1) 1458/     713 : 28 43               		jr	z,.refill
(1) 1459/     715 : B9                  		cp	c			; Same link LSB?
(1) 1460/     716 : 20 07               		jr	nz,.invldl
(1) 1461/     718 : 23                  		inc	hl
(1) 1462/     719 : CF                  		rst	8
(1) 1463/     71A : 7E                  		ld	a,(hl)
(1) 1464/     71B : 2B                  		dec	hl
(1) 1465/     71C : B8                  		cp	b			; Same link MSB?
(1) 1466/     71D : 28 16               		jr	z,.reroll
(1) 1467/     71F :                     .invldl:
(1) 1468/     71F : D5                  		push	de
(1) 1469/     720 : 11 12 00            		ld	de,MAX_TBLSIZE
(1) 1470/     723 : 19                  		add	hl,de
(1) 1471/     724 : D1                  		pop	de
(1) 1472/     725 : 18 E9               		jr	.srch_lloop
(1) 1473/     727 :                     
(1) 1474/     727 :                     ; ----------------------
(1) 1475/     727 :                     ; PSGN/FM3/FM6
(1) 1476/     727 :                     .singl_link:
(1) 1477/     727 : 23                  		inc	hl			; Read MSB first
(1) 1478/     728 : 7E                  		ld	a,(hl)
(1) 1479/     729 : 2B                  		dec	hl
(1) 1480/     72A : CF                  		rst	8
(1) 1481/     72B : B8                  		cp	b			; MSB match?
(1) 1482/     72C : 20 2A               		jr	nz,.refill
(1) 1483/     72E : 7E                  		ld	a,(hl)			; Read LSB
(1) 1484/     72F : B9                  		cp	c
(1) 1485/     730 : 20 26               		jr	nz,.refill
(1) 1486/     732 : C3 5A 07            		jp	.rnot_psg
(1) 1487/     735 :                     
(1) 1488/     735 :                     ; ----------------------------------------
(1) 1489/     735 :                     ; *** Special re-roll check for
(1) 1490/     735 :                     ; listed tables ***
(1) 1491/     735 :                     
(1) 1492/     735 :                     .reroll:
(1) 1493/     735 : E5                  		push	hl
(1) 1494/     736 : 01 03 00            		ld	bc,ztbl_Chip	; <-- fake iy+ztbl_Chip
(1) 1495/     739 : 09                  		add	hl,bc
(1) 1496/     73A : CF                  		rst	8
(1) 1497/     73B : 4E                  		ld	c,(hl)		; c - ID
(1) 1498/     73C : E1                  		pop	hl
(1) 1499/     73D : 7B                  		ld	a,e
(1) 1500/     73E : FE 80               		cp	80h		; PSG?
(1) 1501/     740 : 20 18               		jr	nz,.rnot_psg
(1) 1502/     742 :                     	; Special PSG3/PSGN check
(1) 1503/     742 : 3A 2F 00            		ld	a,(psgHatMode)	; Tone3 enabled?
(1) 1504/     745 : E6 03               		and	011b
(1) 1505/     747 : FE 03               		cp	011b
(1) 1506/     749 : 20 0F               		jr	nz,.rnot_psg
(1) 1507/     74B : 79                  		ld	a,c		; Channel 2? (PSG3)
(1) 1508/     74C : FE 02               		cp	2
(1) 1509/     74E : 20 0A               		jr	nz,.rnot_psg
(1) 1510/     750 : CF                  		rst	8
(1) 1511/     751 : D5                  		push	de
(1) 1512/     752 : 16 80               		ld	d,80h		; Force silence
(1) 1513/     754 : CD 00 10            		call	tblz_clear
(1) 1514/     757 : D1                  		pop	de
(1) 1515/     758 :                     .refill:
(1) 1516/     758 : 18 6D               		jr	.set_asfull
(1) 1517/     75A :                     .rnot_psg:
(1) 1518/     75A : AF                  		xor	a
(1) 1519/     75B : C9                  		ret
(1) 1520/     75C :                     
(1) 1521/     75C :                     ; ----------------------------------------
(1) 1522/     75C :                     ; *** NEW CHIP ***
(1) 1523/     75C :                     ; e - Chip to set
(1) 1524/     75C :                     
(1) 1525/     75C :                     .new_chip:
(1) 1526/     75C : 7B                  		ld	a,e			; Read NEW chip
(1) 1527/     75D : B7                  		or	a			; If non-minus, exit.
(1) 1528/     75E : F2 C7 07            		jp	p,.set_asfull
(1) 1529/     761 : CD CA 07            		call	.pick_tbl
(1) 1530/     764 : CF                  		rst	8
(1) 1531/     765 : FD 4E 14            		ld	c,(iy+trk_Priority)	; c - OUR priority level
(1) 1532/     768 : B7                  		or	a
(1) 1533/     769 : FA B7 07            		jp	m,.singl_free
(1) 1534/     76C : E5                  		push	hl			; Backup START table
(1) 1535/     76D :                     ; PASS 1
(1) 1536/     76D :                     .srch_free:
(1) 1537/     76D : 7E                  		ld	a,(hl)			; Read LSB
(1) 1538/     76E : FE FF               		cp	-1			; If -1, return -1
(1) 1539/     770 : 28 0B               		jr	z,.pass_2
(1) 1540/     772 : 23                  		inc	hl
(1) 1541/     773 : 46                  		ld	b,(hl)			; Read MSB
(1) 1542/     774 : 2B                  		dec	hl
(1) 1543/     775 : B0                  		or	b
(1) 1544/     776 : 28 22               		jr	z,.new_link_z
(1) 1545/     778 : CD 93 07            		call	.nextsrch_tbl
(1) 1546/     77B : 18 F0               		jr	.srch_free
(1) 1547/     77D :                     
(1) 1548/     77D :                     ; PASS 2
(1) 1549/     77D :                     ; Rewrite mode
(1) 1550/     77D :                     .pass_2:
(1) 1551/     77D : E1                  		pop	hl
(1) 1552/     77E :                     .next_prio:
(1) 1553/     77E : 7E                  		ld	a,(hl)		; Read LSB
(1) 1554/     77F : FE FF               		cp	-1		; If -1, return -1
(1) 1555/     781 : C8                  		ret	z
(1) 1556/     782 : 23                  		inc	hl
(1) 1557/     783 : 23                  		inc	hl
(1) 1558/     784 : 7E                  		ld	a,(hl)		; Read priority
(1) 1559/     785 : 2B                  		dec	hl
(1) 1560/     786 : 2B                  		dec	hl
(1) 1561/     787 : B7                  		or	a			; Failsafe zero priority overwrite
(1) 1562/     788 : 28 14               		jr	z,.new_link_o
(1) 1563/     78A : B9                  		cp	c
(1) 1564/     78B : 38 11               		jr	c,.new_link_o		; PRIORITY
(1) 1565/     78D : CF                  		rst	8
(1) 1566/     78E : CD 93 07            		call	.nextsrch_tbl
(1) 1567/     791 : 18 EB               		jr	.next_prio
(1) 1568/     793 :                     .nextsrch_tbl:
(1) 1569/     793 : D5                  		push	de
(1) 1570/     794 : 11 12 00            		ld	de,MAX_TBLSIZE
(1) 1571/     797 : 19                  		add	hl,de
(1) 1572/     798 : D1                  		pop	de
(1) 1573/     799 : C9                  		ret
(1) 1574/     79A :                     .new_link_z:
(1) 1575/     79A : 33                  		inc	sp		; skip backup
(1) 1576/     79B : 33                  		inc	sp
(1) 1577/     79C : 18 08               		jr	.new_link
(1) 1578/     79E :                     
(1) 1579/     79E :                     ; OVERWRITE link
(1) 1580/     79E :                     .new_link_o:
(1) 1581/     79E : E5                  		push	hl
(1) 1582/     79F : DD 56 01            		ld	d,(ix+chnl_Chip)
(1) 1583/     7A2 : CD 00 10            		call	tblz_clear
(1) 1584/     7A5 : E1                  		pop	hl
(1) 1585/     7A6 :                     ; NEW link
(1) 1586/     7A6 :                     .new_link:
(1) 1587/     7A6 : CF                  		rst	8
(1) 1588/     7A7 : 23                  		inc	hl
(1) 1589/     7A8 : 23                  		inc	hl
(1) 1590/     7A9 :                     ; hl+2
(1) 1591/     7A9 :                     .l_hiprio:
(1) 1592/     7A9 : DD 73 01            		ld	(ix+chnl_Chip),e
(1) 1593/     7AC : DD E5               		push	ix
(1) 1594/     7AE : D1                  		pop	de
(1) 1595/     7AF : 71                  		ld	(hl),c		; Write priority
(1) 1596/     7B0 : 2B                  		dec	hl
(1) 1597/     7B1 : CF                  		rst	8
(1) 1598/     7B2 : 72                  		ld 	(hl),d		; MSB
(1) 1599/     7B3 : 2B                  		dec	hl
(1) 1600/     7B4 : 73                  		ld	(hl),e		; LSB
(1) 1601/     7B5 : AF                  		xor	a		; Return OK
(1) 1602/     7B6 : C9                  		ret
(1) 1603/     7B7 :                     
(1) 1604/     7B7 :                     ; Single slot
(1) 1605/     7B7 :                     ; c - priority
(1) 1606/     7B7 :                     ; e - chip
(1) 1607/     7B7 :                     .singl_free:
(1) 1608/     7B7 : 46                  		ld	b,(hl)
(1) 1609/     7B8 : 23                  		inc	hl
(1) 1610/     7B9 : 7E                  		ld	a,(hl)
(1) 1611/     7BA : 23                  		inc	hl
(1) 1612/     7BB : B0                  		or	b
(1) 1613/     7BC : 28 EB               		jr	z,.l_hiprio
(1) 1614/     7BE : CF                  		rst	8
(1) 1615/     7BF : 7E                  		ld	a,(hl)
(1) 1616/     7C0 : B7                  		or	a			; Failsafe zero priority overwrite
(1) 1617/     7C1 : 28 E6               		jr	z,.l_hiprio
(1) 1618/     7C3 : B9                  		cp	c
(1) 1619/     7C4 : 38 E3               		jr	c,.l_hiprio		; PRIORITY
(1) 1620/     7C6 : CF                  		rst	8
(1) 1621/     7C7 :                     .set_asfull:
(1) 1622/     7C7 : 3E FF               		ld	a,-1			; Return -1
(1) 1623/     7C9 : C9                  		ret
(1) 1624/     7CA :                     
(1) 1625/     7CA :                     ; Pick chip table
(1) 1626/     7CA :                     ; In:
(1) 1627/     7CA :                     ;  a - ID
(1) 1628/     7CA :                     ;
(1) 1629/     7CA :                     ; Out:
(1) 1630/     7CA :                     ;  a - Special bit + ID
(1) 1631/     7CA :                     ;
(1) 1632/     7CA :                     ; hl - Table
(1) 1633/     7CA :                     .pick_tbl:
(1) 1634/     7CA : D5                  		push	de
(1) 1635/     7CB : 0F                  		rrca
(1) 1636/     7CC : 0F                  		rrca
(1) 1637/     7CD : 0F                  		rrca
(1) 1638/     7CE : 0F                  		rrca
(1) 1639/     7CF : E6 07               		and	00000111b
(1) 1640/     7D1 : 87                  		add	a,a
(1) 1641/     7D2 : 21 00 1B            		ld	hl,tblList
(1) 1642/     7D5 : E5                  		push	hl
(1) 1643/     7D6 : 16 00               		ld	d,0
(1) 1644/     7D8 : 5F                  		ld	e,a
(1) 1645/     7D9 : 19                  		add	hl,de
(1) 1646/     7DA : 5E                  		ld	e,(hl)
(1) 1647/     7DB : 23                  		inc	hl
(1) 1648/     7DC : 7E                  		ld	a,(hl)
(1) 1649/     7DD : 57                  		ld	d,a
(1) 1650/     7DE : E6 80               		and	10000000b
(1) 1651/     7E0 : CB BA               		res	7,d
(1) 1652/     7E2 : E1                  		pop	hl
(1) 1653/     7E3 : 19                  		add	hl,de
(1) 1654/     7E4 : D1                  		pop	de
(1) 1655/     7E5 : C9                  		ret
(1) 1656/     7E6 :                     
(1) 1657/     7E6 :                     ; ============================================
(1) 1658/     7E6 :                     ; ----------------------------------------
(1) 1659/     7E6 :                     ; Process chip using it's table
(1) 1660/     7E6 :                     ;
(1) 1661/     7E6 :                     ; iy - table to read
(1) 1662/     7E6 :                     ; ----------------------------------------
(1) 1663/     7E6 :                     
(1) 1664/     7E6 :                     dtbl_multi:
(1) 1665/     7E6 : FD 7E 00            		ld	a,(iy)
(1) 1666/     7E9 : FE FF               		cp	-1
(1) 1667/     7EB : C8                  		ret	z
(1) 1668/     7EC : CD F8 07            		call	dtbl_singl
(1) 1669/     7EF : CF                  		rst	8
(1) 1670/     7F0 : 11 12 00            		ld	de,MAX_TBLSIZE
(1) 1671/     7F3 : FD 19               		add	iy,de
(1) 1672/     7F5 : CF                  		rst	8
(1) 1673/     7F6 : 18 EE               		jr	dtbl_multi
(1) 1674/     7F8 :                     dtbl_singl:
(1) 1675/     7F8 : FD 5E 00            		ld	e,(iy)		; Read link
(1) 1676/     7FB : FD 56 01            		ld	d,(iy+1)
(1) 1677/     7FE : 7A                  		ld	a,d		; If no-zero, active
(1) 1678/     7FF : B3                  		or	e
(1) 1679/     800 : 20 60               		jr	nz,.linked
(1) 1680/     802 : FD 7E 02            		ld	a,(iy+2)	; Silence request?
(1) 1681/     805 : B7                  		or	a
(1) 1682/     806 : F0                  		ret	p		; Return if not.
(1) 1683/     807 : CF                  		rst	8
(1) 1684/     808 : FD 36 02 00         		ld	(iy+2),0	; Reset request on memory
(1) 1685/     80C :                     
(1) 1686/     80C :                     ; ----------------------------------------
(1) 1687/     80C :                     ; chip-silence request
(1) 1688/     80C :                     ; iy - Table
(1) 1689/     80C :                     
(1) 1690/     80C : 06 00               		ld	b,0
(1) 1691/     80E : FD 4E 03            		ld	c,(iy+ztbl_Chip)
(1) 1692/     811 : E6 F0               		and	11110000b
(1) 1693/     813 : FE 80               		cp	80h
(1) 1694/     815 : 28 1E               		jr	z,.siln_psg
(1) 1695/     817 : FE 90               		cp	90h
(1) 1696/     819 : 28 16               		jr	z,.siln_psg_n
(1) 1697/     81B : FE A0               		cp	0A0h
(1) 1698/     81D : 28 3D               		jr	z,.siln_fm
(1) 1699/     81F : FE B0               		cp	0B0h
(1) 1700/     821 : 28 39               		jr	z,.siln_fm
(1) 1701/     823 : CF                  		rst	8
(1) 1702/     824 : FE C0               		cp	0C0h
(1) 1703/     826 : 28 31               		jr	z,.siln_dac
(1) 1704/     828 : FE D0               		cp	0D0h
(1) 1705/     82A : 28 0F               		jr	z,.siln_pcm
(1) 1706/     82C : FE E0               		cp	0E0h
(1) 1707/     82E : 28 1C               		jr	z,.siln_pwm
(1) 1708/     830 : C9                  		ret
(1) 1709/     831 :                     .siln_psg_n:
(1) 1710/     831 : AF                  		xor	a
(1) 1711/     832 : 32 2F 00            		ld	(psgHatMode),a
(1) 1712/     835 :                     .siln_psg:
(1) 1713/     835 : CF                  		rst	8
(1) 1714/     836 : 21 4D 17            		ld	hl,psgcom
(1) 1715/     839 : 18 1A               		jr	.rcyl_com
(1) 1716/     83B :                     
(1) 1717/     83B :                     ; --------------------------------
(1) 1718/     83B :                     
(1) 1719/     83B :                     .siln_pcm:
(1) 1720/     83B : 3E 01               		ld	a,1
(1) 1721/     83D : 32 D1 19            		ld	(mcdUpd),a
(1) 1722/     840 : CF                  		rst	8
(1) 1723/     841 : 21 F5 16            		ld	hl,pcmcom+32
(1) 1724/     844 : 09                  		add	hl,bc
(1) 1725/     845 : 36 FF               		ld	(hl),-1
(1) 1726/     847 : 21 D5 16            		ld	hl,pcmcom
(1) 1727/     84A : 18 09               		jr	.rcyl_com
(1) 1728/     84C :                     .siln_pwm:
(1) 1729/     84C : 3E 01               		ld	a,1
(1) 1730/     84E : 32 D0 19            		ld	(marsUpd),a
(1) 1731/     851 : CF                  		rst	8
(1) 1732/     852 : 21 15 17            		ld	hl,pwmcom
(1) 1733/     855 :                     .rcyl_com:
(1) 1734/     855 : 09                  		add	hl,bc
(1) 1735/     856 : 36 04               		ld	(hl),100b	; key-cut
(1) 1736/     858 : C9                  		ret
(1) 1737/     859 :                     
(1) 1738/     859 :                     ; --------------------------------
(1) 1739/     859 :                     
(1) 1740/     859 :                     .siln_dac:
(1) 1741/     859 : CD 22 14            		call	dac_off
(1) 1742/     85C :                     .siln_fm:
(1) 1743/     85C : CD 5C 0A            		call	.fm_tloff
(1) 1744/     85F : C3 54 0A            		jp	.fm_keyoff
(1) 1745/     862 :                     
(1) 1746/     862 :                     ; ----------------------------------------
(1) 1747/     862 :                     ; Process channel now
(1) 1748/     862 :                     ; iy - Table
(1) 1749/     862 :                     ; ix - Tracker channel
(1) 1750/     862 :                     .linked:
(1) 1751/     862 : 1A                  		ld	a,(de)		; ** chnl_Flags
(1) 1752/     863 : 47                  		ld	b,a		; b - flags to check
(1) 1753/     864 : E6 0F               		and	00001111b	; evin flags?
(1) 1754/     866 : C8                  		ret	z
(1) 1755/     867 : 78                  		ld	a,b
(1) 1756/     868 : E6 F0               		and	11110000b	; Keep OTHER bits
(1) 1757/     86A : 12                  		ld	(de),a		; ** clear chnl_Flags
(1) 1758/     86B : FD E5               		push	iy		; table+10h instrment data
(1) 1759/     86D : D5                  		push	de
(1) 1760/     86E : DD E1               		pop	ix
(1) 1761/     870 : E1                  		pop	hl
(1) 1762/     871 : 11 0A 00            		ld	de,ztbl_InstCach	; Go to stored inst data
(1) 1763/     874 : 19                  		add	hl,de
(1) 1764/     875 :                     	; --------------------------------
(1) 1765/     875 :                     	;  b - Flags LR00evin (Eff|Vol|Ins|Note)
(1) 1766/     875 :                     	; iy - Our chip table
(1) 1767/     875 :                     	; ix - Track channel
(1) 1768/     875 :                     	; hl - Intrument data
(1) 1769/     875 : 78                  		ld	a,b		; Note and/or Inst?
(1) 1770/     876 : E6 03               		and	0011b
(1) 1771/     878 : C4 A3 08            		call	nz,.reset_effc	; Reset effects
(1) 1772/     87B : CB 50               		bit	2,b		; Volume
(1) 1773/     87D : C4 0F 0E            		call	nz,.volu
(1) 1774/     880 : CB 40               		bit	0,b		; Note
(1) 1775/     882 : C4 AD 0F            		call	nz,.note
(1) 1776/     885 : CB 48               		bit	1,b		; Intrument
(1) 1777/     887 : C4 18 0E            		call	nz,.inst
(1) 1778/     88A : CF                  		rst	8
(1) 1779/     88B : CB 58               		bit	3,b		; Effect
(1) 1780/     88D : C4 24 0D            		call	nz,.effc
(1) 1781/     890 : 7E                  		ld	a,(hl)		; Read INS type
(1) 1782/     891 : E6 70               		and	01110000b	; Filter bits
(1) 1783/     893 : 0F                  		rrca
(1) 1784/     894 : 0F                  		rrca
(1) 1785/     895 : 0F                  		rrca
(1) 1786/     896 : CF                  		rst	8
(1) 1787/     897 : 16 00               		ld	d,0
(1) 1788/     899 : 5F                  		ld	e,a
(1) 1789/     89A : 21 B0 08            		ld	hl,.mk_list
(1) 1790/     89D : 19                  		add	hl,de
(1) 1791/     89E : 7E                  		ld	a,(hl)
(1) 1792/     89F : 23                  		inc	hl
(1) 1793/     8A0 : 66                  		ld	h,(hl)
(1) 1794/     8A1 : 6F                  		ld	l,a
(1) 1795/     8A2 : E9                  		jp	(hl)
(1) 1796/     8A3 :                     .reset_effc:
(1) 1797/     8A3 : FD 36 06 00         		ld	(iy+ztbl_PitchBend),0
(1) 1798/     8A7 : FD 36 08 00         		ld	(iy+ztbl_VolSlide),0
(1) 1799/     8AB : FD 36 07 00         		ld	(iy+ztbl_Volume),0
(1) 1800/     8AF : C9                  		ret
(1) 1801/     8B0 :                     
(1) 1802/     8B0 :                     ; --------------------------------
(1) 1803/     8B0 :                     .mk_list:
(1) 1804/     8B0 : BE 08               		dw .mk_psg
(1) 1805/     8B2 : BE 08               		dw .mk_psg
(1) 1806/     8B4 : 6D 09               		dw .mk_fm
(1) 1807/     8B6 : E2 09               		dw .mk_fm_sp
(1) 1808/     8B8 : A5 0B               		dw .mk_dac
(1) 1809/     8BA : FB 0B               		dw .mk_pcm
(1) 1810/     8BC : 7B 0C               		dw .mk_pwm
(1) 1811/     8BE :                     
(1) 1812/     8BE :                     ; --------------------------------
(1) 1813/     8BE :                     ; PSG and PSGN
(1) 1814/     8BE :                     ; --------------------------------
(1) 1815/     8BE :                     
(1) 1816/     8BE :                     .mk_psg:
(1) 1817/     8BE : DD 4E 02            		ld	c,(ix+chnl_Note)	; c - Note
(1) 1818/     8C1 : DD E5               		push	ix			; * Save ix
(1) 1819/     8C3 : CF                  		rst	8
(1) 1820/     8C4 : DD 21 4D 17         		ld	ix,psgcom		; ix - psgcom
(1) 1821/     8C8 : 16 00               		ld	d,0
(1) 1822/     8CA : FD 5E 03            		ld	e,(iy+ztbl_Chip)
(1) 1823/     8CD : DD 19               		add	ix,de			; Get com index
(1) 1824/     8CF : 78                  		ld	a,b			; New NOTE and/or INS?
(1) 1825/     8D0 : E6 03               		and	0011b
(1) 1826/     8D2 : 28 48               		jr	z,.psgc_proc		; Process only
(1) 1827/     8D4 : 79                  		ld	a,c			; c - Note
(1) 1828/     8D5 : B7                  		or	a
(1) 1829/     8D6 : C8                  		ret	z
(1) 1830/     8D7 : FE FE               		cp	-2			; Key cut?
(1) 1831/     8D9 : 28 31               		jr	z,.kycut_psg
(1) 1832/     8DB : FE FF               		cp	-1			; Key off?
(1) 1833/     8DD : 28 21               		jr	z,.kyoff_psg
(1) 1834/     8DF : DD 36 00 01         		ld	(ix+COM),001b		; Set Key ON
(1) 1835/     8E3 : 7B                  		ld	a,e			; a - Channel 0-3
(1) 1836/     8E4 : 11 00 00            		ld	de,0			; Clear de
(1) 1837/     8E7 : FE 03               		cp	3			; NOISE channel?
(1) 1838/     8E9 : 20 0D               		jr	nz,.not_ns
(1) 1839/     8EB : 3A 2F 00            		ld	a,(psgHatMode)		; Tone 3?
(1) 1840/     8EE : E6 03               		and	011b
(1) 1841/     8F0 : FE 03               		cp	011b
(1) 1842/     8F2 : C2 3E 09            		jp	nz,.psg_keyon		; Normal
(1) 1843/     8F5 : 11 18 00            		ld	de,12*2			; Add octave to freq
(1) 1844/     8F8 :                     .not_ns:
(1) 1845/     8F8 : CD 59 09            		call	.psg_getfreq
(1) 1846/     8FB : 18 26               		jr	.psgc_keyon
(1) 1847/     8FD :                     
(1) 1848/     8FD :                     ; --------------------------------
(1) 1849/     8FD :                     ; -1
(1) 1850/     8FD :                     .kyoff_psgn:
(1) 1851/     8FD : CD 15 09            		call	.kypsgn_hatoff
(1) 1852/     900 :                     .kyoff_psg:
(1) 1853/     900 : DD 36 00 02         		ld	(ix),010b		; Write key off
(1) 1854/     904 : DD E1               		pop	ix			; * Restore ix
(1) 1855/     906 : C3 F9 0F            		jp	.chnl_ulnkoff
(1) 1856/     909 :                     
(1) 1857/     909 :                     ; --------------------------------
(1) 1858/     909 :                     ; -2
(1) 1859/     909 :                     .kycut_psgn:
(1) 1860/     909 : CD 15 09            		call	.kypsgn_hatoff
(1) 1861/     90C :                     .kycut_psg:
(1) 1862/     90C : DD 36 00 04         		ld	(ix),100b		; Write key cut
(1) 1863/     910 : DD E1               		pop	ix			; * Restore ix
(1) 1864/     912 : C3 F9 0F            		jp	.chnl_ulnkcut
(1) 1865/     915 :                     
(1) 1866/     915 :                     
(1) 1867/     915 :                     .kypsgn_hatoff:
(1) 1868/     915 : 3E 00               		ld	a,000b
(1) 1869/     917 : 32 2F 00            		ld	(psgHatMode),a		; ** GLOBAL SETTING
(1) 1870/     91A : CF                  		rst	8
(1) 1871/     91B : C9                  		ret
(1) 1872/     91C :                     
(1) 1873/     91C :                     ; --------------------------------
(1) 1874/     91C :                     ; hl - current freq
(1) 1875/     91C :                     ; ix - psgcom
(1) 1876/     91C :                     ; b - flags
(1) 1877/     91C :                     
(1) 1878/     91C :                     .psgc_proc:
(1) 1879/     91C : CF                  		rst	8
(1) 1880/     91D : DD 6E 1C            		ld	l,(ix+DTL)		; Read saved freq
(1) 1881/     920 : DD 66 20            		ld	h,(ix+DTH)
(1) 1882/     923 :                     .psgc_keyon:
(1) 1883/     923 : FD 7E 06            		ld	a,(iy+ztbl_PitchBend)	; pitchbend
(1) 1884/     926 : B7                  		or	a
(1) 1885/     927 : CA 38 09            		jp	z,.no_req
(1) 1886/     92A : ED 44               		neg	a
(1) 1887/     92C : 5F                  		ld	e,a
(1) 1888/     92D : 4F                  		ld	c,a
(1) 1889/     92E : AF                  		xor	a
(1) 1890/     92F : FD 77 06            		ld	(iy+ztbl_PitchBend),a
(1) 1891/     932 : 3F                  		ccf
(1) 1892/     933 : CB 21               		sla	c
(1) 1893/     935 : 9F                  		sbc	a,a
(1) 1894/     936 : 57                  		ld	d,a
(1) 1895/     937 : 19                  		add	hl,de
(1) 1896/     938 :                     .no_req:
(1) 1897/     938 : DD 75 1C            		ld	(ix+DTL),l
(1) 1898/     93B : DD 74 20            		ld	(ix+DTH),h
(1) 1899/     93E :                     .psg_keyon:
(1) 1900/     93E : FD 7E 08            		ld	a,(iy+ztbl_VolSlide)
(1) 1901/     941 : 87                  		add	a,a
(1) 1902/     942 : 5F                  		ld	e,a
(1) 1903/     943 : FD 7E 07            		ld	a,(iy+ztbl_Volume)	; Set current Volume
(1) 1904/     946 : 93                  		sub	a,e
(1) 1905/     947 : FD 96 04            		sub	a,(iy+ztbl_MasterVol)	; + MASTER vol
(1) 1906/     94A : ED 44               		neg	a
(1) 1907/     94C : CF                  		rst	8
(1) 1908/     94D : 87                  		add	a,a
(1) 1909/     94E : 87                  		add	a,a
(1) 1910/     94F : 30 02               		jr	nc,.vmuch
(1) 1911/     951 : 3E FF               		ld	a,-1
(1) 1912/     953 :                     .vmuch:
(1) 1913/     953 : DD 77 30            		ld	(ix+MVOL),a
(1) 1914/     956 : DD E1               		pop	ix			; * Restore ix
(1) 1915/     958 : C9                  		ret
(1) 1916/     959 :                     
(1) 1917/     959 :                     ; --------------------------------
(1) 1918/     959 :                     ; de - increment
(1) 1919/     959 :                     
(1) 1920/     959 :                     .psg_getfreq:
(1) 1921/     959 : 21 0B 15            		ld	hl,psgFreq_List-(36*2)
(1) 1922/     95C : 19                  		add	hl,de
(1) 1923/     95D : FD 5E 05            		ld	e,(iy+ztbl_FreqIndx)	; de - note*2
(1) 1924/     960 : 19                  		add	hl,de
(1) 1925/     961 : 7E                  		ld	a,(hl)
(1) 1926/     962 : 23                  		inc	hl
(1) 1927/     963 : 66                  		ld	h,(hl)
(1) 1928/     964 : 6F                  		ld	l,a
(1) 1929/     965 : 3A 88 1F            		ld	a,(palMode)
(1) 1930/     968 : B7                  		or	a
(1) 1931/     969 : 28 01               		jr	z,.fnot_pal
(1) 1932/     96B : 2B                  		dec	hl
(1) 1933/     96C :                     .fnot_pal:
(1) 1934/     96C : C9                  		ret
(1) 1935/     96D :                     
(1) 1936/     96D :                     ; --------------------------------
(1) 1937/     96D :                     ; FM
(1) 1938/     96D :                     ; --------------------------------
(1) 1939/     96D :                     
(1) 1940/     96D :                     .mk_fm:
(1) 1941/     96D : FD 4E 03            		ld	c,(iy+ztbl_Chip)	; c - YM key
(1) 1942/     970 : 78                  		ld	a,b			; New NOTE and/or INS?
(1) 1943/     971 : E6 03               		and	0011b
(1) 1944/     973 : 28 32               		jr	z,.mkfm_proc		; Process only
(1) 1945/     975 : DD 7E 02            		ld	a,(ix+chnl_Note)	; Get IT note
(1) 1946/     978 : B7                  		or	a
(1) 1947/     979 : C8                  		ret	z
(1) 1948/     97A : FE FE               		cp	-2			; Key-cut?
(1) 1949/     97C : CA 37 0A            		jp	z,.fm_cut
(1) 1950/     97F : FE FF               		cp	-1			; Key-off?
(1) 1951/     981 : CA 31 0A            		jp	z,.fm_off
(1) 1952/     984 : CF                  		rst	8
(1) 1953/     985 : 79                  		ld	a,c
(1) 1954/     986 : FE 06               		cp	6			; Check FM6
(1) 1955/     988 : 20 05               		jr	nz,.not_dac
(1) 1956/     98A : CD 22 14            		call	dac_off			; Turn DAC off
(1) 1957/     98D : 18 15               		jr	.not_dspc
(1) 1958/     98F :                     .not_dac:
(1) 1959/     98F : FE 02               		cp	2			; Check FM3
(1) 1960/     991 : 20 11               		jr	nz,.not_dspc
(1) 1961/     993 : 3A 30 00            		ld	a,(fmSpecial)		; FM3 Special active?
(1) 1962/     996 : B7                  		or	a
(1) 1963/     997 : 28 0B               		jr	z,.not_dspc
(1) 1964/     999 : 3E 00               		ld	a,0
(1) 1965/     99B : 32 30 00            		ld	(fmSpecial),a
(1) 1966/     99E : 11 00 27            		ld	de,2700h		; Turn FM3 Special OFF
(1) 1967/     9A1 : CD F7 13            		call	fm_send_1
(1) 1968/     9A4 :                     .not_dspc:
(1) 1969/     9A4 : CD 54 0A            		call	.fm_keyoff		; Turn FM keys off
(1) 1970/     9A7 :                     .mkfm_proc:
(1) 1971/     9A7 : CD AD 09            		call	.mkfm_freq
(1) 1972/     9AA : C3 8A 0A            		jp	.mkfm_set		; Volume
(1) 1973/     9AD :                     
(1) 1974/     9AD :                     ; --------------------------------
(1) 1975/     9AD :                     ; Read FM freq
(1) 1976/     9AD :                     
(1) 1977/     9AD :                     .mkfm_freq:
(1) 1978/     9AD : C5                  		push	bc
(1) 1979/     9AE : FD 7E 05            		ld	a,(iy+ztbl_FreqIndx)
(1) 1980/     9B1 : 47                  		ld	b,a
(1) 1981/     9B2 : E6 1F               		and	00011111b
(1) 1982/     9B4 : 5F                  		ld	e,a
(1) 1983/     9B5 : 16 00               		ld	d,0
(1) 1984/     9B7 : 21 3B 15            		ld	hl,fmFreq_List
(1) 1985/     9BA : 19                  		add	hl,de
(1) 1986/     9BB : 7E                  		ld	a,(hl)
(1) 1987/     9BC : CF                  		rst	8
(1) 1988/     9BD : 23                  		inc	hl
(1) 1989/     9BE : 66                  		ld	h,(hl)
(1) 1990/     9BF : 6F                  		ld	l,a			; hl - Current FM freq
(1) 1991/     9C0 : 3A 88 1F            		ld	a,(palMode)		; PAL speed check
(1) 1992/     9C3 : B7                  		or	a
(1) 1993/     9C4 : 28 04               		jr	z,.not_pal
(1) 1994/     9C6 : 11 04 00            		ld	de,4			; freq + 4
(1) 1995/     9C9 : 19                  		add	hl,de
(1) 1996/     9CA :                     .not_pal:
(1) 1997/     9CA : 78                  		ld	a,b
(1) 1998/     9CB : E6 E0               		and	11100000b
(1) 1999/     9CD : 0F                  		rrca
(1) 2000/     9CE : 0F                  		rrca
(1) 2001/     9CF : B4                  		or	h
(1) 2002/     9D0 : 67                  		ld	h,a
(1) 2003/     9D1 : FD 5E 06            		ld	e,(iy+ztbl_PitchBend)	; Get pitchbend effect
(1) 2004/     9D4 : CF                  		rst	8
(1) 2005/     9D5 : AF                  		xor	a			; clear high
(1) 2006/     9D6 : 3F                  		ccf				; clear carry
(1) 2007/     9D7 : CB 23               		sla	e			; pitchbend << 2
(1) 2008/     9D9 : 00                  		nop				; **
(1) 2009/     9DA : 9F                  		sbc	a,a			; get carry MSB
(1) 2010/     9DB : 57                  		ld	d,a
(1) 2011/     9DC : 19                  		add	hl,de			; Pitchbend the freq
(1) 2012/     9DD : CD 73 0A            		call	.fm_setfreq
(1) 2013/     9E0 : C1                  		pop	bc
(1) 2014/     9E1 :                     .nofm_note:
(1) 2015/     9E1 : C9                  		ret
(1) 2016/     9E2 :                     
(1) 2017/     9E2 :                     ; --------------------------------
(1) 2018/     9E2 :                     ; FM3 special
(1) 2019/     9E2 :                     ; --------------------------------
(1) 2020/     9E2 :                     
(1) 2021/     9E2 :                     .mk_fm_sp:
(1) 2022/     9E2 : 0E 02               		ld	c,010b			; ** FM3 special ID
(1) 2023/     9E4 : 78                  		ld	a,b			; New NOTE and/or INS?
(1) 2024/     9E5 : E6 03               		and	0011b
(1) 2025/     9E7 : CA 8A 0A            		jp	z,.mkfm_set		; Process only
(1) 2026/     9EA : DD 7E 02            		ld	a,(ix+chnl_Note)
(1) 2027/     9ED : B7                  		or	a
(1) 2028/     9EE : C8                  		ret	z
(1) 2029/     9EF : FE FE               		cp	-2
(1) 2030/     9F1 : CA 37 0A            		jp	z,.fm_cut
(1) 2031/     9F4 : FE FF               		cp	-1
(1) 2032/     9F6 : CA 31 0A            		jp	z,.fm_off
(1) 2033/     9F9 : CD 54 0A            		call	.fm_keyoff
(1) 2034/     9FC : CF                  		rst	8
(1) 2035/     9FD : 21 D9 17            		ld	hl,fmcach_3		; DIRECT point to FM3 data
(1) 2036/     A00 : 11 20 00            		ld	de,20h			; point to regs
(1) 2037/     A03 : 19                  		add	hl,de
(1) 2038/     A04 : DD E5               		push	ix
(1) 2039/     A06 : DD 21 29 0A         		ld	ix,.this_regs
(1) 2040/     A0A : 06 08               		ld	b,8
(1) 2041/     A0C :                     .wr_spc:
(1) 2042/     A0C : DD 56 00            		ld	d,(ix)			; Manually write the FM3 freqs
(1) 2043/     A0F : 5E                  		ld	e,(hl)
(1) 2044/     A10 : CD F7 13            		call	fm_send_1
(1) 2045/     A13 : CF                  		rst	8
(1) 2046/     A14 : 23                  		inc	hl
(1) 2047/     A15 : DD 23               		inc	ix
(1) 2048/     A17 : 10 F3               		djnz	.wr_spc
(1) 2049/     A19 : DD E1               		pop	ix
(1) 2050/     A1B : 11 40 27            		ld	de,2740h		; Turn FM3 Special mode
(1) 2051/     A1E : CD F7 13            		call	fm_send_1
(1) 2052/     A21 : 3E 01               		ld	a,1
(1) 2053/     A23 : 32 30 00            		ld	(fmSpecial),a
(1) 2054/     A26 : C3 8A 0A            		jp	.mkfm_set
(1) 2055/     A29 :                     .this_regs:
(1) 2056/     A29 : AD A9               		db 0ADh,0A9h
(1) 2057/     A2B : AC A8               		db 0ACh,0A8h
(1) 2058/     A2D : AE AA               		db 0AEh,0AAh
(1) 2059/     A2F : A6 A2               		db 0A6h,0A2h
(1) 2060/     A31 :                     
(1) 2061/     A31 :                     ; ----------------------------------------
(1) 2062/     A31 :                     
(1) 2063/     A31 :                     .fm_off:
(1) 2064/     A31 : CD 54 0A            		call	.fm_keyoff
(1) 2065/     A34 : C3 F9 0F            		jp	.chnl_ulnkoff
(1) 2066/     A37 :                     .fm_cut:
(1) 2067/     A37 : FD 7E 03            		ld	a,(iy+ztbl_Chip)
(1) 2068/     A3A : 87                  		add	a,a
(1) 2069/     A3B : 87                  		add	a,a
(1) 2070/     A3C : 21 79 18            		ld	hl,fmlist_rsave
(1) 2071/     A3F : 16 00               		ld	d,0
(1) 2072/     A41 : 5F                  		ld	e,a
(1) 2073/     A42 : 19                  		add	hl,de
(1) 2074/     A43 : 36 00               		ld	(hl),0
(1) 2075/     A45 : 23                  		inc	hl
(1) 2076/     A46 : 36 00               		ld	(hl),0
(1) 2077/     A48 : 23                  		inc	hl
(1) 2078/     A49 : 36 00               		ld	(hl),0
(1) 2079/     A4B : CD 54 0A            		call	.fm_keyoff
(1) 2080/     A4E : CD 5C 0A            		call	.fm_tloff
(1) 2081/     A51 : C3 F9 0F            		jp	.chnl_ulnkcut
(1) 2082/     A54 :                     
(1) 2083/     A54 :                     ; ----------------------------------------
(1) 2084/     A54 :                     ; iy - current FM table
(1) 2085/     A54 :                     
(1) 2086/     A54 :                     .fm_keyoff:
(1) 2087/     A54 : 16 28               		ld	d,28h
(1) 2088/     A56 : FD 5E 03            		ld	e,(iy+ztbl_Chip)
(1) 2089/     A59 : C3 F7 13            		jp	fm_send_1
(1) 2090/     A5C :                     
(1) 2091/     A5C :                     .fm_tloff:
(1) 2092/     A5C : 06 04               		ld	b,4
(1) 2093/     A5E : FD 4E 03            		ld	c,(iy+ztbl_Chip)
(1) 2094/     A61 : 79                  		ld	a,c
(1) 2095/     A62 : E6 03               		and	011b
(1) 2096/     A64 : F6 40               		or	40h		; TL regs
(1) 2097/     A66 : 1E 7F               		ld	e,7Fh
(1) 2098/     A68 :                     .tl_down:
(1) 2099/     A68 : 57                  		ld	d,a
(1) 2100/     A69 :                     		; e - 7Fh
(1) 2101/     A69 : CD F3 13            		call	fm_autoreg
(1) 2102/     A6C : CF                  		rst	8
(1) 2103/     A6D : 7A                  		ld	a,d
(1) 2104/     A6E : C6 04               		add	a,4
(1) 2105/     A70 : 10 F6               		djnz	.tl_down
(1) 2106/     A72 : C9                  		ret
(1) 2107/     A73 :                     
(1) 2108/     A73 :                     ; --------------------------------
(1) 2109/     A73 :                     
(1) 2110/     A73 :                     ; c - KeyID
(1) 2111/     A73 :                     .fm_setfreq:
(1) 2112/     A73 : 79                  		ld	a,c
(1) 2113/     A74 : E6 03               		and	011b
(1) 2114/     A76 : F6 A4               		or	0A4h
(1) 2115/     A78 : 57                  		ld	d,a
(1) 2116/     A79 : 5C                  		ld	e,h
(1) 2117/     A7A : CF                  		rst	8
(1) 2118/     A7B : CD F3 13            		call	fm_autoreg
(1) 2119/     A7E : 79                  		ld	a,c
(1) 2120/     A7F : E6 03               		and	011b
(1) 2121/     A81 : F6 A0               		or	0A0h
(1) 2122/     A83 : 57                  		ld	d,a
(1) 2123/     A84 : 5D                  		ld	e,l
(1) 2124/     A85 : CD F3 13            		call	fm_autoreg
(1) 2125/     A88 : CF                  		rst	8
(1) 2126/     A89 : C9                  		ret
(1) 2127/     A8A :                     
(1) 2128/     A8A :                     ; ----------------------------------------
(1) 2129/     A8A :                     
(1) 2130/     A8A :                     .mkfm_set:
(1) 2131/     A8A : FD 7E 03            		ld	a,(iy+ztbl_Chip)
(1) 2132/     A8D : CD 95 0B            		call	.get_fmcach
(1) 2133/     A90 :                     
(1) 2134/     A90 : E5                  		push	hl
(1) 2135/     A91 : 11 1C 00            		ld	de,1Ch			; Go to last regs
(1) 2136/     A94 : 19                  		add	hl,de
(1) 2137/     A95 : 46                  		ld	b,(hl)			; c - 0B0h from here
(1) 2138/     A96 : E1                  		pop	hl
(1) 2139/     A97 : CF                  		rst	8
(1) 2140/     A98 : FD 4E 03            		ld	c,(iy+ztbl_Chip)
(1) 2141/     A9B : 79                  		ld	a,c
(1) 2142/     A9C : E6 03               		and	011b
(1) 2143/     A9E : F6 30               		or	30h			; Start at reg 30h
(1) 2144/     AA0 : 57                  		ld	d,a
(1) 2145/     AA1 :                     
(1) 2146/     AA1 :                     	; hl - reg data
(1) 2147/     AA1 :                     	;  b - 0B0h algorithm copy
(1) 2148/     AA1 :                     	;  c - current FM channel 0-6
(1) 2149/     AA1 :                     	;  d - Starting FM reg
(1) 2150/     AA1 : CD F4 0A            		call	.mkfm_wregs		; 30h+
(1) 2151/     AA4 : CD 1E 0B            		call	.mkfm_tlvol		; 40h+
(1) 2152/     AA7 : CD F4 0A            		call	.mkfm_wregs		; 50h+
(1) 2153/     AAA : CD F4 0A            		call	.mkfm_wregs		; 60h+
(1) 2154/     AAD : CD F4 0A            		call	.mkfm_wregs		; 70h+
(1) 2155/     AB0 : CD F4 0A            		call	.mkfm_wregs		; 80h+
(1) 2156/     AB3 : CD F4 0A            		call	.mkfm_wregs		; 90h+
(1) 2157/     AB6 :                     
(1) 2158/     AB6 :                     ; 		ld	a,(hl)			; 0B0h algorithm
(1) 2159/     AB6 : 78                  		ld	a,b
(1) 2160/     AB7 : 23                  		inc	hl
(1) 2161/     AB8 : 5F                  		ld	e,a
(1) 2162/     AB9 : 79                  		ld	a,c
(1) 2163/     ABA : E6 03               		and	011b
(1) 2164/     ABC : F6 B0               		or	0B0h
(1) 2165/     ABE : 57                  		ld	d,a
(1) 2166/     ABF : CD F3 13            		call	fm_autoreg		; Write algorithm
(1) 2167/     AC2 : CF                  		rst	8
(1) 2168/     AC3 : DD 7E 00            		ld	a,(ix+chnl_Flags)	; Read panning bits
(1) 2169/     AC6 : 2F                  		cpl				; REVERSE bits
(1) 2170/     AC7 : E6 30               		and	00110000b
(1) 2171/     AC9 : 07                  		rlca				; << 2
(1) 2172/     ACA : 07                  		rlca
(1) 2173/     ACB : 5F                  		ld	e,a			; save as e
(1) 2174/     ACC : 7E                  		ld	a,(hl)			; 0B4h %00aa0ppp
(1) 2175/     ACD : 23                  		inc	hl
(1) 2176/     ACE : E6 3F               		and	00111111b
(1) 2177/     AD0 : B3                  		or	e			; Merge panning
(1) 2178/     AD1 : 5F                  		ld	e,a
(1) 2179/     AD2 : 79                  		ld	a,c
(1) 2180/     AD3 : CF                  		rst	8
(1) 2181/     AD4 : E6 03               		and	011b
(1) 2182/     AD6 : F6 B4               		or	0B4h
(1) 2183/     AD8 : 57                  		ld	d,a
(1) 2184/     AD9 : CD F3 13            		call	fm_autoreg
(1) 2185/     ADC : 7E                  		ld	a,(hl)			; 022h
(1) 2186/     ADD : 23                  		inc	hl
(1) 2187/     ADE : CF                  		rst	8
(1) 2188/     ADF : CB 5F               		bit	3,a			; Intrument wants LFO?
(1) 2189/     AE1 : 28 06               		jr	z,.no_lfo
(1) 2190/     AE3 : 5F                  		ld	e,a
(1) 2191/     AE4 : 16 22               		ld	d,22h
(1) 2192/     AE6 : CD F7 13            		call	fm_send_1
(1) 2193/     AE9 :                     .no_lfo:
(1) 2194/     AE9 : CF                  		rst	8
(1) 2195/     AEA : 7E                  		ld	a,(hl)			; 028h
(1) 2196/     AEB : E6 F0               		and	11110000b
(1) 2197/     AED : B1                  		or	c			; Merge FM channel
(1) 2198/     AEE : 5F                  		ld	e,a
(1) 2199/     AEF : 16 28               		ld	d,28h
(1) 2200/     AF1 : C3 F7 13            		jp	fm_send_1		; Set keys
(1) 2201/     AF4 :                     
(1) 2202/     AF4 :                     ; ----------------------------------------
(1) 2203/     AF4 :                     
(1) 2204/     AF4 :                     .mkfm_wregs:
(1) 2205/     AF4 : CF                  		rst	8
(1) 2206/     AF5 : 5E                  		ld	e,(hl)
(1) 2207/     AF6 : 23                  		inc	hl
(1) 2208/     AF7 : CD F3 13            		call	fm_autoreg
(1) 2209/     AFA : 14                  		inc	d
(1) 2210/     AFB : 14                  		inc	d
(1) 2211/     AFC : 14                  		inc	d
(1) 2212/     AFD : 14                  		inc	d
(1) 2213/     AFE : CF                  		rst	8
(1) 2214/     AFF : 5E                  		ld	e,(hl)
(1) 2215/     B00 : 23                  		inc	hl
(1) 2216/     B01 : CD F3 13            		call	fm_autoreg
(1) 2217/     B04 : 14                  		inc	d
(1) 2218/     B05 : 14                  		inc	d
(1) 2219/     B06 : 14                  		inc	d
(1) 2220/     B07 : 14                  		inc	d
(1) 2221/     B08 : CF                  		rst	8
(1) 2222/     B09 : 5E                  		ld	e,(hl)
(1) 2223/     B0A : 23                  		inc	hl
(1) 2224/     B0B : CD F3 13            		call	fm_autoreg
(1) 2225/     B0E : 14                  		inc	d
(1) 2226/     B0F : 14                  		inc	d
(1) 2227/     B10 : 14                  		inc	d
(1) 2228/     B11 : 14                  		inc	d
(1) 2229/     B12 : CF                  		rst	8
(1) 2230/     B13 : 5E                  		ld	e,(hl)
(1) 2231/     B14 : 23                  		inc	hl
(1) 2232/     B15 : CD F3 13            		call	fm_autoreg
(1) 2233/     B18 : 14                  		inc	d
(1) 2234/     B19 : 14                  		inc	d
(1) 2235/     B1A : 14                  		inc	d
(1) 2236/     B1B : 14                  		inc	d
(1) 2237/     B1C : CF                  		rst	8
(1) 2238/     B1D : C9                  		ret
(1) 2239/     B1E :                     
(1) 2240/     B1E :                     ; ----------------------------------------
(1) 2241/     B1E :                     ; Write 40+ TL w/volume
(1) 2242/     B1E :                     
(1) 2243/     B1E :                     ; hl - TL reg data
(1) 2244/     B1E :                     ; b - current 0B0h
(1) 2245/     B1E :                     ; d - 40h+
(1) 2246/     B1E :                     
(1) 2247/     B1E :                     .mkfm_tlvol:
(1) 2248/     B1E : 78                  		ld	a,b			; Read 0B0h copy
(1) 2249/     B1F : C5                  		push	bc
(1) 2250/     B20 : E5                  		push	hl
(1) 2251/     B21 : 21 8D 0B            		ld	hl,.fm_cindx		; hl - jump carry list
(1) 2252/     B24 : E6 07               		and	0111b
(1) 2253/     B26 : 06 00               		ld	b,0
(1) 2254/     B28 : 4F                  		ld	c,a
(1) 2255/     B29 : 09                  		add	hl,bc
(1) 2256/     B2A : CF                  		rst	8
(1) 2257/     B2B : FD 7E 07            		ld	a,(iy+ztbl_Volume)	; Read current Volume
(1) 2258/     B2E : FD 96 08            		sub	a,(iy+ztbl_VolSlide)
(1) 2259/     B31 : FD 96 04            		sub	a,(iy+ztbl_MasterVol)	; + MASTER vol
(1) 2260/     B34 : 4F                  		ld	c,a			; c - Current Volume
(1) 2261/     B35 : 46                  		ld	b,(hl)			; b - Current jump-carry byte
(1) 2262/     B36 : E1                  		pop	hl
(1) 2263/     B37 : CB 08               		rrc	b			; OP1
(1) 2264/     B39 : DC 70 0B            		call	c,.write_tl
(1) 2265/     B3C : D4 82 0B            		call	nc,.write_ntl
(1) 2266/     B3F : 23                  		inc	hl
(1) 2267/     B40 : 14                  		inc	d
(1) 2268/     B41 : 14                  		inc	d
(1) 2269/     B42 : CF                  		rst	8
(1) 2270/     B43 : 14                  		inc	d
(1) 2271/     B44 : 14                  		inc	d
(1) 2272/     B45 : CB 08               		rrc	b			; OP2
(1) 2273/     B47 : DC 70 0B            		call	c,.write_tl
(1) 2274/     B4A : D4 82 0B            		call	nc,.write_ntl
(1) 2275/     B4D : 23                  		inc	hl
(1) 2276/     B4E : 14                  		inc	d
(1) 2277/     B4F : 14                  		inc	d
(1) 2278/     B50 : 14                  		inc	d
(1) 2279/     B51 : 14                  		inc	d
(1) 2280/     B52 : CB 08               		rrc	b			; OP3
(1) 2281/     B54 : DC 70 0B            		call	c,.write_tl
(1) 2282/     B57 : D4 82 0B            		call	nc,.write_ntl
(1) 2283/     B5A : 23                  		inc	hl
(1) 2284/     B5B : CF                  		rst	8
(1) 2285/     B5C : 14                  		inc	d
(1) 2286/     B5D : 14                  		inc	d
(1) 2287/     B5E : 14                  		inc	d
(1) 2288/     B5F : 14                  		inc	d
(1) 2289/     B60 : CB 08               		rrc	b			; OP4
(1) 2290/     B62 : DC 70 0B            		call	c,.write_tl
(1) 2291/     B65 : D4 82 0B            		call	nc,.write_ntl
(1) 2292/     B68 : 23                  		inc	hl
(1) 2293/     B69 : 14                  		inc	d
(1) 2294/     B6A : 14                  		inc	d
(1) 2295/     B6B : 14                  		inc	d
(1) 2296/     B6C : 14                  		inc	d
(1) 2297/     B6D : CF                  		rst	8
(1) 2298/     B6E : C1                  		pop	bc
(1) 2299/     B6F : C9                  		ret
(1) 2300/     B70 :                     
(1) 2301/     B70 :                     ; --------------------------------
(1) 2302/     B70 :                     
(1) 2303/     B70 :                     .write_tl:
(1) 2304/     B70 : 7E                  		ld	a,(hl)
(1) 2305/     B71 : 91                  		sub	a,c			; reg - volume
(1) 2306/     B72 : F2 77 0B            		jp	p,.keep_tlmx
(1) 2307/     B75 : 3E 7F               		ld	a,7Fh			; <-- maximum TL
(1) 2308/     B77 :                     .keep_tlmx:
(1) 2309/     B77 : C5                  		push	bc
(1) 2310/     B78 : 5F                  		ld	e,a
(1) 2311/     B79 : FD 4E 03            		ld	c,(iy+ztbl_Chip)
(1) 2312/     B7C : CD F3 13            		call	fm_autoreg
(1) 2313/     B7F : CF                  		rst	8
(1) 2314/     B80 : C1                  		pop	bc
(1) 2315/     B81 : C9                  		ret
(1) 2316/     B82 :                     
(1) 2317/     B82 :                     .write_ntl:
(1) 2318/     B82 : C5                  		push	bc
(1) 2319/     B83 : 5E                  		ld	e,(hl)
(1) 2320/     B84 : FD 4E 03            		ld	c,(iy+ztbl_Chip)
(1) 2321/     B87 : CD F3 13            		call	fm_autoreg
(1) 2322/     B8A : CF                  		rst	8
(1) 2323/     B8B : C1                  		pop	bc
(1) 2324/     B8C : C9                  		ret
(1) 2325/     B8D :                     
(1) 2326/     B8D :                     ; --------------------------------
(1) 2327/     B8D :                     ; Jump carry list
(1) 2328/     B8D :                     .fm_cindx:
(1) 2329/     B8D : 08                  		db 1000b
(1) 2330/     B8E : 08                  		db 1000b
(1) 2331/     B8F : 08                  		db 1000b
(1) 2332/     B90 : 08                  		db 1000b
(1) 2333/     B91 : 0C                  		db 1100b
(1) 2334/     B92 : 0E                  		db 1110b
(1) 2335/     B93 : 0E                  		db 1110b
(1) 2336/     B94 : 0F                  		db 1111b
(1) 2337/     B95 :                     
(1) 2338/     B95 :                     ; --------------------------------
(1) 2339/     B95 :                     ; Input:
(1) 2340/     B95 :                     ; a - FM id (0-2,4-6)
(1) 2341/     B95 :                     ;
(1) 2342/     B95 :                     ; Ouput:
(1) 2343/     B95 :                     ; hl - instrument data
(1) 2344/     B95 :                     ;
(1) 2345/     B95 :                     ; Uses:
(1) 2346/     B95 :                     ; de
(1) 2347/     B95 :                     ; --------------------------------
(1) 2348/     B95 :                     
(1) 2349/     B95 :                     .get_fmcach:
(1) 2350/     B95 : 21 CA 19            		ld	hl,fmcach_list
(1) 2351/     B98 : E6 07               		and	0111b
(1) 2352/     B9A : 16 00               		ld	d,0
(1) 2353/     B9C : CF                  		rst	8
(1) 2354/     B9D : 87                  		add	a,a
(1) 2355/     B9E : 5F                  		ld	e,a
(1) 2356/     B9F : 19                  		add	hl,de
(1) 2357/     BA0 : 7E                  		ld	a,(hl)
(1) 2358/     BA1 : 23                  		inc	hl
(1) 2359/     BA2 : 66                  		ld	h,(hl)
(1) 2360/     BA3 : 6F                  		ld	l,a
(1) 2361/     BA4 : C9                  		ret
(1) 2362/     BA5 :                     
(1) 2363/     BA5 :                     ; --------------------------------
(1) 2364/     BA5 :                     ; DAC
(1) 2365/     BA5 :                     ; --------------------------------
(1) 2366/     BA5 :                     
(1) 2367/     BA5 :                     .mk_dac:
(1) 2368/     BA5 : 78                  		ld	a,b
(1) 2369/     BA6 : E6 03               		and	0011b
(1) 2370/     BA8 : 28 21               		jr	z,.dac_proc
(1) 2371/     BAA : DD 7E 02            		ld	a,(ix+chnl_Note)
(1) 2372/     BAD : B7                  		or	a
(1) 2373/     BAE : C8                  		ret	z
(1) 2374/     BAF : FE FE               		cp	-2
(1) 2375/     BB1 : CA BF 0B            		jp	z,.dac_cut
(1) 2376/     BB4 : FE FF               		cp	-1
(1) 2377/     BB6 : CA C5 0B            		jp	z,.dac_off
(1) 2378/     BB9 : CD CB 0B            		call	.dac_proc
(1) 2379/     BBC : C3 37 14            		jp	dac_play
(1) 2380/     BBF :                     .dac_cut:
(1) 2381/     BBF : CD 22 14            		call	dac_off
(1) 2382/     BC2 : C3 F9 0F            		jp	.chnl_ulnkoff
(1) 2383/     BC5 :                     .dac_off:
(1) 2384/     BC5 : CD 22 14            		call	dac_off
(1) 2385/     BC8 : C3 F9 0F            		jp	.chnl_ulnkcut
(1) 2386/     BCB :                     .dac_proc:
(1) 2387/     BCB : 16 00               		ld	d,0			; Freq index
(1) 2388/     BCD : FD 5E 05            		ld	e,(iy+ztbl_FreqIndx)
(1) 2389/     BD0 : 21 B3 15            		ld	hl,wavFreq_List-(2*36)
(1) 2390/     BD3 : 19                  		add	hl,de
(1) 2391/     BD4 : 7E                  		ld	a,(hl)
(1) 2392/     BD5 : 23                  		inc	hl
(1) 2393/     BD6 : 66                  		ld	h,(hl)
(1) 2394/     BD7 : 6F                  		ld	l,a
(1) 2395/     BD8 : FD 5E 06            		ld	e,(iy+ztbl_PitchBend)	; pitchbend
(1) 2396/     BDB : CF                  		rst	8
(1) 2397/     BDC : AF                  		xor	a			; Clear high
(1) 2398/     BDD : 3F                  		ccf				; Clear carry
(1) 2399/     BDE : CB 23               		sla	e			; << 1
(1) 2400/     BE0 : 9F                  		sbc	a,a			; Get carry MSB
(1) 2401/     BE1 : 57                  		ld	d,a
(1) 2402/     BE2 : 19                  		add	hl,de
(1) 2403/     BE3 : 22 F3 1C            		ld	(wave_Pitch),hl
(1) 2404/     BE6 : D9                  		exx				; *
(1) 2405/     BE7 : ED 5B F3 1C         		ld	de,(wave_Pitch)		; *
(1) 2406/     BEB : D9                  		exx				; *
(1) 2407/     BEC : DD 7E 00            		ld	a,(ix+chnl_Flags)	; Read panning
(1) 2408/     BEF : 2F                  		cpl				; REVERSE bits
(1) 2409/     BF0 : E6 30               		and	00110000b
(1) 2410/     BF2 : 07                  		rlca
(1) 2411/     BF3 : 07                  		rlca
(1) 2412/     BF4 : CF                  		rst	8
(1) 2413/     BF5 : 5F                  		ld	e,a
(1) 2414/     BF6 : 16 B6               		ld	d,0B6h			; Channel 6 panning
(1) 2415/     BF8 : C3 02 14            		jp	fm_send_2
(1) 2416/     BFB :                     
(1) 2417/     BFB :                     ; --------------------------------
(1) 2418/     BFB :                     ; PCM
(1) 2419/     BFB :                     ; --------------------------------
(1) 2420/     BFB :                     
(1) 2421/     BFB :                     .mk_pcm:
(1) 2423/     BFB : 16 00               		ld	d,0
(1) 2424/     BFD : FD 5E 03            		ld	e,(iy+ztbl_Chip)	; e - Channel ID
(1) 2425/     C00 : DD 4E 02            		ld	c,(ix+chnl_Note)	; c - Current note
(1) 2426/     C03 : DD E5               		push	ix
(1) 2427/     C05 : DD 21 D5 16         		ld	ix,pcmcom
(1) 2428/     C09 : DD 19               		add	ix,de
(1) 2429/     C0B : 1E 08               		ld	e,00001000b
(1) 2430/     C0D : CF                  		rst	8
(1) 2431/     C0E : 78                  		ld	a,b
(1) 2432/     C0F : E6 03               		and	0011b			; Note and Ins?
(1) 2433/     C11 : 28 11               		jr	z,.mkpcm_wrton
(1) 2434/     C13 : 79                  		ld	a,c
(1) 2435/     C14 : B7                  		or	a
(1) 2436/     C15 : C8                  		ret	z
(1) 2437/     C16 : FE FE               		cp	-2
(1) 2438/     C18 : CA 6C 0C            		jp	z,.pcm_cut
(1) 2439/     C1B : FE FF               		cp	-1
(1) 2440/     C1D : CA 65 0C            		jp	z,.pcm_off
(1) 2441/     C20 : 18 00               		jr	.pcm_note
(1) 2442/     C22 :                     .pcm_note:
(1) 2443/     C22 :                     ; 		ld	(ix+32),-1
(1) 2444/     C22 : 1E 01               		ld	e,00000001b		; KeyON request
(1) 2445/     C24 :                     .mkpcm_wrton:
(1) 2446/     C24 : DD 73 00            		ld	(ix),e			; Write key-on bit
(1) 2447/     C27 : CD 06 0D            		call	.readfreq_pcm
(1) 2448/     C2A : 11 08 00            		ld	de,8			; Go to Pitch
(1) 2449/     C2D : DD 19               		add	ix,de
(1) 2450/     C2F : DD 74 00            		ld	(ix),h			; Set pitch
(1) 2451/     C32 : DD 19               		add	ix,de
(1) 2452/     C34 : DD 75 00            		ld	(ix),l
(1) 2453/     C37 : DD 19               		add	ix,de			; Go to volume
(1) 2454/     C39 :                     	; PCM volume
(1) 2455/     C39 : 0E FF               		ld	c,-1
(1) 2456/     C3B : FD 7E 04            		ld	a,(iy+ztbl_MasterVol)
(1) 2457/     C3E : FE 40               		cp	40h
(1) 2458/     C40 : 28 14               		jr	z,.vpcm_siln
(1) 2459/     C42 : 30 12               		jr	nc,.vpcm_siln
(1) 2460/     C44 : B7                  		or	a
(1) 2461/     C45 : FA 56 0C            		jp	m,.vpcm_siln
(1) 2462/     C48 : 87                  		add	a,a
(1) 2463/     C49 : 47                  		ld	b,a
(1) 2464/     C4A : FD 7E 07            		ld	a,(iy+ztbl_Volume)	; Read current Volume
(1) 2465/     C4D : FD 96 08            		sub	a,(iy+ztbl_VolSlide)
(1) 2466/     C50 : 87                  		add	a,a			; * 2
(1) 2467/     C51 : 3F                  		ccf
(1) 2468/     C52 : 98                  		sbc	a,b			; + MASTER vol
(1) 2469/     C53 : 87                  		add	a,a			; *2
(1) 2470/     C54 : 38 03               		jr	c,.vpcm_carry
(1) 2471/     C56 :                     .vpcm_siln:
(1) 2472/     C56 : AF                  		xor	a
(1) 2473/     C57 : 18 01               		jr	.vpcm_zero
(1) 2474/     C59 :                     .vpcm_carry:
(1) 2475/     C59 : 81                  		add	a,c
(1) 2476/     C5A :                     .vpcm_zero:
(1) 2477/     C5A : DD 77 00            		ld	(ix),a
(1) 2478/     C5D : 3E 01               		ld	a,1
(1) 2479/     C5F : 32 D1 19            		ld	(mcdUpd),a
(1) 2480/     C62 : DD E1               		pop	ix
(1) 2481/     C64 : C9                  		ret
(1) 2482/     C65 :                     
(1) 2483/     C65 :                     ; --------------------------------
(1) 2484/     C65 :                     ; -1
(1) 2485/     C65 :                     .pcm_off:
(1) 2486/     C65 : CF                  		rst	8
(1) 2487/     C66 : DD 36 00 02         		ld	(ix),0010b
(1) 2488/     C6A : 18 05               		jr	.pcm_setcoff
(1) 2489/     C6C :                     ; -2
(1) 2490/     C6C :                     .pcm_cut:
(1) 2491/     C6C : CF                  		rst	8
(1) 2492/     C6D : DD 36 00 04         		ld	(ix),0100b
(1) 2493/     C71 :                     .pcm_setcoff:
(1) 2494/     C71 : 3E 01               		ld	a,1
(1) 2495/     C73 : 32 D1 19            		ld	(mcdUpd),a
(1) 2496/     C76 : DD E1               		pop	ix
(1) 2497/     C78 : C3 F9 0F            		jp	.chnl_ulnkoff
(1) 2501/     C7B :                     
(1) 2502/     C7B :                     ; --------------------------------
(1) 2503/     C7B :                     ; PWM
(1) 2504/     C7B :                     ; --------------------------------
(1) 2505/     C7B :                     
(1) 2506/     C7B :                     .mk_pwm:
(1) 2508/     C7B : DD 6E 02            		ld	l,(ix+chnl_Note)
(1) 2509/     C7E : DD 4E 00            		ld	c,(ix+chnl_Flags)	; c - Panning bits
(1) 2510/     C81 : 16 00               		ld	d,0
(1) 2511/     C83 : FD 5E 03            		ld	e,(iy+ztbl_Chip)	; e - Channel ID
(1) 2512/     C86 : DD E5               		push	ix
(1) 2513/     C88 : DD 21 15 17         		ld	ix,pwmcom
(1) 2514/     C8C : DD 19               		add	ix,de
(1) 2515/     C8E : CF                  		rst	8
(1) 2516/     C8F : 78                  		ld	a,b
(1) 2517/     C90 : E6 03               		and	0011b			; Note and Ins?
(1) 2518/     C92 : 28 0F               		jr	z,.pw_effc
(1) 2519/     C94 : 7D                  		ld	a,l
(1) 2520/     C95 : B7                  		or	a
(1) 2521/     C96 : C8                  		ret	z
(1) 2522/     C97 : FE FE               		cp	-2
(1) 2523/     C99 : CA F7 0C            		jp	z,.pwm_cut
(1) 2524/     C9C : FE FF               		cp	-1
(1) 2525/     C9E : CA F0 0C            		jp	z,.pwm_off
(1) 2526/     CA1 : 18 04               		jr	.pw_note
(1) 2527/     CA3 :                     .pw_effc:
(1) 2528/     CA3 : 1E 09               		ld	e,00001001b
(1) 2529/     CA5 : 18 02               		jr	.pw_send
(1) 2530/     CA7 :                     .pw_note:
(1) 2531/     CA7 : 1E 01               		ld	e,00000001b		; KeyON request
(1) 2532/     CA9 :                     .pw_send:
(1) 2533/     CA9 : DD 73 00            		ld	(ix),e			; Set command
(1) 2534/     CAC : CD 0B 0D            		call	.readfreq_pwm
(1) 2535/     CAF :                     	; hl - current freq
(1) 2536/     CAF : 79                  		ld	a,c			; Read panning bits
(1) 2537/     CB0 : 2F                  		cpl				; Reverse and filter bits
(1) 2538/     CB1 : E6 30               		and	00110000b
(1) 2539/     CB3 : CF                  		rst	8
(1) 2540/     CB4 : 5F                  		ld	e,a			; Save panning to e
(1) 2541/     CB5 : FD 7E 04            		ld	a,(iy+ztbl_MasterVol)
(1) 2542/     CB8 : FE 40               		cp	40h
(1) 2543/     CBA : 28 0C               		jr	z,.vpwm_siln
(1) 2544/     CBC : 30 0A               		jr	nc,.vpwm_siln
(1) 2545/     CBE : 4F                  		ld	c,a
(1) 2546/     CBF : FD 7E 07            		ld	a,(iy+ztbl_Volume)	; Read current volume
(1) 2547/     CC2 : FD 96 08            		sub	a,(iy+ztbl_VolSlide)
(1) 2548/     CC5 : 91                  		sub	a,c			; + MASTER vol
(1) 2549/     CC6 : 18 02               		jr	.vpwm_much
(1) 2550/     CC8 :                     .vpwm_siln:
(1) 2551/     CC8 : 3E C0               		ld	a,-40h
(1) 2552/     CCA :                     .vpwm_much:
(1) 2553/     CCA : ED 44               		neg	a
(1) 2554/     CCC : E6 FC               		and	11111100b
(1) 2555/     CCE : B4                  		or	h		; Merge MSB freq
(1) 2556/     CCF : 01 08 00            		ld	bc,8
(1) 2557/     CD2 : DD 09               		add	ix,bc
(1) 2558/     CD4 : DD 77 00            		ld	(ix),a
(1) 2559/     CD7 : DD 09               		add	ix,bc
(1) 2560/     CD9 : DD 75 00            		ld	(ix),l
(1) 2561/     CDC : DD 09               		add	ix,bc
(1) 2562/     CDE : CF                  		rst	8
(1) 2563/     CDF : DD 7E 00            		ld	a,(ix)
(1) 2564/     CE2 : E6 CF               		and	11001111b
(1) 2565/     CE4 : B3                  		or	e		; Set panning bits
(1) 2566/     CE5 : DD 77 00            		ld	(ix),a
(1) 2567/     CE8 : 3E 01               		ld	a,1
(1) 2568/     CEA : 32 D0 19            		ld	(marsUpd),a
(1) 2569/     CED : DD E1               		pop	ix
(1) 2570/     CEF : C9                  		ret
(1) 2571/     CF0 :                     
(1) 2572/     CF0 :                     ; --------------------------------
(1) 2573/     CF0 :                     ; -1
(1) 2574/     CF0 :                     .pwm_off:
(1) 2575/     CF0 : CF                  		rst	8
(1) 2576/     CF1 : DD 36 00 02         		ld	(ix),010b
(1) 2577/     CF5 : 18 05               		jr	.pwm_setcoff
(1) 2578/     CF7 :                     ; -2
(1) 2579/     CF7 :                     .pwm_cut:
(1) 2580/     CF7 : CF                  		rst	8
(1) 2581/     CF8 : DD 36 00 04         		ld	(ix),100b
(1) 2582/     CFC :                     .pwm_setcoff:
(1) 2583/     CFC : 3E 01               		ld	a,1
(1) 2584/     CFE : 32 D0 19            		ld	(marsUpd),a
(1) 2585/     D01 : DD E1               		pop	ix
(1) 2586/     D03 : C3 F9 0F            		jp	.chnl_ulnkoff
(1) 2590/     D06 :                     
(1) 2591/     D06 :                     ; --------------------------------
(1) 2592/     D06 :                     ; SHARED routine
(1) 2593/     D06 :                     
(1) 2594/     D06 :                     .readfreq_pcm:
(1) 2595/     D06 : 21 15 16            		ld	hl,wavFreq_CdPcm-(2*36)	; <-- one octave lower
(1) 2596/     D09 : 18 03               		jr	.set_wavfreq
(1) 2597/     D0B :                     .readfreq_pwm:
(1) 2598/     D0B : 21 B3 15            		ld	hl,wavFreq_List-(2*36)
(1) 2599/     D0E :                     .set_wavfreq:
(1) 2600/     D0E : 16 00               		ld	d,0			; Freq index
(1) 2601/     D10 : FD 5E 05            		ld	e,(iy+ztbl_FreqIndx)
(1) 2602/     D13 : 19                  		add	hl,de
(1) 2603/     D14 : 7E                  		ld	a,(hl)
(1) 2604/     D15 : 23                  		inc	hl
(1) 2605/     D16 : 66                  		ld	h,(hl)
(1) 2606/     D17 : 6F                  		ld	l,a
(1) 2607/     D18 : FD 5E 06            		ld	e,(iy+ztbl_PitchBend)	; pitchbend
(1) 2608/     D1B : CF                  		rst	8
(1) 2609/     D1C : AF                  		xor	a			; Clear high
(1) 2610/     D1D : 3F                  		ccf				; Clear carry
(1) 2611/     D1E : CB 23               		sla	e			; Get carry MSB
(1) 2612/     D20 : 9F                  		sbc	a,a			; -1 if carry is set
(1) 2613/     D21 : 57                  		ld	d,a
(1) 2614/     D22 : 19                  		add	hl,de
(1) 2615/     D23 : C9                  		ret
(1) 2616/     D24 :                     
(1) 2617/     D24 :                     ; ----------------------------------------
(1) 2618/     D24 :                     ; NEW effect
(1) 2619/     D24 :                     ; ----------------------------------------
(1) 2620/     D24 :                     
(1) 2621/     D24 :                     .effc:
(1) 2622/     D24 : DD 5E 06            		ld	e,(ix+chnl_EffArg)	; e - effect data
(1) 2623/     D27 : DD 7E 05            		ld	a,(ix+chnl_EffId)	; d - effect id
(1) 2624/     D2A : 57                  		ld	d,a
(1) 2625/     D2B : CF                  		rst	8
(1) 2626/     D2C : FE 04               		cp	4			; Effect D?
(1) 2627/     D2E : 28 0F               		jr	z,.effc_D
(1) 2628/     D30 : FE 05               		cp	5			; Effect E?
(1) 2629/     D32 : 28 44               		jr	z,.effc_E
(1) 2630/     D34 : FE 06               		cp	6			; Effect F?
(1) 2631/     D36 : 28 4F               		jr	z,.effc_F
(1) 2632/     D38 : CF                  		rst	8
(1) 2633/     D39 : FE 18               		cp	24			; Effect X?
(1) 2634/     D3B : CA 98 0D            		jp	z,.effc_X
(1) 2635/     D3E : C9                  		ret
(1) 2636/     D3F :                     
(1) 2637/     D3F :                     ; ----------------------------------------
(1) 2638/     D3F :                     ; Effect D: Volume slide up/down
(1) 2639/     D3F :                     ;
(1) 2640/     D3F :                     ; 00h - DON'T USE HERE
(1) 2641/     D3F :                     ;       (Original: Keep effect)
(1) 2642/     D3F :                     ; 0xh - Slide down normal
(1) 2643/     D3F :                     ; Fxh - Slide down fine
(1) 2644/     D3F :                     ; xFh - Slide up normal
(1) 2645/     D3F :                     ; x0h - Slide up fine
(1) 2646/     D3F :                     ; ----------------------------------------
(1) 2647/     D3F :                     
(1) 2648/     D3F :                     .effc_D:
(1) 2649/     D3F : 7B                  		ld	a,e
(1) 2650/     D40 : 0F                  		rrca
(1) 2651/     D41 : 0F                  		rrca
(1) 2652/     D42 : 0F                  		rrca
(1) 2653/     D43 : 0F                  		rrca
(1) 2654/     D44 : E6 0F               		and	0Fh
(1) 2655/     D46 : 4F                  		ld	c,a
(1) 2656/     D47 :                     	; e - DOWN value: ????dddd
(1) 2657/     D47 :                     	; c - UP value:   0000uuuu
(1) 2658/     D47 :                     
(1) 2659/     D47 : 7B                  		ld	a,e
(1) 2660/     D48 : B7                  		or	a
(1) 2661/     D49 : C8                  		ret	z
(1) 2662/     D4A : E6 F0               		and	0F0h		; 0Xh
(1) 2663/     D4C : 28 1D               		jr	z,.D_down
(1) 2664/     D4E : FE F0               		cp	0F0h		; FXh
(1) 2665/     D50 : 28 14               		jr	z,.D_downhf
(1) 2666/     D52 : 7B                  		ld	a,e
(1) 2667/     D53 : E6 0F               		and	00Fh		; X0h
(1) 2668/     D55 : 28 06               		jr	z,.D_up
(1) 2669/     D57 : FE 0F               		cp	00Fh		; XFh
(1) 2670/     D59 : C0                  		ret	nz
(1) 2671/     D5A :                     ; 		jr	z,.D_uphf
(1) 2672/     D5A :                     ; Go UP
(1) 2673/     D5A :                     .D_uphf:
(1) 2674/     D5A : 79                  		ld	a,c
(1) 2675/     D5B : 18 02               		jr	.setefU_D
(1) 2676/     D5D :                     .D_up:
(1) 2677/     D5D : 79                  		ld	a,c
(1) 2678/     D5E : 87                  		add	a,a
(1) 2679/     D5F :                     .setefU_D:
(1) 2680/     D5F : 5F                  		ld	e,a
(1) 2681/     D60 : FD 7E 08            		ld	a,(iy+ztbl_VolSlide)
(1) 2682/     D63 : 93                  		sub	a,e
(1) 2683/     D64 : 18 0E               		jr	.setef_mcD
(1) 2684/     D66 :                     ; Go DOWN
(1) 2685/     D66 :                     .D_downhf:
(1) 2686/     D66 : 7B                  		ld	a,e
(1) 2687/     D67 : E6 0F               		and	0Fh
(1) 2688/     D69 : 18 04               		jr	.setef_D
(1) 2689/     D6B :                     .D_down:
(1) 2690/     D6B : 7B                  		ld	a,e
(1) 2691/     D6C : E6 0F               		and	0Fh
(1) 2692/     D6E : 87                  		add	a,a
(1) 2693/     D6F :                     .setef_D:
(1) 2694/     D6F : 5F                  		ld	e,a
(1) 2695/     D70 : FD 7E 08            		ld	a,(iy+ztbl_VolSlide)
(1) 2696/     D73 : 83                  		add	a,e
(1) 2697/     D74 :                     ; 		jr	.setef_mcD
(1) 2698/     D74 :                     
(1) 2699/     D74 :                     ; Write slide
(1) 2700/     D74 :                     .setef_mcD:
(1) 2701/     D74 : FD 77 08            		ld	(iy+ztbl_VolSlide),a
(1) 2702/     D77 : C9                  		ret
(1) 2703/     D78 :                     
(1) 2704/     D78 :                     ; ----------------------------------------
(1) 2705/     D78 :                     ; Effect E
(1) 2706/     D78 :                     ; ----------------------------------------
(1) 2707/     D78 :                     
(1) 2708/     D78 :                     .effc_E:
(1) 2709/     D78 : 7B                  		ld	a,e
(1) 2710/     D79 : E6 F0               		and	0F0h
(1) 2711/     D7B : FE F0               		cp	0F0h
(1) 2712/     D7D : C8                  		ret	z
(1) 2713/     D7E : FE E0               		cp	0E0h
(1) 2714/     D80 : C8                  		ret	z
(1) 2715/     D81 : CF                  		rst	8
(1) 2716/     D82 : 7B                  		ld	a,e
(1) 2717/     D83 : ED 44               		neg	a
(1) 2718/     D85 : 18 0B               		jr	.wrt_EF
(1) 2719/     D87 :                     
(1) 2720/     D87 :                     ; ----------------------------------------
(1) 2721/     D87 :                     ; Effect F
(1) 2722/     D87 :                     ; ----------------------------------------
(1) 2723/     D87 :                     
(1) 2724/     D87 :                     .effc_F:
(1) 2725/     D87 : 7B                  		ld	a,e
(1) 2726/     D88 : E6 F0               		and	0F0h
(1) 2727/     D8A : FE F0               		cp	0F0h
(1) 2728/     D8C : C8                  		ret	z
(1) 2729/     D8D : FE E0               		cp	0E0h
(1) 2730/     D8F : C8                  		ret	z
(1) 2731/     D90 : CF                  		rst	8
(1) 2732/     D91 : 7B                  		ld	a,e
(1) 2733/     D92 :                     .wrt_EF:
(1) 2734/     D92 : 87                  		add	a,a
(1) 2735/     D93 : 87                  		add	a,a
(1) 2736/     D94 : FD 77 06            		ld	(iy+ztbl_PitchBend),a
(1) 2737/     D97 : C9                  		ret
(1) 2738/     D98 :                     
(1) 2739/     D98 :                     ; ----------------------------------------
(1) 2740/     D98 :                     ; Effect X
(1) 2741/     D98 :                     ;
(1) 2742/     D98 :                     ; Common panning values:
(1) 2743/     D98 :                     ;  00h LEFT
(1) 2744/     D98 :                     ;  80h MIDDLE
(1) 2745/     D98 :                     ; 0FFh RIGHT
(1) 2746/     D98 :                     ; ----------------------------------------
(1) 2747/     D98 :                     
(1) 2748/     D98 :                     .effc_X:
(1) 2749/     D98 : 16 00               		ld	d,0
(1) 2750/     D9A : 7E                  		ld	a,(hl)
(1) 2751/     D9B : E6 F0               		and	11110000b
(1) 2752/     D9D : FE 80               		cp	80h		; PSG?
(1) 2753/     D9F : 28 19               		jr	z,.res_pan
(1) 2754/     DA1 : FE 90               		cp	90h		; PSGN?
(1) 2755/     DA3 : 28 15               		jr	z,.res_pan
(1) 2756/     DA5 : FE D0               		cp	0D0h		; MCD: write separate PAN values
(1) 2757/     DA7 : CC C4 0D            		call	z,.pan_mcd	; <-- CALL, not JP
(1) 2758/     DAA :                     
(1) 2759/     DAA :                     	; ----------------------------------------
(1) 2760/     DAA :                     	; Common panning bits: %00LR0000
(1) 2761/     DAA :                     	; (REVERSE: 0-on 1-off)
(1) 2762/     DAA : CF                  		rst	8
(1) 2763/     DAB : E5                  		push	hl
(1) 2764/     DAC : 21 E7 0D            		ld	hl,.comn_panlist
(1) 2765/     DAF : 7B                  		ld	a,e
(1) 2766/     DB0 : 07                  		rlca
(1) 2767/     DB1 : 07                  		rlca
(1) 2768/     DB2 : 07                  		rlca
(1) 2769/     DB3 : E6 07               		and	0111b
(1) 2770/     DB5 :                     ; 		ld	d,0
(1) 2771/     DB5 : 5F                  		ld	e,a
(1) 2772/     DB6 : CF                  		rst	8
(1) 2773/     DB7 : 19                  		add	hl,de
(1) 2774/     DB8 : 56                  		ld	d,(hl)
(1) 2775/     DB9 : E1                  		pop	hl
(1) 2776/     DBA :                     .res_pan:
(1) 2777/     DBA : DD 7E 00            		ld	a,(ix+chnl_Flags)	; Save panning
(1) 2778/     DBD : E6 CF               		and	11001111b
(1) 2779/     DBF : B2                  		or	d
(1) 2780/     DC0 : DD 77 00            		ld	(ix+chnl_Flags),a
(1) 2781/     DC3 : C9                  		ret
(1) 2782/     DC4 :                     
(1) 2783/     DC4 :                     	; ----------------------------------------
(1) 2784/     DC4 :                     	; MCD panning
(1) 2785/     DC4 :                     .pan_mcd:
(1) 2786/     DC4 : E5                  		push	hl
(1) 2787/     DC5 : D5                  		push	de
(1) 2788/     DC6 : 16 00               		ld	d,0
(1) 2789/     DC8 : 21 EF 0D            		ld	hl,.pcm_panlist
(1) 2790/     DCB : 7B                  		ld	a,e
(1) 2791/     DCC : E6 F8               		and	0F8h
(1) 2792/     DCE : 0F                  		rrca
(1) 2793/     DCF : 0F                  		rrca
(1) 2794/     DD0 : 0F                  		rrca
(1) 2795/     DD1 : 5F                  		ld	e,a
(1) 2796/     DD2 : 19                  		add	hl,de
(1) 2797/     DD3 : 7E                  		ld	a,(hl)
(1) 2798/     DD4 : 21 F5 16            		ld	hl,pcmcom+32
(1) 2799/     DD7 : 16 00               		ld	d,0
(1) 2800/     DD9 : FD 5E 03            		ld	e,(iy+ztbl_Chip)
(1) 2801/     DDC : 19                  		add	hl,de
(1) 2802/     DDD : 2F                  		cpl
(1) 2803/     DDE : 77                  		ld	(hl),a
(1) 2804/     DDF : D1                  		pop	de
(1) 2805/     DE0 : E1                  		pop	hl
(1) 2806/     DE1 : 3E 01               		ld	a,1
(1) 2807/     DE3 : 32 D1 19            		ld	(mcdUpd),a
(1) 2808/     DE6 : C9                  		ret
(1) 2809/     DE7 :                     
(1) 2810/     DE7 :                     ; 0 - ENABLE, 1 - DISABLE
(1) 2811/     DE7 :                     ; 00LR0000b
(1) 2812/     DE7 :                     .comn_panlist:
(1) 2813/     DE7 : 10                  		db 00010000b
(1) 2814/     DE8 : 10                  		db 00010000b
(1) 2815/     DE9 : 10                  		db 00010000b
(1) 2816/     DEA : 00                  		db 00000000b
(1) 2817/     DEB : 00                  		db 00000000b
(1) 2818/     DEC : 20                  		db 00100000b
(1) 2819/     DED : 20                  		db 00100000b
(1) 2820/     DEE : 20                  		db 00100000b
(1) 2821/     DEF :                     
(1) 2822/     DEF :                     ; REVERSE OUTPUT BITS
(1) 2823/     DEF :                     ; RRRR | LLLL
(1) 2824/     DEF :                     .pcm_panlist:
(1) 2825/     DEF : F0                  		db 0F0h	; 00h
(1) 2826/     DF0 : E0                  		db 0E0h
(1) 2827/     DF1 : D0                  		db 0D0h	; 10h
(1) 2828/     DF2 : C0                  		db 0C0h
(1) 2829/     DF3 : B0                  		db 0B0h	; 20h
(1) 2830/     DF4 : A0                  		db 0A0h
(1) 2831/     DF5 : 90                  		db 090h	; 30h
(1) 2832/     DF6 : 80                  		db 080h
(1) 2833/     DF7 : 70                  		db 070h	; 40h
(1) 2834/     DF8 : 60                  		db 060h
(1) 2835/     DF9 : 50                  		db 050h	; 50h
(1) 2836/     DFA : 40                  		db 040h
(1) 2837/     DFB : 30                  		db 030h	; 60h
(1) 2838/     DFC : 20                  		db 020h
(1) 2839/     DFD : 10                  		db 010h	; 70h
(1) 2840/     DFE : 00                  		db 000h
(1) 2841/     DFF : 00                  		db 000h ; 80h
(1) 2842/     E00 : 01                  		db 001h
(1) 2843/     E01 : 02                  		db 002h ; 90h
(1) 2844/     E02 : 03                  		db 003h
(1) 2845/     E03 : 04                  		db 004h ; A0h
(1) 2846/     E04 : 05                  		db 005h
(1) 2847/     E05 : 06                  		db 006h ; B0h
(1) 2848/     E06 : 07                  		db 007h
(1) 2849/     E07 : 08                  		db 008h ; C0h
(1) 2850/     E08 : 09                  		db 009h
(1) 2851/     E09 : 0A                  		db 00Ah ; D0h
(1) 2852/     E0A : 0B                  		db 00Bh
(1) 2853/     E0B : 0C                  		db 00Ch ; E0h
(1) 2854/     E0C : 0D                  		db 00Dh
(1) 2855/     E0D : 0E                  		db 00Eh ; F0h
(1) 2856/     E0E : 0F                  		db 00Fh
(1) 2857/     E0F :                     
(1) 2858/     E0F :                     ; ----------------------------------------
(1) 2859/     E0F :                     ; NEW volume
(1) 2860/     E0F :                     ; ----------------------------------------
(1) 2861/     E0F :                     
(1) 2862/     E0F :                     .volu:
(1) 2863/     E0F : DD 7E 04            		ld	a,(ix+chnl_Vol)
(1) 2864/     E12 : D6 40               		sub	a,64
(1) 2865/     E14 : FD 77 07            		ld	(iy+ztbl_Volume),a	; BASE volume
(1) 2866/     E17 : C9                  		ret
(1) 2867/     E18 :                     
(1) 2868/     E18 :                     ; ----------------------------------------
(1) 2869/     E18 :                     ; NEW instrument
(1) 2870/     E18 :                     ; ----------------------------------------
(1) 2871/     E18 :                     
(1) 2872/     E18 :                     .inst:
(1) 2873/     E18 : 7E                  		ld	a,(hl)
(1) 2874/     E19 : E6 F0               		and	11110000b
(1) 2875/     E1B : FE 80               		cp	080h
(1) 2876/     E1D : 28 24               		jr	z,.ins_psg
(1) 2877/     E1F : FE 90               		cp	090h
(1) 2878/     E21 : 28 1A               		jr	z,.ins_psgn
(1) 2879/     E23 : FE A0               		cp	0A0h
(1) 2880/     E25 : 28 52               		jr	z,.ins_fm
(1) 2881/     E27 : CF                  		rst	8
(1) 2882/     E28 : FE B0               		cp	0B0h
(1) 2883/     E2A : 28 4D               		jr	z,.ins_fm
(1) 2884/     E2C : FE C0               		cp	0C0h
(1) 2885/     E2E : CA D4 0E            		jp	z,.ins_dac
(1) 2886/     E31 : FE D0               		cp	0D0h
(1) 2887/     E33 : CA 28 0F            		jp	z,.ins_pcm
(1) 2888/     E36 : FE E0               		cp	0E0h
(1) 2889/     E38 : CA 65 0F            		jp	z,.ins_pwm
(1) 2890/     E3B : CF                  		rst	8
(1) 2891/     E3C :                     .invl_ins:
(1) 2892/     E3C : C9                  		ret
(1) 2893/     E3D :                     
(1) 2894/     E3D :                     ; ----------------------------------------
(1) 2895/     E3D :                     ; PSG
(1) 2896/     E3D :                     
(1) 2897/     E3D :                     .ins_psgn:
(1) 2898/     E3D : 7E                  		ld	a,(hl)		; Grab noise setting
(1) 2899/     E3E : E6 07               		and	0111b
(1) 2900/     E40 : 32 2F 00            		ld	(psgHatMode),a	; ** GLOBAL SETTING
(1) 2901/     E43 :                     .ins_psg:
(1) 2902/     E43 : CF                  		rst	8
(1) 2903/     E44 : DD E5               		push	ix
(1) 2904/     E46 : E5                  		push	hl
(1) 2905/     E47 : 23                  		inc	hl		; Skip ID
(1) 2906/     E48 : DD 21 4D 17         		ld	ix,psgcom	; Read psg control
(1) 2907/     E4C : FD 5E 03            		ld	e,(iy+ztbl_Chip)
(1) 2908/     E4F : 16 00               		ld	d,0
(1) 2909/     E51 : DD 19               		add	ix,de
(1) 2910/     E53 : 7E                  		ld	a,(hl)
(1) 2911/     E54 : CF                  		rst	8
(1) 2912/     E55 : 23                  		inc	hl
(1) 2913/     E56 : 7E                  		ld	a,(hl)
(1) 2914/     E57 : DD 77 24            		ld	(ix+ALV),a	; ALV
(1) 2915/     E5A : 23                  		inc	hl
(1) 2916/     E5B : 7E                  		ld	a,(hl)
(1) 2917/     E5C : DD 77 08            		ld	(ix+ATK),a	; ATK
(1) 2918/     E5F : 23                  		inc	hl
(1) 2919/     E60 : 7E                  		ld	a,(hl)
(1) 2920/     E61 : CF                  		rst	8
(1) 2921/     E62 : DD 77 10            		ld	(ix+SLV),a	; SLV
(1) 2922/     E65 : 23                  		inc	hl
(1) 2923/     E66 : 7E                  		ld	a,(hl)
(1) 2924/     E67 : DD 77 0C            		ld	(ix+DKY),a	; DKY
(1) 2925/     E6A : 23                  		inc	hl
(1) 2926/     E6B : 7E                  		ld	a,(hl)
(1) 2927/     E6C : DD 77 14            		ld	(ix+RRT),a	; RRT
(1) 2928/     E6F : 23                  		inc	hl
(1) 2929/     E70 : 7E                  		ld	a,(hl)
(1) 2930/     E71 : CF                  		rst	8
(1) 2931/     E72 : DD 77 2C            		ld	(ix+ARP),a	; ARP
(1) 2932/     E75 : E1                  		pop	hl
(1) 2933/     E76 : DD E1               		pop	ix
(1) 2934/     E78 : C9                  		ret
(1) 2935/     E79 :                     
(1) 2936/     E79 :                     ; ----------------------------------------
(1) 2937/     E79 :                     ; FM/FM3
(1) 2938/     E79 :                     
(1) 2939/     E79 :                     .ins_fm:
(1) 2940/     E79 : FD 7E 03            		ld	a,(iy+ztbl_Chip)
(1) 2941/     E7C : E6 07               		and	0111b
(1) 2942/     E7E : 16 00               		ld	d,0
(1) 2943/     E80 : 87                  		add	a,a
(1) 2944/     E81 : 5F                  		ld	e,a
(1) 2945/     E82 : DD E5               		push	ix
(1) 2946/     E84 : E5                  		push	hl
(1) 2947/     E85 : C5                  		push	bc
(1) 2948/     E86 : DD 21 CA 19         		ld	ix,fmcach_list
(1) 2949/     E8A : DD 19               		add	ix,de
(1) 2950/     E8C : CF                  		rst	8
(1) 2951/     E8D : DD 5E 00            		ld	e,(ix)
(1) 2952/     E90 : DD 23               		inc	ix
(1) 2953/     E92 : DD 56 00            		ld	d,(ix)
(1) 2954/     E95 :                     
(1) 2955/     E95 : DD 21 79 18         		ld	ix,fmlist_rsave
(1) 2956/     E99 : FD 7E 03            		ld	a,(iy+ztbl_Chip)
(1) 2957/     E9C : 87                  		add	a,a
(1) 2958/     E9D : 87                  		add	a,a
(1) 2959/     E9E : 06 00               		ld	b,0
(1) 2960/     EA0 : 4F                  		ld	c,a
(1) 2961/     EA1 : DD 09               		add	ix,bc
(1) 2962/     EA3 : 23                  		inc	hl			; Skip id and pitch
(1) 2963/     EA4 : 23                  		inc	hl
(1) 2964/     EA5 : 46                  		ld	b,(hl)
(1) 2965/     EA6 : 23                  		inc	hl
(1) 2966/     EA7 : 7E                  		ld	a,(hl)
(1) 2967/     EA8 : 23                  		inc	hl
(1) 2968/     EA9 : 6E                  		ld	l,(hl)
(1) 2969/     EAA : 67                  		ld	h,a
(1) 2970/     EAB :                     	;   ix - last MID and LOW bytes
(1) 2971/     EAB :                     	;   de - current FM cache
(1) 2972/     EAB :                     	; b,hl - 24-bit ROM address
(1) 2973/     EAB : DD 7E 02            		ld	a,(ix+2)
(1) 2974/     EAE : B8                  		cp	b
(1) 2975/     EAF : 20 0E               		jr	nz,.new_romdat
(1) 2976/     EB1 : CF                  		rst	8
(1) 2977/     EB2 : DD 7E 01            		ld	a,(ix+1)
(1) 2978/     EB5 : BC                  		cp	h
(1) 2979/     EB6 : 20 07               		jr	nz,.new_romdat
(1) 2980/     EB8 : DD 7E 00            		ld	a,(ix)
(1) 2981/     EBB : BD                  		cp	l
(1) 2982/     EBC : 28 11               		jr	z,.same_patch
(1) 2983/     EBE : CF                  		rst	8
(1) 2984/     EBF :                     .new_romdat:
(1) 2985/     EBF : DD 70 02            		ld	(ix+2),b
(1) 2986/     EC2 : DD 74 01            		ld	(ix+1),h
(1) 2987/     EC5 : DD 75 00            		ld	(ix),l
(1) 2988/     EC8 : 78                  		ld	a,b
(1) 2989/     EC9 : 01 28 00            		ld	bc,28h			; <- size
(1) 2990/     ECC : CD D0 11            		call	readRom			; *** ROM ACCESS ***
(1) 2991/     ECF :                     .same_patch:
(1) 2992/     ECF : C1                  		pop	bc
(1) 2993/     ED0 : E1                  		pop	hl
(1) 2994/     ED1 : DD E1               		pop	ix
(1) 2995/     ED3 : C9                  		ret
(1) 2996/     ED4 :                     
(1) 2997/     ED4 :                     ; ----------------------------------------
(1) 2998/     ED4 :                     
(1) 2999/     ED4 :                     .ins_dac:
(1) 3000/     ED4 : E5                  		push	hl
(1) 3001/     ED5 : C5                  		push	bc
(1) 3002/     ED6 : CD 22 14            		call	dac_off
(1) 3003/     ED9 : 7E                  		ld	a,(hl)
(1) 3004/     EDA : E6 0F               		and	00001111b
(1) 3005/     EDC : 32 F5 1C            		ld	(wave_Flags),a
(1) 3006/     EDF : CF                  		rst	8
(1) 3007/     EE0 : 23                  		inc	hl
(1) 3008/     EE1 : 23                  		inc	hl
(1) 3009/     EE2 : 5E                  		ld	e,(hl)
(1) 3010/     EE3 : 23                  		inc	hl
(1) 3011/     EE4 : 7E                  		ld	a,(hl)
(1) 3012/     EE5 : 23                  		inc	hl
(1) 3013/     EE6 : 6E                  		ld	l,(hl)
(1) 3014/     EE7 : 67                  		ld	h,a
(1) 3015/     EE8 : E5                  		push	hl
(1) 3016/     EE9 : 7B                  		ld	a,e
(1) 3017/     EEA : 01 06 00            		ld	bc,6		; Skip head
(1) 3018/     EED : 09                  		add	hl,bc
(1) 3019/     EEE : CE 00               		adc	a,0
(1) 3020/     EF0 : 22 EA 1C            		ld	(wave_Start),hl	; Set START point
(1) 3021/     EF3 : 32 EC 1C            		ld	(wave_Start+2),a
(1) 3022/     EF6 : E1                  		pop	hl
(1) 3023/     EF7 : 7B                  		ld	a,e
(1) 3024/     EF8 : 11 EE 19            		ld	de,sampleHead
(1) 3025/     EFB : 01 06 00            		ld	bc,6
(1) 3026/     EFE : D5                  		push	de
(1) 3027/     EFF : CF                  		rst	8
(1) 3028/     F00 : CD D0 11            		call	readRom	; *** ROM ACCESS ***
(1) 3029/     F03 : E1                  		pop	hl
(1) 3030/     F04 :                     	; hl - temporal header
(1) 3031/     F04 : 5E                  		ld	e,(hl)
(1) 3032/     F05 : 23                  		inc	hl
(1) 3033/     F06 : 56                  		ld	d,(hl)
(1) 3034/     F07 : 23                  		inc	hl
(1) 3035/     F08 : 7E                  		ld	a,(hl)
(1) 3036/     F09 : 23                  		inc	hl
(1) 3037/     F0A : ED 53 ED 1C         		ld	(wave_Len),de	; LEN
(1) 3038/     F0E : 32 EF 1C            		ld	(wave_Len+2),a
(1) 3039/     F11 : 5E                  		ld	e,(hl)
(1) 3040/     F12 : 23                  		inc	hl
(1) 3041/     F13 : CF                  		rst	8
(1) 3042/     F14 : 56                  		ld	d,(hl)
(1) 3043/     F15 : 23                  		inc	hl
(1) 3044/     F16 : 7E                  		ld	a,(hl)
(1) 3045/     F17 : 23                  		inc	hl
(1) 3046/     F18 : ED 53 F0 1C         		ld	(wave_Loop),de	; LOOP
(1) 3047/     F1C : 32 F2 1C            		ld	(wave_Loop+2),a
(1) 3048/     F1F : 11 06 28            		ld	de,2806h	; keys off
(1) 3049/     F22 : CD F7 13            		call	fm_send_1
(1) 3050/     F25 : C1                  		pop	bc
(1) 3051/     F26 : E1                  		pop	hl
(1) 3052/     F27 :                     ; .same_dac:
(1) 3053/     F27 : C9                  		ret
(1) 3054/     F28 :                     
(1) 3055/     F28 :                     ; ----------------------------------------
(1) 3056/     F28 :                     
(1) 3057/     F28 :                     .ins_pcm:
(1) 3058/     F28 : DD E5               		push	ix
(1) 3059/     F2A : E5                  		push	hl
(1) 3060/     F2B : C5                  		push	bc
(1) 3061/     F2C : 7E                  		ld	a,(hl)		; Stereo|Loop bits
(1) 3062/     F2D : E6 01               		and	00000001b	; Read loop bit
(1) 3063/     F2F : 0F                  		rrca			; Move to MSB
(1) 3064/     F30 : CF                  		rst	8
(1) 3065/     F31 : 23                  		inc	hl		; Skip ID and Pitch
(1) 3066/     F32 : 23                  		inc	hl
(1) 3067/     F33 : 5E                  		ld	e,(hl)		; Read 24-bit pointer
(1) 3068/     F34 : B3                  		or	e
(1) 3069/     F35 : 5F                  		ld	e,a
(1) 3070/     F36 : 23                  		inc	hl
(1) 3071/     F37 : 7E                  		ld	a,(hl)
(1) 3072/     F38 : 23                  		inc	hl
(1) 3073/     F39 : 6E                  		ld	l,(hl)
(1) 3074/     F3A : 67                  		ld	h,a
(1) 3075/     F3B :                     	; d    - Loop enable bit
(1) 3076/     F3B :                     	; e,hl - 24-bit pointer + loop bit
(1) 3077/     F3B : DD 21 D5 16         		ld	ix,pcmcom
(1) 3078/     F3F : 06 00               		ld	b,0
(1) 3079/     F41 : FD 4E 03            		ld	c,(iy+ztbl_Chip)
(1) 3080/     F44 : DD 09               		add	ix,bc
(1) 3081/     F46 : 01 28 00            		ld	bc,40		; Go to 40
(1) 3082/     F49 : DD 09               		add	ix,bc
(1) 3083/     F4B : 01 08 00            		ld	bc,8
(1) 3084/     F4E : DD 73 00            		ld	(ix),e		; Write 24-bit pointer
(1) 3085/     F51 : DD 09               		add	ix,bc
(1) 3086/     F53 : DD 74 00            		ld	(ix),h
(1) 3087/     F56 : DD 09               		add	ix,bc
(1) 3088/     F58 : DD 75 00            		ld	(ix),l
(1) 3089/     F5B : C1                  		pop	bc
(1) 3090/     F5C : E1                  		pop	hl
(1) 3091/     F5D : DD E1               		pop	ix
(1) 3092/     F5F : 3E 01               		ld	a,1
(1) 3093/     F61 : 32 D1 19            		ld	(mcdUpd),a
(1) 3094/     F64 : C9                  		ret
(1) 3095/     F65 :                     
(1) 3096/     F65 :                     ; ----------------------------------------
(1) 3097/     F65 :                     
(1) 3098/     F65 :                     .ins_pwm:
(1) 3099/     F65 : DD E5               		push	ix
(1) 3100/     F67 : E5                  		push	hl
(1) 3101/     F68 : C5                  		push	bc
(1) 3102/     F69 : 7E                  		ld	a,(hl)		; Stereo|Loop bits
(1) 3103/     F6A : E6 03               		and	00000011b
(1) 3104/     F6C : 0F                  		rrca
(1) 3105/     F6D : 0F                  		rrca
(1) 3106/     F6E : 4F                  		ld	c,a
(1) 3107/     F6F : CF                  		rst	8
(1) 3108/     F70 : 23                  		inc	hl		; Skip ID and Pitch
(1) 3109/     F71 : 23                  		inc	hl
(1) 3110/     F72 : 56                  		ld	d,(hl)
(1) 3111/     F73 : 23                  		inc	hl
(1) 3112/     F74 : 5E                  		ld	e,(hl)
(1) 3113/     F75 : 23                  		inc	hl
(1) 3114/     F76 : 7E                  		ld	a,(hl)
(1) 3115/     F77 : 23                  		inc	hl
(1) 3116/     F78 : 6E                  		ld	l,(hl)
(1) 3117/     F79 : 67                  		ld	h,a
(1) 3118/     F7A : 79                  		ld	a,c
(1) 3119/     F7B : B2                  		or	d
(1) 3120/     F7C : 57                  		ld	d,a
(1) 3121/     F7D : CF                  		rst	8
(1) 3122/     F7E :                     	; de,hl - 32-bit PWM pointer
(1) 3123/     F7E : DD 21 15 17         		ld	ix,pwmcom
(1) 3124/     F82 : 06 00               		ld	b,0
(1) 3125/     F84 : FD 4E 03            		ld	c,(iy+ztbl_Chip)
(1) 3126/     F87 : DD 09               		add	ix,bc
(1) 3127/     F89 : 01 18 00            		ld	bc,24
(1) 3128/     F8C : DD 09               		add	ix,bc		; Move to PWOUTF
(1) 3129/     F8E : 01 08 00            		ld	bc,8
(1) 3130/     F91 : DD 72 00            		ld	(ix),d
(1) 3131/     F94 : DD 09               		add	ix,bc
(1) 3132/     F96 : DD 73 00            		ld	(ix),e
(1) 3133/     F99 : DD 09               		add	ix,bc
(1) 3134/     F9B : DD 74 00            		ld	(ix),h
(1) 3135/     F9E : DD 09               		add	ix,bc
(1) 3136/     FA0 : DD 75 00            		ld	(ix),l
(1) 3137/     FA3 : C1                  		pop	bc
(1) 3138/     FA4 : E1                  		pop	hl
(1) 3139/     FA5 : DD E1               		pop	ix
(1) 3140/     FA7 : 3E 01               		ld	a,1
(1) 3141/     FA9 : 32 D0 19            		ld	(marsUpd),a
(1) 3142/     FAC : C9                  		ret
(1) 3143/     FAD :                     
(1) 3144/     FAD :                     ; ----------------------------------------
(1) 3145/     FAD :                     ; NEW note
(1) 3146/     FAD :                     ; ----------------------------------------
(1) 3147/     FAD :                     
(1) 3148/     FAD :                     .note:
(1) 3149/     FAD : 78                  		ld	a,b			; Volume bit?
(1) 3150/     FAE : E6 04               		and	0100b
(1) 3151/     FB0 : 20 05               		jr	nz,.fm_hasvol
(1) 3152/     FB2 : FD 36 07 00         		ld	(iy+ztbl_Volume),0	; Reset to default volume
(1) 3153/     FB6 : CF                  		rst	8
(1) 3154/     FB7 :                     .fm_hasvol:
(1) 3155/     FB7 : DD 7E 02            		ld	a,(ix+chnl_Note)
(1) 3156/     FBA : 4F                  		ld	c,a
(1) 3157/     FBB : FE FF               		cp	-1
(1) 3158/     FBD : C8                  		ret	z
(1) 3159/     FBE : FE FE               		cp	-2
(1) 3160/     FC0 : C8                  		ret	z
(1) 3161/     FC1 :                     ; 		rst	20h
(1) 3162/     FC1 : CF                  		rst	8
(1) 3163/     FC2 : 7E                  		ld	a,(hl)
(1) 3164/     FC3 : E6 F0               		and	11110000b
(1) 3165/     FC5 : FE A0               		cp	0A0h
(1) 3166/     FC7 : 28 0B               		jr	z,.n_fm
(1) 3167/     FC9 :                     
(1) 3168/     FC9 :                     ; --------------------------------
(1) 3169/     FC9 :                     
(1) 3170/     FC9 :                     .n_indx:
(1) 3171/     FC9 : 79                  		ld	a,c
(1) 3172/     FCA :                     .n_stfreq:
(1) 3173/     FCA : 23                  		inc	hl			; Skip ID
(1) 3174/     FCB : 5E                  		ld	e,(hl)			; Read pitch
(1) 3175/     FCC : 2B                  		dec	hl
(1) 3176/     FCD : 83                  		add	a,e			; Note + pitch
(1) 3177/     FCE : CF                  		rst	8
(1) 3178/     FCF : 87                  		add	a,a			; * 2
(1) 3179/     FD0 : FD 77 05            		ld	(iy+ztbl_FreqIndx),a
(1) 3180/     FD3 : C9                  		ret
(1) 3181/     FD4 :                     
(1) 3182/     FD4 :                     ; --------------------------------
(1) 3183/     FD4 :                     ; FM custom search
(1) 3184/     FD4 :                     
(1) 3185/     FD4 :                     .n_fm:
(1) 3186/     FD4 : 79                  		ld	a,c
(1) 3187/     FD5 : 23                  		inc	hl		; Skip ID
(1) 3188/     FD6 : 5E                  		ld	e,(hl)		; Read pitch
(1) 3189/     FD7 : 2B                  		dec	hl
(1) 3190/     FD8 : CF                  		rst	8
(1) 3191/     FD9 : 83                  		add	a,e		; Note + pitch
(1) 3192/     FDA :                     	; Search for octave and note...
(1) 3193/     FDA : 0E 00               		ld	c,0		; c - octave
(1) 3194/     FDC : 16 07               		ld	d,7
(1) 3195/     FDE :                     .get_oct:
(1) 3196/     FDE : 5F                  		ld	e,a		; e - note
(1) 3197/     FDF : D6 0C               		sub	12
(1) 3198/     FE1 : FA E8 0F            		jp	m,.fnd_oct
(1) 3199/     FE4 : 0C                  		inc	c
(1) 3200/     FE5 : 15                  		dec	d
(1) 3201/     FE6 : 20 F6               		jr	nz,.get_oct
(1) 3202/     FE8 :                     .fnd_oct:
(1) 3203/     FE8 : CF                  		rst	8
(1) 3204/     FE9 : 7B                  		ld	a,e
(1) 3205/     FEA : 87                  		add	a,a		; Note * 2
(1) 3206/     FEB : E6 1F               		and	00011111b
(1) 3207/     FED : CB 09               		rrc	c
(1) 3208/     FEF : CB 09               		rrc	c
(1) 3209/     FF1 : CB 09               		rrc	c
(1) 3210/     FF3 : CF                  		rst	8
(1) 3211/     FF4 : B1                  		or	c
(1) 3212/     FF5 : FD 77 05            		ld	(iy+ztbl_FreqIndx),a	; Save octave + index: OOOiiiiib
(1) 3213/     FF8 : C9                  		ret
(1) 3214/     FF9 :                     
(1) 3215/     FF9 :                     ; ----------------------------------------
(1) 3216/     FF9 :                     
(1) 3217/     FF9 :                     .chnl_ulnkcut:
(1) 3218/     FF9 :                     
(1) 3219/     FF9 :                     .chnl_ulnkoff:
(1) 3220/     FF9 :                     
(1) 3221/     FF9 :                     .chnl_ulnk:
(1) 3222/     FF9 : DD 56 01            		ld	d,(ix+chnl_Chip)
(1) 3223/     FFC : CF                  		rst	8
(1) 3224/     FFD : FD E5               		push	iy
(1) 3225/     FFF : E1                  		pop	hl
(1) 3226/    1000 :                     ; 		jp	tblz_clear
(1) 3227/    1000 :                     
(1) 3228/    1000 :                     ; ----------------------------------------
(1) 3229/    1000 :                     ; Reset all table
(1) 3230/    1000 :                     ;
(1) 3231/    1000 :                     ; hl - Current channel table
(1) 3232/    1000 :                     ; d - Silence chip
(1) 3233/    1000 :                     ;
(1) 3234/    1000 :                     ; Uses:
(1) 3235/    1000 :                     ; b
(1) 3236/    1000 :                     ; ----------------------------------------
(1) 3237/    1000 :                     
(1) 3238/    1000 :                     tblz_clear:
(1) 3239/    1000 : CF                  		rst	8
(1) 3240/    1001 : 36 00               		ld	(hl),0			; Delete link
(1) 3241/    1003 : 23                  		inc	hl
(1) 3242/    1004 : 36 00               		ld	(hl),0
(1) 3243/    1006 : 23                  		inc	hl
(1) 3244/    1007 : 72                  		ld	(hl),d			; Set "silence" chip ID.
(1) 3245/    1008 : C9                  		ret
(1) 3246/    1009 :                     
(1) 3247/    1009 :                     ; ============================================================
(1) 3248/    1009 :                     ; --------------------------------------------------------
(1) 3249/    1009 :                     ; Communication with the SCD and 32X
(1) 3250/    1009 :                     ;
(1) 3251/    1009 :                     ; SCD: Sends a level2 interrupt to Sub-CPU
(1) 3252/    1009 :                     ;    | Uses: commM,comm18-1F
(1) 3253/    1009 :                     ;    |
(1) 3254/    1009 :                     ; 32X: Interrupts Slave SH2
(1) 3255/    1009 :                     ;    | Uses: comm8-comm11 (CMD request)
(1) 3256/    1009 :                     ;    | two bits of comm14
(1) 3257/    1009 :                     ; --------------------------------------------------------
(1) 3258/    1009 :                     
(1) 3259/    1009 :                     ; NOTE: careful modifing this
(1) 3260/    1009 :                     
(1) 3261/    1009 :                     zmars_send:
(1) 3262/    1009 :                     	; ----------------------------------------
(1) 3263/    1009 :                     	; Send PCM table
(1) 3265/    1009 : 3A 89 1F            		ld	a,(mcdBlock)	; Enable MARS requests?
(1) 3266/    100C : B7                  		or	a
(1) 3267/    100D : C2 88 10            		jp	nz,.mcdt_blocked
(1) 3268/    1010 : FD 21 0E A0         		ld	iy,8000h|200Eh	; iy - command ports
(1) 3269/    1014 : CF                  		rst	8
(1) 3270/    1015 : 3A D1 19            		ld	a,(mcdUpd)	; NEW transfer?
(1) 3271/    1018 : B7                  		or	a
(1) 3272/    1019 : CA 88 10            		jp	z,.mcdt_blocked
(1) 3273/    101C : AF                  		xor	a
(1) 3274/    101D : 32 D1 19            		ld	(mcdUpd),a
(1) 3275/    1020 : E7                  		rst	20h
(1) 3276/    1021 : CD 26 11            		call	.set_combank
(1) 3277/    1024 : DD 21 D5 16         		ld	ix,pcmcom
(1) 3278/    1028 : 21 00 A0            		ld	hl,8000h|2000h
(1) 3279/    102B :                     .wait_in:
(1) 3280/    102B : FD 7E 01            		ld	a,(iy+1)	; SUB is busy?
(1) 3281/    102E : B7                  		or	a
(1) 3282/    102F : FA 2B 10            		jp	m,.wait_in
(1) 3283/    1032 : FD 7E 00            		ld	a,(iy)		; MAIN got first?
(1) 3284/    1035 : B7                  		or	a		; != 0
(1) 3285/    1036 : 20 F3               		jr	nz,.wait_in
(1) 3286/    1038 : 0E C0               		ld	c,0C0h
(1) 3287/    103A : FD 71 00            		ld	(iy),c		; Set our entrance ID
(1) 3288/    103D : 06 0E               		ld	b,14		; Retry 14 times
(1) 3289/    103F :                     .make_sure:
(1) 3290/    103F : FD 7E 00            		ld	a,(iy)		; Check if did write
(1) 3291/    1042 : B9                  		cp	c
(1) 3292/    1043 : 20 E6               		jr	nz,.wait_in
(1) 3293/    1045 : 10 F8               		djnz	.make_sure
(1) 3294/    1047 : 36 81               		ld	(hl),81h	; Request IRQ
(1) 3295/    1049 : CF                  		rst	8
(1) 3296/    104A :                     .test_sub:
(1) 3297/    104A : FD 7E 01            		ld	a,(iy+1)	; Sub response?
(1) 3298/    104D : E6 C0               		and	0C0h
(1) 3299/    104F : FE C0               		cp	0C0h
(1) 3300/    1051 : 20 F7               		jr	nz,.test_sub
(1) 3301/    1053 : FD CB 00 EE         		set	5,(iy)		; "MAIN" lock
(1) 3302/    1057 : CF                  		rst	8
(1) 3303/    1058 : 11 18 00            		ld	de,10h+8	; ix - MAIN comm ports
(1) 3304/    105B : 19                  		add	hl,de
(1) 3305/    105C :                     	; ix - table
(1) 3306/    105C :                     	; hl - main data
(1) 3307/    105C : 0E 08               		ld	c,40h/8		; c - Packets to send
(1) 3308/    105E :                     .mcd_nextp:
(1) 3309/    105E : FD CB 01 66         		bit	4,(iy+1)	; SUB is busy?
(1) 3310/    1062 : 20 FA               		jr	nz,.mcd_nextp
(1) 3311/    1064 : 06 08               		ld	b,8		; 2words to write
(1) 3312/    1066 : E5                  		push	hl
(1) 3313/    1067 :                     .copy_bytes:
(1) 3314/    1067 : DD 7E 00            		ld	a,(ix)
(1) 3315/    106A : 77                  		ld	(hl),a
(1) 3316/    106B : DD 23               		inc	ix
(1) 3317/    106D : 23                  		inc	hl
(1) 3318/    106E : 10 F7               		djnz	.copy_bytes
(1) 3319/    1070 : E1                  		pop	hl
(1) 3320/    1071 : FD CB 00 E6         		set	4,(iy)		; PASS bit
(1) 3321/    1075 : CF                  		rst	8
(1) 3322/    1076 :                     .wait_sub:
(1) 3323/    1076 : FD CB 01 66         		bit	4,(iy+1)	; SUB is busy?
(1) 3324/    107A : 28 FA               		jr	z,.wait_sub
(1) 3325/    107C : FD CB 00 A6         		res	4,(iy)		; Clear PASS bit
(1) 3326/    1080 : CF                  		rst	8
(1) 3327/    1081 : 0D                  		dec	c
(1) 3328/    1082 : 20 DA               		jr	nz,.mcd_nextp
(1) 3329/    1084 : FD 36 00 00         		ld	(iy),0		; "MAIN" unlock
(1) 3330/    1088 :                     .mcdt_blocked:
(1) 3331/    1088 : 21 D5 16            		ld	hl,pcmcom
(1) 3332/    108B : AF                  		xor	a
(1) 3333/    108C : 06 08               		ld	b,8		; MAX PCM channels
(1) 3334/    108E : CF                  		rst	8
(1) 3335/    108F :                     .clr_pcm:
(1) 3336/    108F : 77                  		ld	(hl),a
(1) 3337/    1090 : 23                  		inc	hl
(1) 3338/    1091 : 10 FC               		djnz	.clr_pcm
(1) 3339/    1093 :                     .mcdt_noupd:
(1) 3340/    1093 : 06 03               		ld	b,3
(1) 3341/    1095 : 10 FE               		djnz	$
(1) 3342/    1097 : 00                  		nop
(1) 3343/    1098 : 00                  		nop
(1) 3344/    1099 : CF                  		rst	8
(1) 3345/    109A : 00                  		nop
(1) 3346/    109B : 00                  		nop
(1) 3347/    109C : 00                  		nop
(1) 3349/    109D :                     	; ----------------------------------------
(1) 3350/    109D :                     	; Send PWM table
(1) 3352/    109D : 3A 8A 1F            		ld	a,(marsBlock)	; Enable MARS requests?
(1) 3353/    10A0 : B7                  		or	a
(1) 3354/    10A1 : C2 0D 11            		jp	nz,.blocked_m
(1) 3355/    10A4 : CF                  		rst	8
(1) 3356/    10A5 : 3A D0 19            		ld	a,(marsUpd)	; NEW transfer?
(1) 3357/    10A8 : B7                  		or	a
(1) 3358/    10A9 : 28 62               		jr	z,.blocked_m
(1) 3359/    10AB : AF                  		xor	a
(1) 3360/    10AC : 32 D0 19            		ld	(marsUpd),a
(1) 3361/    10AF : E7                  		rst	20h
(1) 3362/    10B0 : CD 26 11            		call	.set_combank
(1) 3363/    10B3 : FD 21 00 D1         		ld	iy,8000h|5100h	; iy - mars sysreg
(1) 3364/    10B7 : DD 21 15 17         		ld	ix,pwmcom
(1) 3365/    10BB :                     .wait_enter:
(1) 3366/    10BB : CF                  		rst	8
(1) 3367/    10BC : FD 7E 2E            		ld	a,(iy+comm14)	; check if 68k got first.
(1) 3368/    10BF : CB 7F               		bit	7,a
(1) 3369/    10C1 : 20 F8               		jr	nz,.wait_enter
(1) 3370/    10C3 : E6 F0               		and	11110000b
(1) 3371/    10C5 : F6 01               		or	1		; Set CMD task mode $01
(1) 3372/    10C7 : FD 77 2E            		ld	(iy+comm14),a
(1) 3373/    10CA : CF                  		rst	8
(1) 3374/    10CB : E6 0F               		and	00001111b	; Did it write?
(1) 3375/    10CD : FE 01               		cp	1
(1) 3376/    10CF : 20 EA               		jr	nz,.wait_enter	; If not, retry
(1) 3377/    10D1 : FD CB 2E FE         		set	7,(iy+comm14)	; LOCK bit
(1) 3378/    10D5 : FD CB 03 CE         		set	1,(iy+standby)	; Request Slave CMD
(1) 3379/    10D9 :                     ; .wait_cmd:
(1) 3380/    10D9 :                     ; 		bit	1,(iy+standby)	; <-- unstable on HW
(1) 3381/    10D9 :                     ; 		jr	nz,.wait_cmd
(1) 3382/    10D9 : 0E 0E               		ld	c,14		; c - 14 words/2-byte
(1) 3383/    10DB :                     .next_packet:
(1) 3384/    10DB : CF                  		rst	8
(1) 3385/    10DC : FD E5               		push	iy
(1) 3386/    10DE : E1                  		pop	hl
(1) 3387/    10DF : 11 28 00            		ld	de,comm8	; hl - comm8
(1) 3388/    10E2 : 19                  		add	hl,de
(1) 3389/    10E3 : 06 02               		ld	b,2
(1) 3390/    10E5 :                     .next_comm:
(1) 3391/    10E5 : DD 56 00            		ld	d,(ix)
(1) 3392/    10E8 : DD 5E 01            		ld	e,(ix+1)
(1) 3393/    10EB : DD 23               		inc	ix
(1) 3394/    10ED : DD 23               		inc	ix
(1) 3395/    10EF : CF                  		rst	8
(1) 3396/    10F0 : 72                  		ld	(hl),d
(1) 3397/    10F1 : 23                  		inc	hl
(1) 3398/    10F2 : 73                  		ld	(hl),e
(1) 3399/    10F3 : 23                  		inc	hl
(1) 3400/    10F4 : 10 EF               		djnz	.next_comm
(1) 3401/    10F6 : FD CB 2E F6         		set	6,(iy+comm14)	; PASS data bit
(1) 3402/    10FA : CF                  		rst	8
(1) 3403/    10FB :                     .w_pass2:
(1) 3404/    10FB : 00                  		nop
(1) 3405/    10FC : FD CB 2E 76         		bit	6,(iy+comm14)	; PASS cleared?
(1) 3406/    1100 : 20 F9               		jr	nz,.w_pass2
(1) 3407/    1102 : 0D                  		dec	c
(1) 3408/    1103 : 20 D6               		jr	nz,.next_packet
(1) 3409/    1105 : FD CB 2E BE         		res	7,(iy+comm14)	; Break transfer loop
(1) 3410/    1109 : FD CB 2E B6         		res	6,(iy+comm14)	; Clear PASS
(1) 3411/    110D :                     ; Reset comm ports
(1) 3412/    110D :                     .blocked_m:
(1) 3413/    110D : AF                  		xor	a
(1) 3414/    110E : 21 15 17            		ld	hl,pwmcom
(1) 3415/    1111 : 06 08               		ld	b,8
(1) 3416/    1113 : CF                  		rst	8
(1) 3417/    1114 :                     .clr_pwm:
(1) 3418/    1114 : 77                  		ld	(hl),a		; Reset our COM bytes
(1) 3419/    1115 : 23                  		inc	hl
(1) 3420/    1116 : 10 FC               		djnz	.clr_pwm
(1) 3421/    1118 :                     .pwm_exit:
(1) 3422/    1118 : 00                  		nop
(1) 3423/    1119 : 00                  		nop
(1) 3424/    111A : CF                  		rst	8
(1) 3425/    111B : 00                  		nop
(1) 3426/    111C : 00                  		nop
(1) 3427/    111D : 00                  		nop
(1) 3429/    111E : 06 03               		ld	b,3
(1) 3430/    1120 : 10 FE               		djnz	$
(1) 3431/    1122 : 00                  		nop
(1) 3432/    1123 : 00                  		nop
(1) 3433/    1124 : 00                  		nop
(1) 3435/    1125 :                     
(1) 3437/    1125 : C9                  		ret
(1) 3438/    1126 :                     
(1) 3439/    1126 :                     ; --------------------------------------------------------
(1) 3440/    1126 :                     ; Set bank to $A10000 area
(1) 3442/    1126 :                     .set_combank:
(1) 3443/    1126 : 21 00 60            		ld	hl,6000h
(1) 3444/    1129 : 36 00               		ld	(hl),0
(1) 3445/    112B : 36 01               		ld	(hl),1
(1) 3446/    112D : 36 00               		ld	(hl),0
(1) 3447/    112F : 36 00               		ld	(hl),0
(1) 3448/    1131 : CF                  		rst	8
(1) 3449/    1132 : 36 00               		ld	(hl),0
(1) 3450/    1134 : 36 00               		ld	(hl),0
(1) 3451/    1136 : 36 01               		ld	(hl),1
(1) 3452/    1138 : 36 00               		ld	(hl),0
(1) 3453/    113A : 36 01               		ld	(hl),1
(1) 3454/    113C : C9                  		ret
(1) 3456/    113D :                     
(1) 3457/    113D :                     ; ====================================================================
(1) 3458/    113D :                     ; ----------------------------------------------------------------
(1) 3459/    113D :                     ; Subroutines
(1) 3460/    113D :                     ; ----------------------------------------------------------------
(1) 3461/    113D :                     
(1) 3462/    113D :                     ; --------------------------------------------------------
(1) 3463/    113D :                     ; Init sound engine
(1) 3464/    113D :                     ; --------------------------------------------------------
(1) 3465/    113D :                     
(1) 3466/    113D :                     gema_init:
(1) 3467/    113D : CD 31 15            		call	gema_lastbank		; Set last bank slot, solves bus problem with 32X
(1) 3468/    1140 : CD 22 14            		call	dac_off
(1) 3469/    1143 : AF                  		xor	a
(1) 3470/    1144 : 32 D0 19            		ld	(marsUpd),a
(1) 3471/    1147 : 32 D1 19            		ld	(mcdUpd),a
(1) 3472/    114A : 32 87 1F            		ld	(cdRamLen),a
(1) 3473/    114D : FD 21 FC 19         		ld	iy,nikona_BuffList
(1) 3474/    1151 : 0E 01               		ld	c,1			; Start at this priority
(1) 3475/    1153 :                     .setup_list:
(1) 3476/    1153 : FD 7E 00            		ld	a,(iy)
(1) 3477/    1156 : FE FF               		cp	-1
(1) 3478/    1158 : 28 24               		jr	z,.end_setup
(1) 3479/    115A : FD 23               		inc	iy
(1) 3480/    115C : 6F                  		ld	l,a
(1) 3481/    115D : FD 66 00            		ld	h,(iy)
(1) 3482/    1160 : E5                  		push	hl
(1) 3483/    1161 : DD E1               		pop	ix
(1) 3484/    1163 : DD 71 14            		ld	(ix+trk_Priority),c
(1) 3485/    1166 : DD 36 01 FF         		ld	(ix+trk_SeqId),-1	; Reset sequence ID
(1) 3486/    116A : FD 23               		inc	iy
(1) 3487/    116C :                     	; iy - src
(1) 3488/    116C :                     	; hl - dst
(1) 3489/    116C : 11 04 00            		ld	de,trk_Blocks
(1) 3490/    116F : 19                  		add	hl,de
(1) 3491/    1170 : 06 06               		ld	b,MAX_BUFFNTRY-2
(1) 3492/    1172 :                     .st_copy:
(1) 3493/    1172 : FD 7E 00            		ld	a,(iy)
(1) 3494/    1175 : 77                  		ld	(hl),a
(1) 3495/    1176 : FD 23               		inc	iy
(1) 3496/    1178 : 23                  		inc	hl
(1) 3497/    1179 : 10 F7               		djnz	.st_copy
(1) 3498/    117B : 0C                  		inc	c
(1) 3499/    117C : 18 D5               		jr	.setup_list
(1) 3500/    117E :                     .end_setup:
(1) 3501/    117E :                     
(1) 3502/    117E : 11 0B 22            		ld	de,2208h|03h	; Set Default LFO
(1) 3503/    1181 : CD F7 13            		call	fm_send_1
(1) 3504/    1184 : 11 00 27            		ld	de,2700h	; CH3 special/timers OFF
(1) 3505/    1187 : CD F7 13            		call	fm_send_1
(1) 3506/    118A :                     ; 		ld	de,2800h
(1) 3507/    118A : 14                  		inc	d		; FM KEYS off
(1) 3508/    118B : CD F7 13            		call	fm_send_1
(1) 3509/    118E : 1C                  		inc	e
(1) 3510/    118F : CD F7 13            		call	fm_send_1
(1) 3511/    1192 : 1C                  		inc	e
(1) 3512/    1193 : CD F7 13            		call	fm_send_1
(1) 3513/    1196 : 1C                  		inc	e
(1) 3514/    1197 : 1C                  		inc	e
(1) 3515/    1198 : CD F7 13            		call	fm_send_1
(1) 3516/    119B : 1C                  		inc	e
(1) 3517/    119C : CD F7 13            		call	fm_send_1
(1) 3518/    119F : 1C                  		inc	e
(1) 3519/    11A0 : CD F7 13            		call	fm_send_1
(1) 3520/    11A3 : 21 11 7F            		ld	hl,Zpsg_ctrl	; Silence PSG channels
(1) 3521/    11A6 : 36 9F               		ld	(hl),09Fh
(1) 3522/    11A8 : 36 BF               		ld	(hl),0BFh
(1) 3523/    11AA : 36 DF               		ld	(hl),0DFh
(1) 3524/    11AC : 36 FF               		ld	(hl),0FFh
(1) 3525/    11AE : C9                  		ret
(1) 3526/    11AF :                     
(1) 3527/    11AF :                     ; --------------------------------------------------------
(1) 3528/    11AF :                     ; get_tick
(1) 3529/    11AF :                     ;
(1) 3530/    11AF :                     ; Checks if VBlank triggred a TICK
(1) 3531/    11AF :                     ; (1/150 NTSC, 1/120 PAL)
(1) 3532/    11AF :                     ; --------------------------------------------------------
(1) 3533/    11AF :                     
(1) 3534/    11AF :                     get_tick:
(1) 3535/    11AF : F3                  		di				; Disable ints
(1) 3536/    11B0 : F5                  		push	af
(1) 3537/    11B1 : E5                  		push	hl
(1) 3538/    11B2 : 21 F7 1C            		ld	hl,tickFlag		; read last TICK flag
(1) 3539/    11B5 : 7E                  		ld	a,(hl)			; non-zero value (1Fh)?
(1) 3540/    11B6 : B7                  		or 	a
(1) 3541/    11B7 : 28 13               		jr	z,.ctnotick
(1) 3542/    11B9 : 36 00               		ld	(hl),0			; Reset TICK flag
(1) 3543/    11BB : 23                  		inc	hl			; Move to tickCnt
(1) 3544/    11BC : 34                  		inc	(hl)			; and increment
(1) 3545/    11BD : CF                  		rst	8
(1) 3546/    11BE : D5                  		push	de
(1) 3547/    11BF : 2A 31 00            		ld	hl,(sbeatAcc)		; Increment subbeats
(1) 3548/    11C2 : ED 5B 33 00         		ld	de,(sbeatPtck)
(1) 3549/    11C6 : CF                  		rst	8
(1) 3550/    11C7 : 19                  		add	hl,de
(1) 3551/    11C8 : 22 31 00            		ld	(sbeatAcc),hl
(1) 3552/    11CB : D1                  		pop	de
(1) 3553/    11CC :                     .ctnotick:
(1) 3554/    11CC : E1                  		pop	hl
(1) 3555/    11CD : F1                  		pop	af
(1) 3556/    11CE : FB                  		ei				; Enable ints again
(1) 3557/    11CF : C9                  		ret
(1) 3558/    11D0 :                     
(1) 3559/    11D0 :                     ; --------------------------------------------------------
(1) 3560/    11D0 :                     ; readRom
(1) 3561/    11D0 :                     ;
(1) 3562/    11D0 :                     ; Transfer bytes from ROM to Z80 RAM.
(1) 3563/    11D0 :                     ; This also tells to 68k that we want to access ROM
(1) 3564/    11D0 :                     ;
(1) 3565/    11D0 :                     ; Input:
(1) 3566/    11D0 :                     ; a  | 68K Address $xx0000
(1) 3567/    11D0 :                     ;  c | Byte count (size 0 NOT allowed, MAX: 0FFh)
(1) 3568/    11D0 :                     ; hl | 68K Address $00xxxx
(1) 3569/    11D0 :                     ; de | Destination pointer
(1) 3570/    11D0 :                     ;
(1) 3571/    11D0 :                     ; Uses:
(1) 3572/    11D0 :                     ; b
(1) 3573/    11D0 :                     ;
(1) 3574/    11D0 :                     ; Notes:
(1) 3575/    11D0 :                     ; call RST 20h first, so the currenty playing DAC
(1) 3576/    11D0 :                     ; sample has enough data before getting busy here.
(1) 3577/    11D0 :                     ; --------------------------------------------------------
(1) 3578/    11D0 :                     
(1) 3579/    11D0 :                     readRom:
(1) 3580/    11D0 : DD E5               		push	ix
(1) 3581/    11D2 : DD 21 81 1F         		ld	ix,commZRomBlk	; ix - rom read/block flags
(1) 3582/    11D6 : FE FF               		cp	0FFh		; <-- WORKAROUND FOR $FF0000 area
(1) 3583/    11D8 : 28 3D               		jr	z,.from_ram
(1) 3584/    11DA : CF                  		rst	8
(1) 3585/    11DB : 22 35 00            		ld	(x68ksrclsb),hl	; save hl copy
(1) 3586/    11DE : CB BC               		res	7,h
(1) 3587/    11E0 : 06 00               		ld	b,0
(1) 3588/    11E2 : 0B                  		dec	bc
(1) 3589/    11E3 : 09                  		add	hl,bc
(1) 3590/    11E4 : CB 7C               		bit	7,h
(1) 3591/    11E6 : 20 0B               		jr	nz,.double
(1) 3592/    11E8 : 2A 35 00            		ld	hl,(x68ksrclsb)
(1) 3593/    11EB : 0C                  		inc	c
(1) 3594/    11EC : 47                  		ld	b,a
(1) 3595/    11ED : CD 37 12            		call	.transfer
(1) 3596/    11F0 : DD E1               		pop	ix
(1) 3597/    11F2 : C9                  		ret
(1) 3598/    11F3 :                     .double:
(1) 3599/    11F3 : CF                  		rst	8
(1) 3600/    11F4 : 47                  		ld	b,a
(1) 3601/    11F5 : C5                  		push	bc
(1) 3602/    11F6 : E5                  		push	hl
(1) 3603/    11F7 : 79                  		ld	a,c
(1) 3604/    11F8 : 95                  		sub	a,l
(1) 3605/    11F9 : 4F                  		ld	c,a
(1) 3606/    11FA : 2A 35 00            		ld	hl,(x68ksrclsb)
(1) 3607/    11FD : CD 37 12            		call	.transfer
(1) 3608/    1200 : E1                  		pop	hl
(1) 3609/    1201 : C1                  		pop	bc
(1) 3610/    1202 : 4D                  		ld	c,l
(1) 3611/    1203 : 0C                  		inc	c
(1) 3612/    1204 : 3A 36 00            		ld	a,(x68ksrcmid)
(1) 3613/    1207 : E6 80               		and	80h
(1) 3614/    1209 : C6 80               		add	a,80h
(1) 3615/    120B : 67                  		ld	h,a
(1) 3616/    120C : 2E 00               		ld	l,0
(1) 3617/    120E : 30 01               		jr	nc,.x68knocarry
(1) 3618/    1210 : 04                  		inc	b
(1) 3619/    1211 :                     .x68knocarry:
(1) 3620/    1211 : CD 37 12            		call	.transfer
(1) 3621/    1214 : DD E1               		pop	ix
(1) 3622/    1216 : C9                  		ret
(1) 3623/    1217 :                     
(1) 3624/    1217 :                     ; ------------------------------------------------
(1) 3625/    1217 :                     ; WORKAROUND FOR READING FROM $FF0000 RAM
(1) 3626/    1217 :                     ;
(1) 3627/    1217 :                     ; On the 68K side YOU MUST CALL
(1) 3628/    1217 :                     ; gemaUpdate manually if you have the oportunity
(1) 3629/    1217 :                     ;
(1) 3630/    1217 :                     ; Normally from a Vblank wait loop.
(1) 3631/    1217 :                     ; ------------------------------------------------
(1) 3632/    1217 :                     
(1) 3633/    1217 :                     .from_ram:
(1) 3634/    1217 : ED 53 82 1F         		ld	(cdRamDst),de
(1) 3635/    121B : 22 84 1F            		ld	(cdRamSrc),hl
(1) 3636/    121E : 32 86 1F            		ld	(cdRamSrcB),a
(1) 3637/    1221 : CD 31 15            		call	gema_lastbank			; ** Set bank to $FF8000 area
(1) 3638/    1224 : CF                  		rst	8
(1) 3639/    1225 : 79                  		ld	a,c
(1) 3640/    1226 : 32 87 1F            		ld	(cdRamLen),a
(1) 3641/    1229 : 21 00 FF            		ld	hl,RAM_ZCdFlagD&07FFFh+8000h	; ** 68K LABEL **
(1) 3642/    122C : 36 01               		ld	(hl),1				; WRITE flag
(1) 3643/    122E :                     .wait:
(1) 3644/    122E :                     	; Get stuck here until 68K finishes
(1) 3645/    122E : 3A 87 1F            		ld	a,(cdRamLen)			; Wait until 68K clears
(1) 3646/    1231 : B7                  		or	a
(1) 3647/    1232 : 20 FA               		jr	nz,.wait
(1) 3648/    1234 : DD E1               		pop	ix
(1) 3649/    1236 : C9                  		ret
(1) 3650/    1237 :                     
(1) 3651/    1237 :                     ; ------------------------------------------------
(1) 3652/    1237 :                     ; b  - Source ROM $xx0000
(1) 3653/    1237 :                     ;  c - Bytes to transfer (00h is invalid)
(1) 3654/    1237 :                     ; hl - Source ROM $00xxxx | 8000h
(1) 3655/    1237 :                     ; de - Output location
(1) 3656/    1237 :                     ; ix - ROM-block flag
(1) 3657/    1237 :                     ; ------------------------------------------------
(1) 3658/    1237 :                     
(1) 3659/    1237 :                     .transfer:
(1) 3660/    1237 : CF                  		rst	8
(1) 3661/    1238 : D5                  		push	de
(1) 3662/    1239 : 11 00 60            		ld	de,6000h
(1) 3663/    123C : 7C                  		ld	a,h
(1) 3664/    123D : 07                  		rlca
(1) 3665/    123E : 12                  		ld	(de),a
(1) 3666/    123F : 78                  		ld	a,b
(1) 3667/    1240 : CF                  		rst	8
(1) 3668/    1241 : 12                  		ld	(de),a
(1) 3669/    1242 : 0F                  		rrca
(1) 3670/    1243 : 12                  		ld	(de),a
(1) 3671/    1244 : 0F                  		rrca
(1) 3672/    1245 : 12                  		ld	(de),a
(1) 3673/    1246 : 0F                  		rrca
(1) 3674/    1247 : 12                  		ld	(de),a
(1) 3675/    1248 : 0F                  		rrca
(1) 3676/    1249 : CF                  		rst	8
(1) 3677/    124A : 12                  		ld	(de),a
(1) 3678/    124B : 0F                  		rrca
(1) 3679/    124C : 12                  		ld	(de),a
(1) 3680/    124D : 0F                  		rrca
(1) 3681/    124E : 12                  		ld	(de),a
(1) 3682/    124F : 0F                  		rrca
(1) 3683/    1250 : 12                  		ld	(de),a
(1) 3684/    1251 : D1                  		pop	de
(1) 3685/    1252 : CB FC               		set	7,h
(1) 3686/    1254 : CF                  		rst	8
(1) 3687/    1255 :                     	; Transfer ROM data in packets
(1) 3688/    1255 :                     	; while playing the cache'd sample
(1) 3689/    1255 :                     	; *** CRITICAL PROCESS ***
(1) 3690/    1255 :                     	;
(1) 3691/    1255 :                     	; pseudo-ref for ldir:
(1) 3692/    1255 :                     	; ld (de),(hl)	; load memory (hl) to (de)
(1) 3693/    1255 :                     	; inc de	; incr de + 1
(1) 3694/    1255 :                     	; inc hl	; incr hl + 1
(1) 3695/    1255 :                     	; dec bc	; decr bc - 1
(1) 3696/    1255 : 06 00               		ld	b,0
(1) 3697/    1257 : 79                  		ld	a,c		; a - Size counter
(1) 3698/    1258 : D6 0A               		sub	MAX_TRFRPZ	; Length lower than MAX_TRFRPZ?
(1) 3699/    125A : 38 14               		jr	c,.x68klast	; Process single piece only
(1) 3700/    125C :                     .x68kloop:
(1) 3701/    125C : CF                  		rst	8
(1) 3702/    125D : 00                  		nop
(1) 3703/    125E : 0E 09               		ld	c,MAX_TRFRPZ-1
(1) 3704/    1260 : DD CB 00 46         		bit	0,(ix)		; Genesis blocks ROM?
(1) 3705/    1264 : C4 7E 12            		call	nz,.x68klpwt
(1) 3706/    1267 : ED B0               		ldir			; (de) to (hl) until bc == 0
(1) 3707/    1269 : CF                  		rst	8
(1) 3708/    126A : 00                  		nop
(1) 3709/    126B : D6 09               		sub	a,MAX_TRFRPZ-1
(1) 3710/    126D : D2 5C 12            		jp	nc,.x68kloop
(1) 3711/    1270 :                     ; last block
(1) 3712/    1270 :                     .x68klast:
(1) 3713/    1270 : C6 0A               		add	a,MAX_TRFRPZ
(1) 3714/    1272 : 4F                  		ld	c,a
(1) 3715/    1273 : DD CB 00 46         		bit	0,(ix)		; Genesis blocks ROM?
(1) 3716/    1277 : C4 7E 12            		call	nz,.x68klpwt
(1) 3717/    127A : ED B0               		ldir
(1) 3718/    127C : CF                  		rst	8
(1) 3719/    127D : C9                  		ret
(1) 3720/    127E :                     
(1) 3721/    127E :                     ; Wait here until Genesis unlocks ROM
(1) 3722/    127E :                     .x68klpwt:
(1) 3723/    127E : 00                  		nop
(1) 3724/    127F : 00                  		nop
(1) 3726/    1280 : 00                  		nop
(1) 3727/    1281 : 00                  		nop
(1) 3729/    1282 : CF                  		rst	8
(1) 3731/    1283 : 00                  		nop
(1) 3732/    1284 : 00                  		nop
(1) 3734/    1285 : 00                  		nop
(1) 3735/    1286 : DD CB 00 46         		bit	0,(ix)		; 68k finished?
(1) 3736/    128A : 20 F2               		jr	nz,.x68klpwt
(1) 3737/    128C : C9                  		ret
(1) 3738/    128D :                     
(1) 3739/    128D :                     ; ====================================================================
(1) 3740/    128D :                     ; ----------------------------------------------------------------
(1) 3741/    128D :                     ; Sound chip routines
(1) 3742/    128D :                     ; ----------------------------------------------------------------
(1) 3743/    128D :                     
(1) 3744/    128D :                     ; --------------------------------------------------------
(1) 3745/    128D :                     ; chip_env
(1) 3746/    128D :                     ;
(1) 3747/    128D :                     ; Process the PSG
(1) 3748/    128D :                     ; --------------------------------------------------------
(1) 3749/    128D :                     
(1) 3750/    128D :                     chip_env:
(1) 3752/    128D : CD 31 15            		call	gema_lastbank		; Keep bank out of ROM before writing PSG
(1) 3754/    1290 : FD 21 50 17         		ld	iy,psgcom+3		; Start from NOISE first
(1) 3755/    1294 : DD 21 11 7F         		ld	ix,Zpsg_ctrl
(1) 3756/    1298 : 0E E0               		ld	c,0E0h			; c - PSG first ctrl command
(1) 3757/    129A : 06 04               		ld	b,4			; b - 4 channels
(1) 3758/    129C :                     .vloop:
(1) 3759/    129C : CF                  		rst	8
(1) 3760/    129D : FD 5E 00            		ld	e,(iy+COM)		; e - current command
(1) 3761/    12A0 : FD 36 00 00         		ld	(iy+COM),0
(1) 3762/    12A4 :                     
(1) 3763/    12A4 :                     	; ----------------------------
(1) 3764/    12A4 :                     	; bit 2 - stop sound
(1) 3765/    12A4 : CB 53               		bit	2,e
(1) 3766/    12A6 : 28 0C               		jr	z,.ckof
(1) 3767/    12A8 : FD 36 04 FF         		ld	(iy+LEV),-1		; reset level
(1) 3768/    12AC : FD 36 28 01         		ld	(iy+FLG),1		; and update
(1) 3769/    12B0 : FD 36 18 00         		ld	(iy+MODE),0		; envelope off
(1) 3770/    12B4 :                     .ckof:
(1) 3771/    12B4 :                     	; ----------------------------
(1) 3772/    12B4 :                     	; bit 1 - key off
(1) 3773/    12B4 : CB 4B               		bit	1,e
(1) 3774/    12B6 : 28 0F               		jr      z,.ckon
(1) 3775/    12B8 : FD 7E 18            		ld	a,(iy+MODE)		; mode 0?
(1) 3776/    12BB : B7                  		or	a
(1) 3777/    12BC : 28 09               		jr	z,.ckon
(1) 3778/    12BE : FD 36 28 01         		ld	(iy+FLG),1		; psg update flag
(1) 3779/    12C2 : FD 36 18 04         		ld	(iy+MODE),100b		; set envelope mode 100b
(1) 3780/    12C6 : CF                  		rst	8
(1) 3781/    12C7 :                     .ckon:
(1) 3782/    12C7 :                     	; ----------------------------
(1) 3783/    12C7 :                     	; bit 0 - key on
(1) 3784/    12C7 : CB 43               		bit	0,e
(1) 3785/    12C9 : 28 1A               		jr	z,.envproc
(1) 3786/    12CB : FD 36 04 FF         		ld	(iy+LEV),-1		; reset level
(1) 3787/    12CF : 78                  		ld	a,b
(1) 3788/    12D0 : FE 04               		cp	4			; NOISE channel?
(1) 3789/    12D2 : 20 08               		jr	nz,.nskip
(1) 3790/    12D4 : CF                  		rst	8			; Set NOISE mode
(1) 3791/    12D5 : 3A 2F 00            		ld	a,(psgHatMode)		; write hat mode only.
(1) 3792/    12D8 : B1                  		or	c
(1) 3793/    12D9 : DD 77 00            		ld	(ix),a			; WRITE PSG
(1) 3794/    12DC :                     .nskip:
(1) 3795/    12DC : FD 36 28 01         		ld	(iy+FLG),1		; psg update flag
(1) 3796/    12E0 : CF                  		rst	8
(1) 3797/    12E1 : FD 36 18 01         		ld	(iy+MODE),001b		; set to attack mode
(1) 3798/    12E5 :                     .nblock:
(1) 3799/    12E5 :                     
(1) 3800/    12E5 :                     	; ----------------------------
(1) 3801/    12E5 :                     	; Process effects
(1) 3802/    12E5 :                     	; ----------------------------
(1) 3803/    12E5 :                     .envproc:
(1) 3804/    12E5 : FD 7E 18            		ld	a,(iy+MODE)
(1) 3805/    12E8 : B7                  		or	a			; no modes
(1) 3806/    12E9 : CA 6F 13            		jp	z,.vedlp
(1) 3807/    12EC : FE 01               		cp 	001b			; Attack mode
(1) 3808/    12EE : 20 2C               		jr	nz,.chk2
(1) 3809/    12F0 : FD 36 28 01         		ld	(iy+FLG),1		; psg update flag
(1) 3810/    12F4 : FD 5E 24            		ld	e,(iy+ALV)
(1) 3811/    12F7 : FD 7E 08            		ld	a,(iy+ATK)		; if ATK == 0, don't use
(1) 3812/    12FA : B7                  		or	a
(1) 3813/    12FB : 28 16               		jr	z,.atkend
(1) 3814/    12FD : 57                  		ld	d,a			; c - attack rate
(1) 3815/    12FE : 7B                  		ld	a,e			; a - attack level
(1) 3816/    12FF : CF                  		rst	8
(1) 3817/    1300 : FD 5E 24            		ld	e,(iy+ALV)		; b - OLD attack level
(1) 3818/    1303 : 92                  		sub	a,d			; (attack rate) - (level)
(1) 3819/    1304 : 38 0D               		jr	c,.atkend		; if carry: already finished
(1) 3820/    1306 : 28 0B               		jr	z,.atkend		; if zero: no attack rate
(1) 3821/    1308 : BB                  		cp	e			; attack rate == level?
(1) 3822/    1309 : 38 08               		jr	c,.atkend
(1) 3823/    130B : 28 06               		jr	z,.atkend
(1) 3824/    130D : FD 77 04            		ld	(iy+LEV),a		; set new level
(1) 3825/    1310 : CF                  		rst	8
(1) 3826/    1311 : 18 5C               		jr	.vedlp
(1) 3827/    1313 :                     .atkend:
(1) 3828/    1313 : FD 73 04            		ld	(iy+LEV),e		; attack level = new level
(1) 3829/    1316 :                     .atkzero:
(1) 3830/    1316 : FD 36 18 02         		ld	(iy+MODE),010b		; set to decay mode
(1) 3831/    131A : 18 53               		jr	.vedlp
(1) 3832/    131C :                     .chk2:
(1) 3833/    131C :                     
(1) 3834/    131C : FE 02               		cp	010b			; Decay mode
(1) 3835/    131E : 20 31               		jr	nz,.chk4
(1) 3836/    1320 :                     .dectmr:
(1) 3837/    1320 : FD 36 28 01         		ld	(iy+FLG),1		; psg update flag
(1) 3838/    1324 : FD 7E 04            		ld	a,(iy+LEV)		; a - Level
(1) 3839/    1327 : FD 5E 10            		ld	e,(iy+SLV)		; b - Sustain
(1) 3840/    132A : BB                  		cp	e
(1) 3841/    132B : 38 0D               		jr	c,.dkadd		; if carry: add
(1) 3842/    132D : 28 18               		jr	z,.dkyend		; if zero:  finish
(1) 3843/    132F : CF                  		rst	8
(1) 3844/    1330 : FD 96 0C            		sub	(iy+DKY)		; substract decay rate
(1) 3845/    1333 : 38 12               		jr	c,.dkyend		; finish if wraped.
(1) 3846/    1335 : BB                  		cp	e			; compare level
(1) 3847/    1336 : 38 0F               		jr	c,.dkyend		; and finish
(1) 3848/    1338 : 18 08               		jr	.dksav
(1) 3849/    133A :                     .dkadd:
(1) 3850/    133A : FD 86 0C            		add	a,(iy+DKY)		;  (level) + (decay rate)
(1) 3851/    133D : 38 08               		jr	c,.dkyend		; finish if wraped.
(1) 3852/    133F : BB                  		cp	e			; compare level
(1) 3853/    1340 : 30 05               		jr	nc,.dkyend
(1) 3854/    1342 :                     .dksav:
(1) 3855/    1342 : FD 77 04            		ld	(iy+LEV),a		; save new level
(1) 3856/    1345 : 18 28               		jr	.vedlp
(1) 3857/    1347 :                     .dkyend:
(1) 3858/    1347 : CF                  		rst	8
(1) 3859/    1348 : FD 73 04            		ld	(iy+LEV),e		; save last attack
(1) 3860/    134B : FD 36 18 04         		ld	(iy+MODE),100b		; and set to sustain
(1) 3861/    134F : 18 1E               		jr	.vedlp
(1) 3862/    1351 :                     .chk4:
(1) 3863/    1351 : FE 04               		cp	100b			; Sustain phase
(1) 3864/    1353 : 20 1A               		jr	nz,.vedlp
(1) 3865/    1355 : FD 36 28 01         		ld	(iy+FLG),1		; psg update flag
(1) 3866/    1359 : FD 7E 04            		ld	a,(iy+LEV)		; a - Level
(1) 3867/    135C : CF                  		rst	8
(1) 3868/    135D : FD 86 14            		add 	a,(iy+RRT)		; add Release Rate
(1) 3869/    1360 : 38 05               		jr	c,.killenv		; release done
(1) 3870/    1362 : FD 77 04            		ld	(iy+LEV),a		; set new Level
(1) 3871/    1365 : 18 08               		jr	.vedlp
(1) 3872/    1367 :                     .killenv:
(1) 3873/    1367 : FD 36 04 FF         		ld	(iy+LEV),-1		; Silence this channel
(1) 3874/    136B : FD 36 18 00         		ld	(iy+MODE),0		; Reset mode
(1) 3875/    136F :                     .vedlp:
(1) 3876/    136F :                     	; ----------------------------
(1) 3877/    136F :                     	; PSG UPDATE
(1) 3878/    136F :                     	; ----------------------------
(1) 3879/    136F : FD 7E 28            		ld	a,(iy+FLG)
(1) 3880/    1372 : B7                  		or	a
(1) 3881/    1373 : 28 72               		jr	z,.noupd
(1) 3882/    1375 : FD 36 28 00         		ld	(iy+FLG),0	; Reset until next one
(1) 3883/    1379 : 59                  		ld	e,c
(1) 3884/    137A : 3A 2F 00            		ld	a,(psgHatMode)
(1) 3885/    137D : 57                  		ld	d,a
(1) 3886/    137E : E6 03               		and	011b
(1) 3887/    1380 : FE 03               		cp	011b
(1) 3888/    1382 : 20 1D               		jr	nz,.normal
(1) 3889/    1384 : CF                  		rst	8
(1) 3890/    1385 : 78                  		ld	a,b		; Channel 4?
(1) 3891/    1386 : FE 03               		cp	3
(1) 3892/    1388 : 28 13               		jr	z,.silnc_3
(1) 3893/    138A : FE 04               		cp	4
(1) 3894/    138C : 20 18               		jr	nz,.do_nfreq
(1) 3895/    138E : 3A 2F 00            		ld	a,(psgHatMode)
(1) 3896/    1391 : 57                  		ld	d,a
(1) 3897/    1392 : E6 03               		and	011b
(1) 3898/    1394 : CF                  		rst	8
(1) 3899/    1395 : FE 03               		cp	011b
(1) 3900/    1397 : 20 30               		jr	nz,.vonly
(1) 3901/    1399 : 1E C0               		ld	e,0C0h
(1) 3902/    139B : 18 09               		jr	.do_nfreq
(1) 3903/    139D :                     .silnc_3:
(1) 3904/    139D : 3E FF               		ld	a,-1
(1) 3905/    139F : 18 32               		jr	.vlmuch
(1) 3906/    13A1 :                     .normal:
(1) 3907/    13A1 : 78                  		ld	a,b
(1) 3908/    13A2 : FE 04               		cp	4
(1) 3909/    13A4 : 28 23               		jr	z,.vonly
(1) 3910/    13A6 :                     .do_nfreq:
(1) 3911/    13A6 : FD 6E 1C            		ld	l,(iy+DTL)
(1) 3912/    13A9 : FD 66 20            		ld	h,(iy+DTH)
(1) 3913/    13AC :                     	; freq effects go here
(1) 3914/    13AC :                     	; (save e FIRST.)
(1) 3915/    13AC :                     	;	push	de
(1) 3916/    13AC :                     	;	pop	de
(1) 3917/    13AC : 7D                  		ld	a,l		; Grab LSB 4 right bits
(1) 3918/    13AD : E6 0F               		and	00001111b
(1) 3919/    13AF : B3                  		or	e		; OR with channel set in e
(1) 3920/    13B0 : CF                  		rst	8
(1) 3921/    13B1 : DD 77 00            		ld	(ix),a		; write it
(1) 3922/    13B4 : 7D                  		ld	a,l		; Grab LSB 4 left bits
(1) 3923/    13B5 : 0F                  		rrca
(1) 3924/    13B6 : 0F                  		rrca
(1) 3925/    13B7 : 0F                  		rrca
(1) 3926/    13B8 : 0F                  		rrca
(1) 3927/    13B9 : E6 0F               		and	00001111b
(1) 3928/    13BB : 5F                  		ld	e,a
(1) 3929/    13BC : 7C                  		ld	a,h		; Grab MSB bits
(1) 3930/    13BD : CF                  		rst	8
(1) 3931/    13BE : 07                  		rlca
(1) 3932/    13BF : 07                  		rlca
(1) 3933/    13C0 : 07                  		rlca
(1) 3934/    13C1 : 07                  		rlca
(1) 3935/    13C2 : E6 30               		and	00110000b
(1) 3936/    13C4 : B3                  		or	e
(1) 3937/    13C5 : DD 77 00            		ld	(ix),a
(1) 3938/    13C8 : CF                  		rst	8
(1) 3939/    13C9 :                     .vonly:
(1) 3940/    13C9 : FD 7E 30            		ld	a,(iy+MVOL)		; c - Level
(1) 3941/    13CC : FD 86 04            		add	a,(iy+LEV)		; Add MASTER volume
(1) 3942/    13CF : 30 02               		jr	nc,.vlmuch
(1) 3943/    13D1 : 3E FF               		ld	a,-1
(1) 3944/    13D3 :                     .vlmuch:
(1) 3945/    13D3 : CB 3F               		srl	a			; (Level >> 4)
(1) 3946/    13D5 : CB 3F               		srl	a
(1) 3947/    13D7 : CB 3F               		srl	a
(1) 3948/    13D9 : CF                  		rst	8
(1) 3949/    13DA : CB 3F               		srl	a
(1) 3950/    13DC : E6 0F               		and	00001111b		; Filter volume value
(1) 3951/    13DE : B1                  		or	c			; and OR with current channel
(1) 3952/    13DF : F6 90               		or	90h			; Set volume-set mode
(1) 3953/    13E1 : DD 77 00            		ld	(ix),a			; *** WRITE volume
(1) 3954/    13E4 : FD 34 38            		inc	(iy+PTMR)		; Update general timer
(1) 3955/    13E7 :                     .noupd:
(1) 3956/    13E7 :                     	; ----------------------------
(1) 3957/    13E7 : FD 2B               		dec	iy			; next COM to check (backwards)
(1) 3958/    13E9 : 79                  		ld	a,c
(1) 3959/    13EA : CF                  		rst	8
(1) 3960/    13EB : D6 20               		sub	a,20h			; next PSG (backwards)
(1) 3961/    13ED : 4F                  		ld	c,a
(1) 3962/    13EE : 05                  		dec	b
(1) 3963/    13EF : C2 9C 12            		jp	nz,.vloop
(1) 3964/    13F2 : C9                  		ret
(1) 3965/    13F3 :                     
(1) 3966/    13F3 :                     ; ---------------------------------------------
(1) 3967/    13F3 :                     ; FM register writes
(1) 3968/    13F3 :                     ;
(1) 3969/    13F3 :                     ; Input:
(1) 3970/    13F3 :                     ; d - ctrl
(1) 3971/    13F3 :                     ; e - data
(1) 3972/    13F3 :                     ; ---------------------------------------------
(1) 3973/    13F3 :                     
(1) 3974/    13F3 :                     ; c - KeyID
(1) 3975/    13F3 :                     fm_autoreg:
(1) 3976/    13F3 : CB 51               		bit	2,c
(1) 3977/    13F5 : 20 0B               		jr	nz,fm_send_2
(1) 3978/    13F7 :                     
(1) 3979/    13F7 :                     ; Channels 1-3 and global registers
(1) 3980/    13F7 :                     fm_send_1:
(1) 3981/    13F7 : 7A                  		ld	a,d
(1) 3982/    13F8 : 32 00 40            		ld	(Zym_ctrl_1),a
(1) 3983/    13FB : 00                  		nop
(1) 3984/    13FC : 7B                  		ld	a,e
(1) 3985/    13FD : 32 01 40            		ld	(Zym_data_1),a
(1) 3986/    1400 : 00                  		nop
(1) 3987/    1401 : C9                  		ret
(1) 3988/    1402 :                     ; Channels 4-6
(1) 3989/    1402 :                     fm_send_2:
(1) 3990/    1402 : 7A                  		ld	a,d
(1) 3991/    1403 : 32 02 40            		ld	(Zym_ctrl_2),a
(1) 3992/    1406 : 00                  		nop
(1) 3993/    1407 : 7B                  		ld	a,e
(1) 3994/    1408 : 32 03 40            		ld	(Zym_data_2),a
(1) 3995/    140B : 00                  		nop
(1) 3996/    140C : C9                  		ret
(1) 3997/    140D :                     
(1) 3998/    140D :                     ; --------------------------------------------------------
(1) 3999/    140D :                     ; brute-force WAVE ON/OFF playback
(1) 4000/    140D :                     ; --------------------------------------------------------
(1) 4001/    140D :                     
(1) 4002/    140D :                     dac_on:
(1) 4003/    140D : 3E 2B               		ld	a,2Bh
(1) 4004/    140F : 32 00 40            		ld	(Zym_ctrl_1),a
(1) 4005/    1412 : 3E 80               		ld	a,80h
(1) 4006/    1414 : 32 01 40            		ld	(Zym_data_1),a
(1) 4007/    1417 : 3E D9               		ld 	a,zopcExx
(1) 4008/    1419 : 32 08 00            		ld	(dac_me),a
(1) 4009/    141C : 3E F5               		ld 	a,zopcPushAf
(1) 4010/    141E : 32 20 00            		ld	(dac_fill),a
(1) 4011/    1421 : C9                  		ret
(1) 4012/    1422 :                     dac_off:
(1) 4013/    1422 : 3E 2B               		ld	a,2Bh
(1) 4014/    1424 : 32 00 40            		ld	(Zym_ctrl_1),a
(1) 4015/    1427 : 3E 00               		ld	a,00h
(1) 4016/    1429 : 32 01 40            		ld	(Zym_data_1),a
(1) 4017/    142C : 3E C9               		ld 	a,zopcRet
(1) 4018/    142E : 32 08 00            		ld	(dac_me),a
(1) 4019/    1431 : 3E C9               		ld 	a,zopcRet
(1) 4020/    1433 : 32 20 00            		ld	(dac_fill),a
(1) 4021/    1436 : C9                  		ret
(1) 4022/    1437 :                     
(1) 4023/    1437 :                     ; --------------------------------------------------------
(1) 4024/    1437 :                     ; dac_play
(1) 4025/    1437 :                     ;
(1) 4026/    1437 :                     ; Plays a new sample
(1) 4027/    1437 :                     ;
(1) 4028/    1437 :                     ; NOTE:
(1) 4029/    1437 :                     ; Set wave_Flags and wave_Pitch externally
(1) 4030/    1437 :                     ; getting here.
(1) 4031/    1437 :                     ; --------------------------------------------------------
(1) 4032/    1437 :                     
(1) 4033/    1437 :                     dac_play:
(1) 4034/    1437 : F3                  		di
(1) 4035/    1438 : CD 22 14            		call	dac_off
(1) 4036/    143B : D9                  		exx				; flip exx regs
(1) 4037/    143C : 01 1D 00            		ld	bc,dWaveBuff>>8		; bc - WAVFIFO MSB
(1) 4038/    143F : ED 5B F3 1C         		ld	de,(wave_Pitch)		; de - Pitch
(1) 4039/    1443 : 21 00 00            		ld	hl,(dWaveBuff&0FFh)<<8	; hl - WAVFIFO LSB pointer (xx.00)
(1) 4040/    1446 : D9                  		exx				; move them back
(1) 4041/    1447 : 2A EA 1C            		ld	hl,(wave_Start)		; copy Start and length
(1) 4042/    144A : 3A EC 1C            		ld 	a,(wave_Start+2)
(1) 4043/    144D : 22 D8 19            		ld	(dDacPntr),hl
(1) 4044/    1450 : 32 DA 19            		ld	(dDacPntr+2),a
(1) 4045/    1453 : 2A ED 1C            		ld	hl,(wave_Len)
(1) 4046/    1456 : 3A EF 1C            		ld 	a,(wave_Len+2)
(1) 4047/    1459 : 22 DB 19            		ld	(dDacCntr),hl
(1) 4048/    145C : 32 DD 19            		ld	(dDacCntr+2),a
(1) 4049/    145F : AF                  		xor	a
(1) 4050/    1460 : 32 37 00            		ld	(dDacFifoMid),a		; Reset half-way
(1) 4051/    1463 : CD 6B 14            		call	dac_refill
(1) 4052/    1466 : CD 0D 14            		call	dac_on
(1) 4053/    1469 : FB                  		ei
(1) 4054/    146A : C9                  		ret
(1) 4055/    146B :                     
(1) 4056/    146B :                     ; --------------------------------------------------------
(1) 4057/    146B :                     
(1) 4058/    146B :                     dac_refill:
(1) 4059/    146B : CF                  		rst	8
(1) 4060/    146C : C5                  		push	bc
(1) 4061/    146D : D5                  		push	de
(1) 4062/    146E : E5                  		push	hl
(1) 4063/    146F : 3A F5 1C            		ld	a,(wave_Flags)	; Already finished?
(1) 4064/    1472 : FE 07               		cp	111b
(1) 4065/    1474 : D2 2A 15            		jp	nc,.dacfill_end
(1) 4066/    1477 : 3A DD 19            		ld	a,(dDacCntr+2)	; Last bytes
(1) 4067/    147A : 2A DB 19            		ld	hl,(dDacCntr)
(1) 4068/    147D : 01 80 00            		ld	bc,80h
(1) 4069/    1480 : 37                  		scf
(1) 4070/    1481 : 3F                  		ccf
(1) 4071/    1482 : ED 42               		sbc	hl,bc
(1) 4072/    1484 : DE 00               		sbc	a,0
(1) 4073/    1486 : 32 DD 19            		ld	(dDacCntr+2),a
(1) 4074/    1489 : 22 DB 19            		ld	(dDacCntr),hl
(1) 4075/    148C : 16 1D               		ld	d,dWaveBuff>>8
(1) 4076/    148E : B7                  		or	a
(1) 4077/    148F : FA B9 14            		jp	m,.dac_over
(1) 4078/    1492 : 3A 37 00            		ld	a,(dDacFifoMid)	; Update halfway value
(1) 4079/    1495 : 5F                  		ld	e,a
(1) 4080/    1496 : C6 80               		add 	a,80h
(1) 4081/    1498 : 32 37 00            		ld	(dDacFifoMid),a
(1) 4082/    149B : 2A D8 19            		ld	hl,(dDacPntr)
(1) 4083/    149E : 3A DA 19            		ld	a,(dDacPntr+2)
(1) 4084/    14A1 : CD D0 11            		call	readRom	; *** ROM ACCESS ***
(1) 4085/    14A4 : 2A D8 19            		ld	hl,(dDacPntr)
(1) 4086/    14A7 : 3A DA 19            		ld	a,(dDacPntr+2)
(1) 4087/    14AA : 01 80 00            		ld	bc,80h
(1) 4088/    14AD : 09                  		add	hl,bc
(1) 4089/    14AE : CE 00               		adc	a,0
(1) 4090/    14B0 : 22 D8 19            		ld	(dDacPntr),hl
(1) 4091/    14B3 : 32 DA 19            		ld	(dDacPntr+2),a
(1) 4092/    14B6 : C3 2D 15            		jp	.dacfill_ret
(1) 4093/    14B9 :                     ; NOTE: This doesn't finish at the exact END point
(1) 4094/    14B9 :                     ; but the USER won't notice it.
(1) 4095/    14B9 :                     .dac_over:
(1) 4096/    14B9 : 16 1D               		ld	d,dWaveBuff>>8
(1) 4097/    14BB : 3A F5 1C            		ld	a,(wave_Flags)	; LOOP enabled?
(1) 4098/    14BE : E6 01               		and	001b
(1) 4099/    14C0 : C2 E3 14            		jp	nz,.dacfill_loop
(1) 4100/    14C3 : 7D                  		ld	a,l
(1) 4101/    14C4 : C6 80               		add	a,80h
(1) 4102/    14C6 : 4F                  		ld	c,a
(1) 4103/    14C7 : 06 00               		ld	b,0
(1) 4104/    14C9 : C5                  		push	bc
(1) 4105/    14CA : 3A 37 00            		ld	a,(dDacFifoMid)
(1) 4106/    14CD : 5F                  		ld	e,a
(1) 4107/    14CE : C6 80               		add	a,80h
(1) 4108/    14D0 : 32 37 00            		ld	(dDacFifoMid),a
(1) 4109/    14D3 : C1                  		pop	bc
(1) 4110/    14D4 : 79                  		ld	a,c
(1) 4111/    14D5 : B0                  		or	b
(1) 4112/    14D6 : 28 52               		jr	z,.dacfill_end
(1) 4113/    14D8 : 2A D8 19            		ld	hl,(dDacPntr)
(1) 4114/    14DB : 3A DA 19            		ld	a,(dDacPntr+2)
(1) 4115/    14DE : CD D0 11            		call	readRom	; *** ROM ACCESS ***
(1) 4116/    14E1 : 18 47               		jr	.dacfill_end
(1) 4117/    14E3 :                     ; loop sample
(1) 4118/    14E3 :                     .dacfill_loop:
(1) 4119/    14E3 : C5                  		push	bc
(1) 4120/    14E4 : D5                  		push	de
(1) 4121/    14E5 : 3A F2 1C            		ld	a,(wave_Loop+2)
(1) 4122/    14E8 : 4F                  		ld	c,a
(1) 4123/    14E9 : ED 5B F0 1C         		ld	de,(wave_Loop)
(1) 4124/    14ED : 2A EA 1C            		ld	hl,(wave_Start)
(1) 4125/    14F0 : 3A EC 1C            		ld 	a,(wave_Start+2)
(1) 4126/    14F3 : 81                  		add	a,c
(1) 4127/    14F4 : 19                  		add	hl,de
(1) 4128/    14F5 : CE 00               		adc	a,0
(1) 4129/    14F7 : 22 D8 19            		ld	(dDacPntr),hl
(1) 4130/    14FA : 32 DA 19            		ld	(dDacPntr+2),a
(1) 4131/    14FD : 2A ED 1C            		ld	hl,(wave_Len)
(1) 4132/    1500 : 3A EF 1C            		ld 	a,(wave_Len+2)
(1) 4133/    1503 : 91                  		sub	a,c
(1) 4134/    1504 : 37                  		scf
(1) 4135/    1505 : 3F                  		ccf
(1) 4136/    1506 : ED 52               		sbc	hl,de
(1) 4137/    1508 : DE 00               		sbc	a,0
(1) 4138/    150A : 22 DB 19            		ld	(dDacCntr),hl
(1) 4139/    150D : 32 DD 19            		ld	(dDacCntr+2),a
(1) 4140/    1510 : D1                  		pop	de
(1) 4141/    1511 : C1                  		pop	bc
(1) 4142/    1512 : 78                  		ld	a,b
(1) 4143/    1513 : B1                  		or	c
(1) 4144/    1514 : 28 17               		jr	z,.dacfill_ret
(1) 4145/    1516 : 3A 37 00            		ld	a,(dDacFifoMid)
(1) 4146/    1519 : 5F                  		ld	e,a
(1) 4147/    151A : C6 80               		add	a,80h
(1) 4148/    151C : 32 37 00            		ld	(dDacFifoMid),a
(1) 4149/    151F : 2A D8 19            		ld	hl,(dDacPntr)
(1) 4150/    1522 : 3A DA 19            		ld	a,(dDacPntr+2)
(1) 4151/    1525 : CD D0 11            		call	readRom	; *** ROM ACCESS ***
(1) 4152/    1528 : 18 03               		jr	.dacfill_ret
(1) 4153/    152A :                     .dacfill_end:
(1) 4154/    152A : CD 22 14            		call	dac_off		; DAC finished
(1) 4155/    152D :                     .dacfill_ret:
(1) 4156/    152D : E1                  		pop	hl
(1) 4157/    152E : D1                  		pop	de
(1) 4158/    152F : C1                  		pop	bc
(1) 4159/    1530 : C9                  		ret
(1) 4160/    1531 :                     
(1) 4161/    1531 :                     ; ----------------------------------------------------------------
(1) 4162/    1531 :                     ; gema_lastbank
(1) 4163/    1531 :                     ;
(1) 4164/    1531 :                     ; Two purposes:
(1) 4165/    1531 :                     ; - Set the BANK to the very last part of memory for the
(1) 4166/    1531 :                     ;   readRom to read from RAM
(1) 4167/    1531 :                     ; - On 32X this sets the bank out of the ROM-reading areas due
(1) 4168/    1531 :                     ;   to a conflict with the PSG according to a Tech Bulletin.
(1) 4169/    1531 :                     ;
(1) 4170/    1531 :                     ; Uses:
(1) 4171/    1531 :                     ; hl,b
(1) 4172/    1531 :                     ; ----------------------------------------------------------------
(1) 4173/    1531 :                     
(1) 4174/    1531 :                     gema_lastbank:
(1) 4175/    1531 : 21 00 60            		ld	hl,6000h
(1) 4176/    1534 : 06 09               		ld	b,9		; 9 bits
(1) 4177/    1536 :                     .write:
(1) 4178/    1536 : 36 01               		ld	(hl),1
(1) 4179/    1538 : 10 FC               		djnz	.write
(1) 4180/    153A : C9                  		ret
(1) 4181/    153B :                     
(1) 4182/    153B :                     ; ====================================================================
(1) 4183/    153B :                     ; ----------------------------------------------------------------
(1) 4184/    153B :                     ; Frequency tables
(1) 4185/    153B :                     ; ----------------------------------------------------------------
(1) 4186/    153B :                     
(1) 4187/    153B : 84 02               fmFreq_List:	dw 644
(1) 4188/    153D : A9 02               		dw 681
(1) 4189/    153F : D2 02               		dw 722
(1) 4190/    1541 : FD 02               		dw 765
(1) 4191/    1543 : 2A 03               		dw 810
(1) 4192/    1545 : 5A 03               		dw 858
(1) 4193/    1547 : 8E 03               		dw 910
(1) 4194/    1549 : C4 03               		dw 964
(1) 4195/    154B : FD 03               		dw 1021
(1) 4196/    154D : 39 04               		dw 1081
(1) 4197/    154F : 7A 04               		dw 1146
(1) 4198/    1551 : BE 04               		dw 1214
(1) 4199/    1553 :                     
(1) 4200/    1553 :                     ; ----------------------------------------
(1) 4201/    1553 :                     ; DAC and PWM
(1) 4202/    1553 :                     ; ----------------------------------------
(1) 4203/    1553 :                     
(1) 4204/    1553 :                     psgFreq_List:
(1) 4205/    1553 :                     ; 	dw    -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1	; x-0
(1) 4206/    1553 :                     ; 	dw    -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1	; x-1
(1) 4207/    1553 :                     ; 	dw    -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1	; x-2
(1) 4208/    1553 : FF FF FF FF FF FF   	dw    -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,03F8h,03BFh,0389h	; x-3
             1559 : FF FF FF FF FF FF 
             155F : FF FF FF FF FF FF 
             1565 : F8 03 BF 03 89 03 
(1) 4209/    156B : 56 03 26 03 F9 02   	dw 0356h,0326h,02F9h,02CEh,02A5h,0280h,025Ch,023Ah,021Ah,01FBh,01DFh,01C4h	; x-4
             1571 : CE 02 A5 02 80 02 
             1577 : 5C 02 3A 02 1A 02 
             157D : FB 01 DF 01 C4 01 
(1) 4210/    1583 : AB 01 93 01 7D 01   	dw 01ABh,0193h,017Dh,0167h,0153h,0140h,012Eh,011Dh,010Dh,00FEh,00EFh,00E2h	; x-5
             1589 : 67 01 53 01 40 01 
             158F : 2E 01 1D 01 0D 01 
             1595 : FE 00 EF 00 E2 00 
(1) 4211/    159B : D6 00 C9 00 BE 00   	dw 00D6h,00C9h,00BEh,00B4h,00A9h,00A0h,0097h,008Fh,0087h,007Fh,0078h,0071h	; x-6
             15A1 : B4 00 A9 00 A0 00 
             15A7 : 97 00 8F 00 87 00 
             15AD : 7F 00 78 00 71 00 
(1) 4212/    15B3 : 6B 00 65 00 5F 00   	dw 006Bh,0065h,005Fh,005Ah,0055h,0050h,004Bh,0047h,0043h,0040h,003Ch,0039h	; x-7
             15B9 : 5A 00 55 00 50 00 
             15BF : 4B 00 47 00 43 00 
             15C5 : 40 00 3C 00 39 00 
(1) 4213/    15CB : 36 00 33 00 30 00   	dw 0036h,0033h,0030h,002Dh,002Bh,0028h,0026h,0024h,0022h,0020h,001Fh,001Dh	; x-8 *UNTESTED*
             15D1 : 2D 00 2B 00 28 00 
             15D7 : 26 00 24 00 22 00 
             15DD : 20 00 1F 00 1D 00 
(1) 4214/    15E3 : 1B 00 1A 00 18 00   	dw 001Bh,001Ah,0018h,0017h,0016h,0015h,0013h,0012h,0011h,0010h,0009h,0001h	; x-9 *RESERVED FOR NOISE* Set to +47
             15E9 : 17 00 16 00 15 00 
             15EF : 13 00 12 00 11 00 
             15F5 : 10 00 09 00 01 00 
(1) 4215/    15FB :                     
(1) 4216/    15FB :                     ; ----------------------------------------
(1) 4217/    15FB :                     ; DAC and PWM shared list
(1) 4218/    15FB :                     ; ----------------------------------------
(1) 4219/    15FB :                     
(1) 4220/    15FB :                     wavFreq_List:
(1) 4221/    15FB :                     	;   C     C#    D     D#    E     F     F#    G     G#    A     A#    B
(1) 4222/    15FB :                     ; 	dw 0100h,0100h,0100h,0100h,0100h,0100h,0100h,0100h,0100h,0100h,0100h,0100h	; x-0
(1) 4223/    15FB :                     ; 	dw 0100h,0100h,0100h,0100h,0100h,0100h,0100h,0100h,0100h,0100h,0100h,0100h	; x-1
(1) 4224/    15FB :                     ; 	dw 0100h,0100h,0100h,0100h,0100h,0100h,0100h,0100h,0100h,0100h,0036h,003Bh	; x-2
(1) 4225/    15FB : 40 00 44 00 48 00   	dw 0040h,0044h,0048h,004Ch,0051h,0056h,005Bh,0060h,0066h,006Ch,0073h,0079h	; x-3 4000 ok
             1601 : 4C 00 51 00 56 00 
             1607 : 5B 00 60 00 66 00 
             160D : 6C 00 73 00 79 00 
(1) 4226/    1613 : 80 00 88 00 90 00   	dw 0080h,0088h,0090h,0099h,00A2h,00ACh,00B6h,00C1h,00CCh,00D8h,00E5h,00F2h	; x-4 8000 ok
             1619 : 99 00 A2 00 AC 00 
             161F : B6 00 C1 00 CC 00 
             1625 : D8 00 E5 00 F2 00 
(1) 4227/    162B : 00 01 10 01 20 01   	dw 0100h,0110h,0120h,0132h,0145h,0158h,016Ch,0182h,0198h,01AEh,01C7h,01E0h	; x-5 16000 ok
             1631 : 32 01 45 01 58 01 
             1637 : 6C 01 82 01 98 01 
             163D : AE 01 C7 01 E0 01 
(1) 4228/    1643 : 00 02 20 02 40 02   	dw 0200h,0220h,0240h,0260h,0280h,02A0h,02D0h,02F8h,0328h,0352h,0390h,03C8h	; x-6 32000 bad/ok
             1649 : 60 02 80 02 A0 02 
             164F : D0 02 F8 02 28 03 
             1655 : 52 03 90 03 C8 03 
(1) 4229/    165B : 00 04               	dw 0400h;,0100h,0100h,0100h,0100h,0100h,0100h,0100h,0100h,0100h,0100h,0100h	; x-7
(1) 4230/    165D :                     ; 	dw 0100h,0100h,0100h,0100h,0100h,0100h,0100h,0100h,0100h,0100h,0100h,0100h	; x-8
(1) 4231/    165D :                     ; 	dw 0100h,0100h,0100h,0100h,0100h,0100h,0100h,0100h,0100h,0100h,0100h,0100h	; x-9
(1) 4232/    165D :                     
(1) 4233/    165D :                     ; ----------------------------------------
(1) 4234/    165D :                     ; SegaCD PCM
(1) 4235/    165D :                     ; ----------------------------------------
(1) 4236/    165D :                     wavFreq_CdPcm:
(1) 4237/    165D :                     	;     C     C#     D      D#     E      F      F#     G      G#     A      A#     B
(1) 4238/    165D :                     ; 	dw  0100h, 0100h, 0100h, 0100h, 0100h, 0100h, 0100h, 0100h, 0100h, 0100h, 0100h, 0100h	; x-0
(1) 4239/    165D :                     ; 	dw  0100h, 0100h, 0100h, 0100h, 0100h, 0100h, 0100h, 0100h, 0100h, 0100h, 0100h, 0100h	; x-1
(1) 4240/    165D : F8 00 08 01 1C 01   	dw  00F8h, 0108h, 011Ch, 0128h, 013Ch, 014Ch, 0160h, 017Ch, 0188h, 01AAh, 01BCh, 01DCh	; x-2  4000 ok
             1663 : 28 01 3C 01 4C 01 
             1669 : 60 01 7C 01 88 01 
             166F : AA 01 BC 01 DC 01 
(1) 4241/    1675 : F8 01 14 02 3C 02   	dw  01F8h, 0214h, 023Ch, 0258h, 027Ch, 02A0h, 02C8h, 02FCh, 031Ch, 0354h, 037Ch, 03B8h	; x-3  8000 ok
             167B : 58 02 7C 02 A0 02 
             1681 : C8 02 FC 02 1C 03 
             1687 : 54 03 7C 03 B8 03 
(1) 4242/    168D : F0 03 28 04 68 04   	dw  03F0h, 0428h, 0468h, 04ACh, 04ECh, 0540h, 0590h, 05E4h, 063Ch, 0698h, 0704h, 0760h	; x-4 16000 ok
             1693 : AC 04 EC 04 40 05 
             1699 : 90 05 E4 05 3C 06 
             169F : 98 06 04 07 60 07 
(1) 4243/    16A5 : DC 07 48 08 D4 08   	dw  07DCh, 0848h, 08D4h, 0960h, 09F0h, 0A64h, 0B04h, 0BAAh, 0C60h, 0D18h, 0DE4h, 0EB8h	; x-5 32000 ok
             16AB : 60 09 F0 09 64 0A 
             16B1 : 04 0B AA 0B 60 0C 
             16B7 : 18 0D E4 0D B8 0E 
(1) 4244/    16BD : B0 0F 74 10 84 11   	dw  0FB0h, 1074h, 1184h, 1280h, 139Ch, 14C8h, 1624h, 174Ch, 18DCh, 1A38h, 1BE0h, 1D94h	; x-6 64000 untested
             16C3 : 80 12 9C 13 C8 14 
             16C9 : 24 16 4C 17 DC 18 
             16CF : 38 1A E0 1B 94 1D 
(1) 4245/    16D5 :                     ; 	dw  1F64h, 20FCh, 2330h, 2524h, 2750h, 29B4h, 2C63h, 2F63h, 31E0h, 347Bh, 377Bh, 3B41h	; x-7 128000 bad
(1) 4246/    16D5 :                     ; 	dw  3EE8h, 4206h, 4684h, 4A5Ah, 4EB5h, 5379h, 58E1h, 5DE0h, 63C0h, 68FFh, 6EFFh, 783Ch	; x-8 256000 bad
(1) 4247/    16D5 :                     ; 	dw  7FC2h, 83FCh, 8D14h, 9780h,0AA5Dh,0B1F9h,   -1 ,   -1 ,   -1 ,   -1 ,   -1 ,   -1 	; x-9 bad
(1) 4248/    16D5 :                     
(1) 4249/    16D5 :                     ; ====================================================================
(1) 4250/    16D5 :                     ; ----------------------------------------------------------------
(1) 4251/    16D5 :                     ; Chip buffers
(1) 4252/    16D5 :                     ; ----------------------------------------------------------------
(1) 4253/    16D5 :                     
(1) 4254/    16D5 : 00 00 00 00 00 00   pcmcom:	db 00h,00h,00h,00h,00h,00h,00h,00h	; 0 - Playback bits: %0000PCOK Pitchbend/keyCut/keyOff/KeyOn
             16DB : 00 00             
(1) 4255/    16DD : 00 00 00 00 00 00   	db 00h,00h,00h,00h,00h,00h,00h,00h	; 8 - Pitch MSB
             16E3 : 00 00             
(1) 4256/    16E5 : 00 00 00 00 00 00   	db 00h,00h,00h,00h,00h,00h,00h,00h	; 16 - Pitch LSB
             16EB : 00 00             
(1) 4257/    16ED : FF FF FF FF FF FF   	db -1,-1,-1,-1,-1,-1,-1,-1		; 24 - Volume
             16F3 : FF FF             
(1) 4258/    16F5 : FF FF FF FF FF FF   	db -1,-1,-1,-1,-1,-1,-1,-1		; 32 - CURRENT Panning %RRRRLLLL
             16FB : FF FF             
(1) 4259/    16FD : 00 00 00 00 00 00   	db 00h,00h,00h,00h,00h,00h,00h,00h	; 40 - 24-bit sample location in Sub-CPU area
             1703 : 00 00             
(1) 4260/    1705 : 00 00 00 00 00 00   	db 00h,00h,00h,00h,00h,00h,00h,00h	; 48
             170B : 00 00             
(1) 4261/    170D : 00 00 00 00 00 00   	db 00h,00h,00h,00h,00h,00h,00h,00h	; 56
             1713 : 00 00             
(1) 4262/    1715 :                     
(1) 4263/    1715 : 00 00 00 00 00 00   pwmcom:	db 00h,00h,00h,00h,00h,00h,00h,00h	; 0 - Playback bits: %0000PCOK Pitchbend/keyCut/keyOff/KeyOn
             171B : 00 00             
(1) 4264/    171D : 00 00 00 00 00 00   	db 00h,00h,00h,00h,00h,00h,00h,00h	; 8 - Volume | Pitch MSB
             1723 : 00 00             
(1) 4265/    1725 : 00 00 00 00 00 00   	db 00h,00h,00h,00h,00h,00h,00h,00h	; 16 - Pitch LSB
             172B : 00 00             
(1) 4266/    172D : 00 00 00 00 00 00   	db 00h,00h,00h,00h,00h,00h,00h,00h	; 24 - Flags+MSB bits of sample %SlLRxxxx Stereo/Loop/Left/Right
             1733 : 00 00             
(1) 4267/    1735 : 00 00 00 00 00 00   	db 00h,00h,00h,00h,00h,00h,00h,00h	; 32 - ''
             173B : 00 00             
(1) 4268/    173D : 00 00 00 00 00 00   	db 00h,00h,00h,00h,00h,00h,00h,00h
             1743 : 00 00             
(1) 4269/    1745 : 00 00 00 00 00 00   	db 00h,00h,00h,00h,00h,00h,00h,00h
             174B : 00 00             
(1) 4270/    174D :                     
(1) 4271/    174D : 00 00 00 00         psgcom:	db 00h,00h,00h,00h	;  0 - command 1 = key on, 2 = key off, 4 = stop snd
(1) 4272/    1751 : FF FF FF FF         	db -1, -1, -1, -1	;  4 - output level attenuation (%llll.0000, -1 = silent)
(1) 4273/    1755 : 00 00 00 00         	db 00h,00h,00h,00h	;  8 - attack rate (START)
(1) 4274/    1759 : 00 00 00 00         	db 00h,00h,00h,00h	; 12 - decay rate
(1) 4275/    175D : 00 00 00 00         	db 00h,00h,00h,00h	; 16 - sustain level attenuation (MAXIMUM)
(1) 4276/    1761 : 00 00 00 00         	db 00h,00h,00h,00h	; 20 - release rate
(1) 4277/    1765 : 00 00 00 00         	db 00h,00h,00h,00h	; 24 - envelope mode 0 = off, 1 = attack, 2 = decay, 3 = sustain
(1) 4278/    1769 : 00 00 00 00         	db 00h,00h,00h,00h	; 28 - freq bottom 4 bits
(1) 4279/    176D : 00 00 00 00         	db 00h,00h,00h,00h	; 32 - freq upper 6 bits
(1) 4280/    1771 : 00 00 00 00         	db 00h,00h,00h,00h	; 36 - attack level attenuation
(1) 4281/    1775 : 00 00 00 00         	db 00h,00h,00h,00h	; 40 - flags to indicate hardware should be updated
(1) 4282/    1779 : 00 00 00 00         	db 00h,00h,00h,00h	; 44 - timer for sustain
(1) 4283/    177D : 00 00 00 00         	db 00h,00h,00h,00h	; 48 - MAX Volume
(1) 4284/    1781 : 00 00 00 00         	db 00h,00h,00h,00h	; 52 - Vibrato value
(1) 4285/    1785 : 00 00 00 00         	db 00h,00h,00h,00h	; 56 - General timer
(1) 4286/    1789 :                     
(1) 4287/    1789 :                     ; --------------------------------------------------------
(1) 4288/    1789 :                     fmcach_1	ds 28h
(1) 4289/    17B1 :                     fmcach_2	ds 28h
(1) 4290/    17D9 :                     fmcach_3	ds 28h
(1) 4291/    1801 :                     fmcach_4	ds 28h
(1) 4292/    1829 :                     fmcach_5	ds 28h
(1) 4293/    1851 :                     fmcach_6	ds 28h
(1) 4294/    1879 :                     fmlist_rsave	ds 4*3		; 4 bytes per channel: 0000h,00h,00h
(1) 4295/    1885 :                     trkInfoCach	ds 4
(1) 4296/    1889 :                     		ds 4*3		; _rsave followup
(1) 4297/    1895 :                     
(1) 4298/    1895 :                     ; ====================================================================
(1) 4299/    1895 :                     ; ----------------------------------------------------------------
(1) 4300/    1895 :                     ; Track buffers
(1) 4301/    1895 :                     ; ----------------------------------------------------------------
(1) 4302/    1895 :                     
(1) 4303/    1895 :                     trkHdrs_0	ds 8*4			; dw point,rowcntr
(1) 4304/    18B5 :                     trkHdrs_1	ds 8*4
(1) 4305/    18D5 :                     trkHdrs_2	ds 8*4
(1) 4306/    18F5 :                     trkBlks_0	ds 8
(1) 4307/    18FD :                     trkBlks_1	ds 8
(1) 4308/    1905 :                     trkBlks_2	ds 8
(1) 4309/    190D :                     trkBuff_0	ds trk_ChnIndx+MAX_TRKINDX
(1) 4310/    194C :                     trkBuff_1	ds trk_ChnIndx+MAX_TRKINDX
(1) 4311/    198B :                     trkBuff_2	ds trk_ChnIndx+MAX_TRKINDX
(1) 4312/    19CA : 89 17               fmcach_list:	dw fmcach_1
(1) 4313/    19CC : B1 17               		dw fmcach_2
(1) 4314/    19CE : D9 17               		dw fmcach_3
(1) 4315/    19D0 : 00                  marsUpd		db 0			; Flag to request a PWM transfer
(1) 4316/    19D1 : 00                  mcdUpd		db 0			; Flag to request a PCM transfer
(1) 4317/    19D2 : 01 18               		dw fmcach_4		; Followup
(1) 4318/    19D4 : 29 18               		dw fmcach_5
(1) 4319/    19D6 : 51 18               		dw fmcach_6
(1) 4320/    19D8 : 00 00 00            dDacPntr	db 0,0,0	; WAVE play current ROM position
(1) 4321/    19DB : 00 00 00            dDacCntr	db 0,0,0	; WAVE play length counter
(1) 4322/    19DE :                     headerOut	ds 00Eh		; Temporal storage for 68k pointers
(1) 4323/    19EC :                     headerOut_e	ds 2		; <-- reverse readpoint
(1) 4324/    19EE :                     sampleHead	ds 006h
(1) 4325/    19F4 :                     instListOut	ds 8
(1) 4326/    19FC :                     
(1) 4327/    19FC :                     ; ====================================================================
(1) 4328/    19FC :                     ; --------------------------------------------------------
(1) 4329/    19FC :                     ; MASTER buffers list
(1) 4330/    19FC :                     ;
(1) 4331/    19FC :                     ; dw track_buffer
(1) 4332/    19FC :                     ; dw channel_list,block_cache,header_cache,track_cache*
(1) 4333/    19FC :                     ;
(1) 4334/    19FC :                     ; * Cache MUST be aligned and in 1-bit sizes
(1) 4335/    19FC :                     ; --------------------------------------------------------
(1) 4336/    19FC :                     
(1) 4337/    19FC :                     nikona_BuffList:
(1) 4338/    19FC : 0D 19 F5 18 95 18   	dw trkBuff_0,trkBlks_0,trkHdrs_0,trkCach_0
             1A02 : 00 1F             
(1) 4339/    1A04 : 4C 19 FD 18 B5 18   	dw trkBuff_1,trkBlks_1,trkHdrs_1,trkCach_1
             1A0A : 20 1F             
(1) 4340/    1A0C : 8B 19 05 19 D5 18   	dw trkBuff_2,trkBlks_2,trkHdrs_2,trkCach_2
             1A12 : 40 1F             
(1) 4341/    1A14 :                     nikona_BuffList_e:
(1) 4342/    1A14 : FF FF               	dw -1	; ENDOFLIST
(1) 4343/    1A16 :                     
(1) 4344/    1A16 :                     ; ====================================================================
(1) 4345/    1A16 :                     ; --------------------------------------------------------
(1) 4346/    1A16 :                     ; Channel tables
(1) 4347/    1A16 :                     ;
(1) 4348/    1A16 :                     ; PSG   80h
(1) 4349/    1A16 :                     ; PSGN  90h
(1) 4350/    1A16 :                     ; FM   0A0h
(1) 4351/    1A16 :                     ; FM3  0B0h
(1) 4352/    1A16 :                     ; DAC  0C0h
(1) 4353/    1A16 :                     ; PCM  0D0h
(1) 4354/    1A16 :                     ; PWM  0E0h
(1) 4355/    1A16 :                     ; --------------------------------------------------------
(1) 4356/    1A16 :                     
(1) 4357/    1B00 :                     		org 1B00h			; <-- MUST BE x0h ALIGNED
(1) 4358/    1B00 : 0E 01               tblList:	dw tblPSG-tblList		;  80h
(1) 4359/    1B02 : 46 81               		dw tblPSGN-tblList|8000h	;  90h *
(1) 4360/    1B04 : A0 00               		dw tblFM-tblList		; 0A0h
(1) 4361/    1B06 : E8 80               		dw tblFM3-tblList|8000h		; 0B0h *
(1) 4362/    1B08 : FA 80               		dw tblFM6-tblList|8000h		; 0C0h *
(1) 4363/    1B0A : 0E 00               		dw tblPCM-tblList		; 0D0h
(1) 4364/    1B0C : 58 01               		dw tblPWM-tblList		; 0E0h
(1) 4365/    1B0E :                     ; 		dw 0				; 0F0h
(1) 4366/    1B0E :                     ; --------------------------------------------------------
(1) 4367/    1B0E : 00 00 00 00 00 00   tblPCM:		db 00h,00h,00h,00h,00h,00h,00h,00h,00h,00h	; Channel 1
             1B14 : 00 00 00 00       
(1) 4368/    1B18 : 00 00 00 00 00 00   		db 00h,00h,00h,00h,00h,00h,00h,00h
             1B1E : 00 00             
(1) 4369/    1B20 : 00 00 00 01 00 00   		db 00h,00h,00h,01h,00h,00h,00h,00h,00h,00h	; Channel 2
             1B26 : 00 00 00 00       
(1) 4370/    1B2A : 00 00 00 00 00 00   		db 00h,00h,00h,00h,00h,00h,00h,00h
             1B30 : 00 00             
(1) 4371/    1B32 : 00 00 00 02 00 00   		db 00h,00h,00h,02h,00h,00h,00h,00h,00h,00h	; Channel 3
             1B38 : 00 00 00 00       
(1) 4372/    1B3C : 00 00 00 00 00 00   		db 00h,00h,00h,00h,00h,00h,00h,00h
             1B42 : 00 00             
(1) 4373/    1B44 : 00 00 00 03 00 00   		db 00h,00h,00h,03h,00h,00h,00h,00h,00h,00h	; Channel 4
             1B4A : 00 00 00 00       
(1) 4374/    1B4E : 00 00 00 00 00 00   		db 00h,00h,00h,00h,00h,00h,00h,00h
             1B54 : 00 00             
(1) 4375/    1B56 : 00 00 00 04 00 00   		db 00h,00h,00h,04h,00h,00h,00h,00h,00h,00h	; Channel 5
             1B5C : 00 00 00 00       
(1) 4376/    1B60 : 00 00 00 00 00 00   		db 00h,00h,00h,00h,00h,00h,00h,00h
             1B66 : 00 00             
(1) 4377/    1B68 : 00 00 00 05 00 00   		db 00h,00h,00h,05h,00h,00h,00h,00h,00h,00h	; Channel 6
             1B6E : 00 00 00 00       
(1) 4378/    1B72 : 00 00 00 00 00 00   		db 00h,00h,00h,00h,00h,00h,00h,00h
             1B78 : 00 00             
(1) 4379/    1B7A : 00 00 00 06 00 00   		db 00h,00h,00h,06h,00h,00h,00h,00h,00h,00h	; Channel 7
             1B80 : 00 00 00 00       
(1) 4380/    1B84 : 00 00 00 00 00 00   		db 00h,00h,00h,00h,00h,00h,00h,00h
             1B8A : 00 00             
(1) 4381/    1B8C : 00 00 00 07 00 00   		db 00h,00h,00h,07h,00h,00h,00h,00h,00h,00h	; Channel 8
             1B92 : 00 00 00 00       
(1) 4382/    1B96 : 00 00 00 00 00 00   		db 00h,00h,00h,00h,00h,00h,00h,00h
             1B9C : 00 00             
(1) 4383/    1B9E : FF FF               		dw -1	; end-of-list
(1) 4384/    1BA0 : 00 00 00 00 00 00   tblFM:		db 00h,00h,00h,00h,00h,00h,00h,00h,00h,00h	; Channel 1
             1BA6 : 00 00 00 00       
(1) 4385/    1BAA : 00 00 00 00 00 00   		db 00h,00h,00h,00h,00h,00h,00h,00h
             1BB0 : 00 00             
(1) 4386/    1BB2 : 00 00 00 01 00 00   		db 00h,00h,00h,01h,00h,00h,00h,00h,00h,00h	; Channel 2
             1BB8 : 00 00 00 00       
(1) 4387/    1BBC : 00 00 00 00 00 00   		db 00h,00h,00h,00h,00h,00h,00h,00h
             1BC2 : 00 00             
(1) 4388/    1BC4 : 00 00 00 04 00 00   		db 00h,00h,00h,04h,00h,00h,00h,00h,00h,00h	; Channel 4 <--
             1BCA : 00 00 00 00       
(1) 4389/    1BCE : 00 00 00 00 00 00   		db 00h,00h,00h,00h,00h,00h,00h,00h
             1BD4 : 00 00             
(1) 4390/    1BD6 : 00 00 00 05 00 00   		db 00h,00h,00h,05h,00h,00h,00h,00h,00h,00h	; Channel 5
             1BDC : 00 00 00 00       
(1) 4391/    1BE0 : 00 00 00 00 00 00   		db 00h,00h,00h,00h,00h,00h,00h,00h
             1BE6 : 00 00             
(1) 4392/    1BE8 : 00 00 00 02 00 00   tblFM3:		db 00h,00h,00h,02h,00h,00h,00h,00h,00h,00h	; Channel 3 <--
             1BEE : 00 00 00 00       
(1) 4393/    1BF2 : 00 00 00 00 00 00   		db 00h,00h,00h,00h,00h,00h,00h,00h
             1BF8 : 00 00             
(1) 4394/    1BFA : 00 00 00 06 00 00   tblFM6:		db 00h,00h,00h,06h,00h,00h,00h,00h,00h,00h	; Channel 6 <--
             1C00 : 00 00 00 00       
(1) 4395/    1C04 : 00 00 00 00 00 00   		db 00h,00h,00h,00h,00h,00h,00h,00h
             1C0A : 00 00             
(1) 4396/    1C0C : FF FF               		dw -1	; end-of-list
(1) 4397/    1C0E : 00 00 00 00 00 00   tblPSG:		db 00h,00h,00h,00h,00h,00h,00h,00h,00h,00h	; Channel 1
             1C14 : 00 00 00 00       
(1) 4398/    1C18 : 00 00 00 00 00 00   		db 00h,00h,00h,00h,00h,00h,00h,00h
             1C1E : 00 00             
(1) 4399/    1C20 : 00 00 00 01 00 00   		db 00h,00h,00h,01h,00h,00h,00h,00h,00h,00h	; Channel 2
             1C26 : 00 00 00 00       
(1) 4400/    1C2A : 00 00 00 00 00 00   		db 00h,00h,00h,00h,00h,00h,00h,00h
             1C30 : 00 00             
(1) 4401/    1C32 : 00 00 00 02 00 00   		db 00h,00h,00h,02h,00h,00h,00h,00h,00h,00h	; Channel 3
             1C38 : 00 00 00 00       
(1) 4402/    1C3C : 00 00 00 00 00 00   		db 00h,00h,00h,00h,00h,00h,00h,00h
             1C42 : 00 00             
(1) 4403/    1C44 : FF FF               		dw -1	; end-of-list
(1) 4404/    1C46 : 00 00 00 03 00 00   tblPSGN:	db 00h,00h,00h,03h,00h,00h,00h,00h,00h,00h	; Noise
             1C4C : 00 00 00 00       
(1) 4405/    1C50 : 00 00 00 00 00 00   		db 00h,00h,00h,00h,00h,00h,00h,00h
             1C56 : 00 00             
(1) 4406/    1C58 : 00 00 00 00 00 00   tblPWM:		db 00h,00h,00h,00h,00h,00h,00h,00h,00h,00h	; Channel 1
             1C5E : 00 00 00 00       
(1) 4407/    1C62 : 00 00 00 00 00 00   		db 00h,00h,00h,00h,00h,00h,00h,00h
             1C68 : 00 00             
(1) 4408/    1C6A : 00 00 00 01 00 00   		db 00h,00h,00h,01h,00h,00h,00h,00h,00h,00h	; Channel 2
             1C70 : 00 00 00 00       
(1) 4409/    1C74 : 00 00 00 00 00 00   		db 00h,00h,00h,00h,00h,00h,00h,00h
             1C7A : 00 00             
(1) 4410/    1C7C : 00 00 00 02 00 00   		db 00h,00h,00h,02h,00h,00h,00h,00h,00h,00h	; Channel 3
             1C82 : 00 00 00 00       
(1) 4411/    1C86 : 00 00 00 00 00 00   		db 00h,00h,00h,00h,00h,00h,00h,00h
             1C8C : 00 00             
(1) 4412/    1C8E : 00 00 00 03 00 00   		db 00h,00h,00h,03h,00h,00h,00h,00h,00h,00h	; Channel 4
             1C94 : 00 00 00 00       
(1) 4413/    1C98 : 00 00 00 00 00 00   		db 00h,00h,00h,00h,00h,00h,00h,00h
             1C9E : 00 00             
(1) 4414/    1CA0 : 00 00 00 04 00 00   		db 00h,00h,00h,04h,00h,00h,00h,00h,00h,00h	; Channel 5
             1CA6 : 00 00 00 00       
(1) 4415/    1CAA : 00 00 00 00 00 00   		db 00h,00h,00h,00h,00h,00h,00h,00h
             1CB0 : 00 00             
(1) 4416/    1CB2 : 00 00 00 05 00 00   		db 00h,00h,00h,05h,00h,00h,00h,00h,00h,00h	; Channel 6
             1CB8 : 00 00 00 00       
(1) 4417/    1CBC : 00 00 00 00 00 00   		db 00h,00h,00h,00h,00h,00h,00h,00h
             1CC2 : 00 00             
(1) 4418/    1CC4 : 00 00 00 06 00 00   		db 00h,00h,00h,06h,00h,00h,00h,00h,00h,00h	; Channel 7
             1CCA : 00 00 00 00       
(1) 4419/    1CCE : 00 00 00 00 00 00   		db 00h,00h,00h,00h,00h,00h,00h,00h
             1CD4 : 00 00             
(1) 4420/    1CD6 : 00 00 00 07 00 00   		db 00h,00h,00h,07h,00h,00h,00h,00h,00h,00h	; Channel 8
             1CDC : 00 00 00 00       
(1) 4421/    1CE0 : 00 00 00 00 00 00   		db 00h,00h,00h,00h,00h,00h,00h,00h
             1CE6 : 00 00             
(1) 4422/    1CE8 : FF FF               		dw -1	; end-of-list
(1) 4423/    1CEA :                     ; ----------------------------------------------------------------
(1) 4424/    1CEA : 00 00               wave_Start	dw 0		; START: 68k 24-bit pointer
(1) 4425/    1CEC : 00                  		db 0
(1) 4426/    1CED : 00 00               wave_Len	dw 0		; LENGTH 24-bit
(1) 4427/    1CEF : 00                  		db 0
(1) 4428/    1CF0 : 00 00               wave_Loop	dw 0		; LOOP POINT 24-bit
(1) 4429/    1CF2 : 00                  		db 0
(1) 4430/    1CF3 : 00 01               wave_Pitch	dw 0100h	; 01.00h
(1) 4431/    1CF5 : 00                  wave_Flags	db 0		; WAVE playback flags (%10x: 1 loop / 0 no loop)
(1) 4432/    1CF6 :                     
(1) 4433/    1CF6 : 00                  tickSpSet	db 0		; **
(1) 4434/    1CF7 : 00                  tickFlag	db 0		; Tick flag from VBlank
(1) 4435/    1CF8 : 00                  tickCnt		db 0		; ** Tick counter (PUT THIS AFTER tickFlag)
(1) 4436/    1CF9 : 00                  currTickBits	db 0		; Current Tick/Subbeat flags (000000BTb B-beat, T-tick)
(1) 4437/    1CFA :                     
(1) 4438/    1CFA :                     ; ====================================================================
(1) 4439/    1CFA :                     ; ----------------------------------------------------------------
(1) 4440/    1CFA :                     ; Special aligned buffers
(1) 4441/    1CFA :                     ;
(1) 4442/    1CFA :                     ; Located at 1D00h
(1) 4443/    1CFA :                     ; ----------------------------------------------------------------
(1) 4444/    1CFA :                     
(1) 4445/    1D00 :                     		org 1D00h
(1) 4446/    1D00 :                     dWaveBuff	ds 100h				; WAVE data buffer: 100h bytes
(1) 4447/    1E00 :                     trkChnls	ds 8*MAX_TRKCHN
(1) 4448/    1F00 :                     trkCach_0	ds MAX_RCACH
(1) 4449/    1F20 :                     trkCach_1	ds MAX_RCACH
(1) 4450/    1F40 :                     trkCach_2	ds MAX_RCACH
(1) 4451/    1F60 :                     
(1) 4452/    1F60 :                     ; ====================================================================
(1) 4453/    1F60 :                     ; ----------------------------------------------------------------
(1) 4454/    1F60 :                     ; Control area
(1) 4455/    1F60 :                     ; * MANUAL ORDER, check gema.asm *
(1) 4456/    1F60 :                     ; ----------------------------------------------------------------
(1) 4457/    1F60 :                     
(1) 4458/    1F60 :                     		org 1F60h
(1) 4459/    1F60 :                     commZfifo	ds MAX_ZCMND			; Buffer for commands from 68k side
(1) 4460/    1F80 : 00                  commZWrite	db 0				; cmd fifo wptr (from 68k)
(1) 4461/    1F81 : 00                  commZRomBlk	db 0				; 68k ROM block flag
(1) 4462/    1F82 : 00 00               cdRamDst	db 0,0				; ** Z80 destination
(1) 4463/    1F84 : 00 00               cdRamSrc	db 0,0				; ** 68k 24-bit source
(1) 4464/    1F86 : 00                  cdRamSrcB	db 0				; **
(1) 4465/    1F87 : 00                  cdRamLen	db 0				; Size + status flag
(1) 4466/    1F88 : 00                  palMode		db 0				; PAL mode flag
(1) 4467/    1F89 : 00                  mcdBlock	db 0				; Flag to BLOCK PCM transfers.
(1) 4468/    1F8A : 00                  marsBlock	db 0				; Flag to BLOCK PWM transfers.
(1) 4469/    1F8B :                     
(1) 4470/    1F8B :                     ; --------------------------------------------------------
(1) 4471/    1F8B :                     		dephase
(1) 4472/    1F8B :                     		cpu 68000		; [AS] Return to 68k
(1) 4473/    1F8B :                     		padding off		; [AS] NO padding
(1) 4474/    1F8B :                     		align 2
(1) 4475/    1F8C :                     
      31/    1F8C :                     
      32/    1F8C :                     
 AS V1.42 Beta [Bld 212] - Source File driver_only.asm - Page 2 - 10/25/2024 03:38:56 AM


  Symbol Table (* = unused):
  --------------------------

*ADAPTER :                        0 - | *ADEN :                           1 - |
 ALV :                           24 - | *ARCHITECTURE :      "x86_64-Linux" - |
 ARP :                           2C - |  ATK :                            8 - |
*BANKSET :                        4 - | *BIGENDIAN :                      0 - |
*BITMAPMD :                       1 - | *BITWRAMMODE :                    2 - |
*BRANCHEXT :                      0 - | *CASESENSITIVE :                  0 - |
 CDRAMDST :                    1F82 C |  CDRAMLEN :                    1F87 C |
 CDRAMSRC :                    1F84 C |  CDRAMSRCB :                   1F86 C |
*CDREGION :                       1 - |  CHIP_ENV :                    128D C |
 CHIP_ENV.ATKEND :             1313 C | *CHIP_ENV.ATKZERO :            1316 C |
 CHIP_ENV.CHK2 :               131C C |  CHIP_ENV.CHK4 :               1351 C |
 CHIP_ENV.CKOF :               12B4 C |  CHIP_ENV.CKON :               12C7 C |
*CHIP_ENV.DECTMR :             1320 C |  CHIP_ENV.DKADD :              133A C |
 CHIP_ENV.DKSAV :              1342 C |  CHIP_ENV.DKYEND :             1347 C |
 CHIP_ENV.DO_NFREQ :           13A6 C |  CHIP_ENV.ENVPROC :            12E5 C |
 CHIP_ENV.KILLENV :            1367 C | *CHIP_ENV.NBLOCK :             12E5 C |
 CHIP_ENV.NORMAL :             13A1 C |  CHIP_ENV.NOUPD :              13E7 C |
 CHIP_ENV.NSKIP :              12DC C |  CHIP_ENV.SILNC_3 :            139D C |
 CHIP_ENV.VEDLP :              136F C |  CHIP_ENV.VLMUCH :             13D3 C |
 CHIP_ENV.VLOOP :              129C C |  CHIP_ENV.VONLY :              13C9 C |
 CHNL_CHIP :                      1 - |  CHNL_EFFARG :                    6 - |
 CHNL_EFFID :                     5 - |  CHNL_FLAGS :                     0 - |
 CHNL_INS :                       3 - |  CHNL_NOTE :                      2 - |
 CHNL_TYPE :                      7 - |  CHNL_VOL :                       4 - |
*CMDINTCLR :                     1A - | *CMDIRQ_ON :                      2 - |
 COM :                            0 - | *COMM0 :                         20 - |
*COMM1 :                         21 - | *COMM10 :                        2A - |
*COMM11 :                        2B - | *COMM12 :                        2C - |
*COMM13 :                        2D - |  COMM14 :                        2E - |
*COMM15 :                        2F - | *COMM2 :                         22 - |
*COMM3 :                         23 - | *COMM4 :                         24 - |
*COMM5 :                         25 - | *COMM6 :                         26 - |
*COMM7 :                         27 - |  COMM8 :                         28 - |
*COMM9 :                         29 - |  COMMZFIFO :                   1F60 C |
 COMMZREAD :                     2E C |  COMMZROMBLK :                 1F81 C |
 COMMZWRITE :                  1F80 C | *COMPMODE :                       0 - |
*CONSTPI :        3.141592653589793 - | *CS0 :                            0 - |
*CS1 :                      2000000 - |  CS2 :                      4000000 - |
*CS3 :                      6000000 - |  CURRTICKBITS :                1CF9 C |
*CUSTOM :                         0 - | *CYCLE :                         32 - |
 DAC_FILL :                      20 C |  DAC_ME :                         8 C |
 DAC_OFF :                     1422 C |  DAC_ON :                      140D C |
 DAC_PLAY :                    1437 C |  DAC_REFILL :                  146B C |
 DAC_REFILL.DACFILL_END :      152A C |  DAC_REFILL.DACFILL_LOOP :     14E3 C |
 DAC_REFILL.DACFILL_RET :      152D C |  DAC_REFILL.DAC_OVER :         14B9 C |
*DATE :                "10/25/2024" - |  DDACCNTR :                    19DB C |
 DDACFIFOMID :                   37 C |  DDACPNTR :                    19D8 C |
 DKY :                            C - | *DREQCTL :                        6 - |
*DREQDEST :                       C - | *DREQFIFO :                      12 - |
*DREQLEN :                       10 - | *DREQSOURCE :                     8 - |
 DRV_LOOP :                      42 C |  DRV_LOOP.CMND_0 :               DB C |
 DRV_LOOP.CMND_1 :               DE C |  DRV_LOOP.CMND_2 :               F7 C |
 DRV_LOOP.CMND_3 :              131 C |  DRV_LOOP.CMND_5 :              16F C |
 DRV_LOOP.CMND_6 :              1A8 C |  DRV_LOOP.CMND_7 :              1E1 C |
 DRV_LOOP.CMND_RDSLOT :         1FF C |  DRV_LOOP.DEL_ALL :             168 C |
 DRV_LOOP.GETCBYTEL :            AE C |  DRV_LOOP.GRAB_ARG :             AC C |
 DRV_LOOP.LIST :                 CB C |  DRV_LOOP.NEITHER :              82 C |
 DRV_LOOP.NEXT_CMD :             89 C |  DRV_LOOP.NOBEATS :              69 C |
 DRV_LOOP.NOTICKS :              5C C |  DRV_LOOP.NOT_PAL :             1F4 C |
 DRV_LOOP.SRCH_DEL :            14F C |  DRV_LOOP.SRCH_FVOL :           18D C |
 DRV_LOOP.SRCH_MODE :           117 C |  DRV_LOOP.SRCH_SLOT :           211 C |
 DRV_LOOP.SRCH_VOL :            1C6 C |  DRV_LOOP.WRTTO_DEL :           15C C |
 DRV_LOOP.WRTTO_FVOL :          19A C |  DRV_LOOP.WRTTO_SLOT :          126 C |
 DRV_LOOP.WRTTO_VOL :           1D3 C |  DTBL_MULTI :                   7E6 C |
 DTBL_SINGL :                   7F8 C | *DTBL_SINGL.CHNL_ULNK :         FF9 C |
 DTBL_SINGL.CHNL_ULNKCUT :      FF9 C |  DTBL_SINGL.CHNL_ULNKOFF :      FF9 C |
 DTBL_SINGL.COMN_PANLIST :      DE7 C |  DTBL_SINGL.DAC_CUT :           BBF C |
 DTBL_SINGL.DAC_OFF :           BC5 C |  DTBL_SINGL.DAC_PROC :          BCB C |
 DTBL_SINGL.D_DOWN :            D6B C |  DTBL_SINGL.D_DOWNHF :          D66 C |
 DTBL_SINGL.D_UP :              D5D C | *DTBL_SINGL.D_UPHF :            D5A C |
 DTBL_SINGL.EFFC :              D24 C |  DTBL_SINGL.EFFC_D :            D3F C |
 DTBL_SINGL.EFFC_E :            D78 C |  DTBL_SINGL.EFFC_F :            D87 C |
 DTBL_SINGL.EFFC_X :            D98 C |  DTBL_SINGL.FM_CINDX :          B8D C |
 DTBL_SINGL.FM_CUT :            A37 C |  DTBL_SINGL.FM_HASVOL :         FB7 C |
 DTBL_SINGL.FM_KEYOFF :         A54 C |  DTBL_SINGL.FM_OFF :            A31 C |
 DTBL_SINGL.FM_SETFREQ :        A73 C |  DTBL_SINGL.FM_TLOFF :          A5C C |
 DTBL_SINGL.FND_OCT :           FE8 C |  DTBL_SINGL.FNOT_PAL :          96C C |
 DTBL_SINGL.GET_FMCACH :        B95 C |  DTBL_SINGL.GET_OCT :           FDE C |
 DTBL_SINGL.INST :              E18 C |  DTBL_SINGL.INS_DAC :           ED4 C |
 DTBL_SINGL.INS_FM :            E79 C |  DTBL_SINGL.INS_PCM :           F28 C |
 DTBL_SINGL.INS_PSG :           E43 C |  DTBL_SINGL.INS_PSGN :          E3D C |
 DTBL_SINGL.INS_PWM :           F65 C | *DTBL_SINGL.INVL_INS :          E3C C |
 DTBL_SINGL.KEEP_TLMX :         B77 C |  DTBL_SINGL.KYCUT_PSG :         90C C |
*DTBL_SINGL.KYCUT_PSGN :        909 C |  DTBL_SINGL.KYOFF_PSG :         900 C |
*DTBL_SINGL.KYOFF_PSGN :        8FD C |  DTBL_SINGL.KYPSGN_HATOFF :     915 C |
 DTBL_SINGL.LINKED :            862 C |  DTBL_SINGL.MKFM_FREQ :         9AD C |
 DTBL_SINGL.MKFM_PROC :         9A7 C |  DTBL_SINGL.MKFM_SET :          A8A C |
 DTBL_SINGL.MKFM_TLVOL :        B1E C |  DTBL_SINGL.MKFM_WREGS :        AF4 C |
 DTBL_SINGL.MKPCM_WRTON :       C24 C |  DTBL_SINGL.MK_DAC :            BA5 C |
 DTBL_SINGL.MK_FM :             96D C |  DTBL_SINGL.MK_FM_SP :          9E2 C |
 DTBL_SINGL.MK_LIST :           8B0 C |  DTBL_SINGL.MK_PCM :            BFB C |
 DTBL_SINGL.MK_PSG :            8BE C |  DTBL_SINGL.MK_PWM :            C7B C |
 DTBL_SINGL.NEW_ROMDAT :        EBF C | *DTBL_SINGL.NOFM_NOTE :         9E1 C |
 DTBL_SINGL.NOTE :              FAD C |  DTBL_SINGL.NOT_DAC :           98F C |
 DTBL_SINGL.NOT_DSPC :          9A4 C |  DTBL_SINGL.NOT_NS :            8F8 C |
 DTBL_SINGL.NOT_PAL :           9CA C |  DTBL_SINGL.NO_LFO :            AE9 C |
 DTBL_SINGL.NO_REQ :            938 C |  DTBL_SINGL.N_FM :              FD4 C |
*DTBL_SINGL.N_INDX :            FC9 C | *DTBL_SINGL.N_STFREQ :          FCA C |
 DTBL_SINGL.PAN_MCD :           DC4 C |  DTBL_SINGL.PCM_CUT :           C6C C |
 DTBL_SINGL.PCM_NOTE :          C22 C |  DTBL_SINGL.PCM_OFF :           C65 C |
 DTBL_SINGL.PCM_PANLIST :       DEF C |  DTBL_SINGL.PCM_SETCOFF :       C71 C |
 DTBL_SINGL.PSGC_KEYON :        923 C |  DTBL_SINGL.PSGC_PROC :         91C C |
 DTBL_SINGL.PSG_GETFREQ :       959 C |  DTBL_SINGL.PSG_KEYON :         93E C |
 DTBL_SINGL.PWM_CUT :           CF7 C |  DTBL_SINGL.PWM_OFF :           CF0 C |
 DTBL_SINGL.PWM_SETCOFF :       CFC C |  DTBL_SINGL.PW_EFFC :           CA3 C |
 DTBL_SINGL.PW_NOTE :           CA7 C |  DTBL_SINGL.PW_SEND :           CA9 C |
 DTBL_SINGL.RCYL_COM :          855 C |  DTBL_SINGL.READFREQ_PCM :      D06 C |
 DTBL_SINGL.READFREQ_PWM :      D0B C |  DTBL_SINGL.RESET_EFFC :        8A3 C |
 DTBL_SINGL.RES_PAN :           DBA C |  DTBL_SINGL.SAME_PATCH :        ECF C |
 DTBL_SINGL.SETEFU_D :          D5F C |  DTBL_SINGL.SETEF_D :           D6F C |
 DTBL_SINGL.SETEF_MCD :         D74 C |  DTBL_SINGL.SET_WAVFREQ :       D0E C |
 DTBL_SINGL.SILN_DAC :          859 C |  DTBL_SINGL.SILN_FM :           85C C |
 DTBL_SINGL.SILN_PCM :          83B C |  DTBL_SINGL.SILN_PSG :          835 C |
 DTBL_SINGL.SILN_PSG_N :        831 C |  DTBL_SINGL.SILN_PWM :          84C C |
 DTBL_SINGL.THIS_REGS :         A29 C |  DTBL_SINGL.TL_DOWN :           A68 C |
 DTBL_SINGL.VMUCH :             953 C |  DTBL_SINGL.VOLU :              E0F C |
 DTBL_SINGL.VPCM_CARRY :        C59 C |  DTBL_SINGL.VPCM_SILN :         C56 C |
 DTBL_SINGL.VPCM_ZERO :         C5A C |  DTBL_SINGL.VPWM_MUCH :         CCA C |
 DTBL_SINGL.VPWM_SILN :         CC8 C |  DTBL_SINGL.WRITE_NTL :         B82 C |
 DTBL_SINGL.WRITE_TL :          B70 C |  DTBL_SINGL.WRT_EF :            D92 C |
 DTBL_SINGL.WR_SPC :            A0C C |  DTH :                           20 - |
 DTL :                           1C - |  DWAVEBUFF :                   1D00 C |
*EFFV :                          34 - |  EMU :                            0 - |
*FALSE :                          0 - | *FEN :                            2 - |
*FILLDATA :                       8 - | *FILLLENGTH :                     4 - |
*FILLSTART :                      6 - |  FLG :                           28 - |
*FM :                            80 - |  FMCACH_1 :                    1789 C |
 FMCACH_2 :                    17B1 C |  FMCACH_3 :                    17D9 C |
 FMCACH_4 :                    1801 C |  FMCACH_5 :                    1829 C |
 FMCACH_6 :                    1851 C |  FMCACH_LIST :                 19CA C |
 FMFREQ_LIST :                 153B C |  FMLIST_RSAVE :                1879 C |
 FMSPECIAL :                     30 C |  FM_AUTOREG :                  13F3 C |
 FM_SEND_1 :                   13F7 C |  FM_SEND_2 :                   1402 C |
*FRAMECTL :                       B - | *FS :                             1 - |
*FULLPMMU :                       1 - |  GEMAMSTRLISTPOS :               1C C |
 GEMA_INIT :                   113D C |  GEMA_INIT.END_SETUP :         117E C |
 GEMA_INIT.SETUP_LIST :        1153 C |  GEMA_INIT.ST_COPY :           1172 C |
 GEMA_LASTBANK :               1531 C |  GEMA_LASTBANK.WRITE :         1536 C |
 GET_TICK :                    11AF C |  GET_TICK.CTNOTICK :           11CC C |
*HAS64 :                          1 - | *HASDSP :                         0 - |
*HASFPU :                         0 - | *HASPMMU :                        0 - |
*HBLK :                          40 - |  HEADEROUT :                   19DE C |
 HEADEROUT_E :                 19EC C | *HINTCLR :                       18 - |
*HIRQ_ON :                        4 - | *INEXTMODE :                      0 - |
*INLWORDMODE :                    0 - | *INMAXMODE :                      0 - |
*INSRCMODE :                      0 - |  INSTLISTOUT :                 19F4 C |
*INSUPMODE :                      1 - | *INTMASK :                        1 - |
*LCHWIDTH :                      34 - |  LEV :                            4 - |
*LISTON :                         3 - | *MACEXP :                         7 - |
 MARS :                           0 - |  MARSBLOCK :                   1F8A C |
 MARSCD :                         1 - |  MARSUPD :                     19D0 C |
 MAX_BUFFNTRY :                   8 - |  MAX_RCACH :                     20 - |
 MAX_SLOTS :                      3 - |  MAX_TBLSIZE :                   12 - |
 MAX_TRFRPZ :                     A - |  MAX_TRKCHN :                    20 - |
 MAX_TRKINDX :                   1A - |  MAX_ZCMND :                     20 - |
 MCD :                            0 - |  MCDBLOCK :                    1F89 C |
 MCDUPD :                      19D1 C | *MCD_COMM_M :                     E - |
*MCD_COMM_S :                     F - | *MCD_DCOMM_M :                   10 - |
*MCD_DCOMM_S :                   20 - | *MCD_HINT :                       6 - |
*MCD_INTMASK :                   32 - | *MCD_MEMORY :                     3 - |
*MD_BANK_SRAM :              A130F1 - |  MODE :                          18 - |
*MOMCPU :                     68000 - | *MOMCPUNAME :               "68000" - |
*MONOWIDTH :                     38 - |  MVOL :                          30 - |
*NESTMAX :                      100 - |  NIKONA_BUFFLIST :             19FC C |
*NIKONA_BUFFLIST_E :           1A14 C | *PACKING :                        0 - |
*PADDING :                        0 - |  PALMODE :                     1F88 C |
 PCMCOM :                      16D5 C | *PEN :                           20 - |
*PICO :                           0 - | *PROC_CHIPS :                   60B C |
 PSGCOM :                      174D C |  PSGFREQ_LIST :                1553 C |
 PSGHATMODE :                    2F C | *PSG_CTRL :                  C00011 - |
 PTMR :                          38 - |  PWMCOM :                      1715 C |
*PWMCTL :                        31 - | *PWMINTCLR :                     1C - |
*PWMIRQ_ON :                      1 - |  RAM_ZCDFLAGD :            FFFFFF00 - |
*RCHWIDTH :                      36 - |  READROM :                     11D0 C |
 READROM.DOUBLE :              11F3 C |  READROM.FROM_RAM :            1217 C |
 READROM.TRANSFER :            1237 C |  READROM.WAIT :                122E C |
 READROM.X68KLAST :            1270 C |  READROM.X68KLOOP :            125C C |
 READROM.X68KLPWT :            127E C |  READROM.X68KNOCARRY :         1211 C |
*RELAXED :                        0 - | *RES :                            2 - |
 RRT :                           14 - |  SAMPLEHEAD :                  19EE C |
 SBEATACC :                      31 C |  SBEATPTCK :                     33 C |
 SET_CHIPS :                    5EF C | *SET_WRAMSIZE :               3C000 - |
*SHIFT :                          2 - |  SLV :                           10 - |
 STANDBY :                        3 - | *SYSMARS_FRAMEBUFFER :       840000 - |
*SYSMARS_ID :                A130EC - | *SYSMARS_OVERWRITE :         860000 - |
*SYSMARS_REG :               A15100 - | *SYSMARS_SVDP :              A15180 - |
*SYSMCD_REG :                A12000 - | *SYSMCD_WRAM :               200000 - |
*SYS_CTRL_1 :                A10009 - | *SYS_CTRL_2 :                A1000B - |
*SYS_CTRL_3 :                A1000D - | *SYS_DATA_1 :                A10003 - |
*SYS_DATA_2 :                A10005 - | *SYS_DATA_3 :                A10007 - |
*SYS_IO :                    A10001 - | *SYS_SRAM :                  200000 - |
*SYS_TMSS :                  A14000 - |  TBLBUFF_READ :                 636 C |
 TBLBUFF_READ.DONT_RES :        6F7 C |  TBLBUFF_READ.DO_CHIP :         691 C |
 TBLBUFF_READ.GRAB_LINK :       6DB C |  TBLBUFF_READ.HAS_INDX :        66D C |
 TBLBUFF_READ.INVLDL :          71F C |  TBLBUFF_READ.L_HIPRIO :        7A9 C |
 TBLBUFF_READ.NEW_CHIP :        75C C |  TBLBUFF_READ.NEW_LINK :        7A6 C |
 TBLBUFF_READ.NEW_LINK_O :      79E C |  TBLBUFF_READ.NEW_LINK_Z :      79A C |
 TBLBUFF_READ.NEXTSRCH_TBL :    793 C |  TBLBUFF_READ.NEXT_INDX :       664 C |
 TBLBUFF_READ.NEXT_PRIO :       77E C |  TBLBUFF_READ.NO_INDX :         689 C |
 TBLBUFF_READ.PASS_2 :          77D C |  TBLBUFF_READ.PICK_TBL :        7CA C |
 TBLBUFF_READ.REFILL :          758 C |  TBLBUFF_READ.REROLL :          735 C |
 TBLBUFF_READ.RNOT_PSG :        75A C |  TBLBUFF_READ.SAME_LINK :       6FA C |
 TBLBUFF_READ.SET_ASFULL :      7C7 C |  TBLBUFF_READ.SINGL_FREE :      7B7 C |
 TBLBUFF_READ.SINGL_LINK :      727 C |  TBLBUFF_READ.SRCH_FREE :       76D C |
 TBLBUFF_READ.SRCH_LINK :       706 C |  TBLBUFF_READ.SRCH_LLOOP :      710 C |
 TBLBUFF_READ.TRACK_CONT :      64E C |  TBLBUFF_READ.VALID :           662 C |
 TBLFM :                       1BA0 C |  TBLFM3 :                      1BE8 C |
 TBLFM6 :                      1BFA C |  TBLLIST :                     1B00 C |
 TBLPCM :                      1B0E C |  TBLPSG :                      1C0E C |
 TBLPSGN :                     1C46 C |  TBLPWM :                      1C58 C |
 TBLZ_CLEAR :                  1000 C |  TH :                      20000000 - |
 TICKCNT :                     1CF8 C |  TICKFLAG :                    1CF7 C |
 TICKSPSET :                   1CF6 C | *TIME :               "03:38:56 AM" - |
*TIMERCTL :                      30 - |  TRACK_OUT :                    5AA C |
 TRACK_OUT.INDX_DEL :           5B8 C |  TRACK_OUT.NOTHIN :             5E6 C |
 TRKBLKS_0 :                   18F5 C |  TRKBLKS_1 :                   18FD C |
 TRKBLKS_2 :                   1905 C |  TRKBUFF_0 :                   190D C |
 TRKBUFF_1 :                   194C C |  TRKBUFF_2 :                   198B C |
 TRKCACH_0 :                   1F00 C |  TRKCACH_1 :                   1F20 C |
 TRKCACH_2 :                   1F40 C |  TRKCHNLS :                    1E00 C |
 TRKHDRS_0 :                   1895 C |  TRKHDRS_1 :                   18B5 C |
 TRKHDRS_2 :                   18D5 C |  TRKINFOCACH :                 1885 C |
 TRK_BANKBLK :                   16 - |  TRK_BANKHEADS :                 15 - |
 TRK_BLOCKS :                     4 - |  TRK_CACH :                       8 - |
 TRK_CACHHALF :                  10 - |  TRK_CHNINDX :                   25 - |
 TRK_CURRBLK :                   13 - |  TRK_MAXCHNL :                   17 - |
 TRK_PATT :                       6 - |  TRK_PRIORITY :                  14 - |
 TRK_READ :                       A - |  TRK_ROMBLKS :                   22 - |
 TRK_ROMINST :                   1F - |  TRK_ROMPATT :                   1C - |
 TRK_ROMPATTREAD :               19 - |  TRK_ROWPAUSE :                  11 - |
 TRK_ROWS :                       C - |  TRK_SEQID :                      1 - |
 TRK_SETBLK :                     2 - |  TRK_STATUS :                     0 - |
 TRK_TICKSET :                    3 - |  TRK_TICKTMR :                   12 - |
 TRK_VOLFDTARGET :               18 - |  TRK_VOLMASTER :                  E - |
*TRUE :                           1 - | *TVMODE :                         0 - |
 UPD_TRACK :                    224 C |  UPD_TRACK.CHNL_FREE :          32F C |
 UPD_TRACK.CONT_CHNL :          33A C |  UPD_TRACK.DECROW :             2DE C |
 UPD_TRACK.DECROW_E :           2E1 C |  UPD_TRACK.EFFECT_FILL :        501 C |
 UPD_TRACK.EFF_A :              3B4 C |  UPD_TRACK.EFF_B :              3C5 C |
 UPD_TRACK.EFF_C :              3E3 C |  UPD_TRACK.EXIT :               2D2 C |
 UPD_TRACK.FADE_OUT :           25F C |  UPD_TRACK.FIRST_BLK :          43A C |
 UPD_TRACK.FIRST_FILL :         508 C |  UPD_TRACK.FIRST_HEAD :         481 C |
 UPD_TRACK.GRAB_RHEAD :         597 C |  UPD_TRACK.HAS_NOTE :           2E9 C |
 UPD_TRACK.INC_CPATT :          3E6 C |  UPD_TRACK.KEEP_BLK :           457 C |
 UPD_TRACK.KEEP_IT :            4A7 C |  UPD_TRACK.KEEP_VOL :           275 C |
 UPD_TRACK.NEXT_CHNL :          314 C |  UPD_TRACK.NEXT_NOTE :          2C2 C |
 UPD_TRACK.NO_EFF :             380 C |  UPD_TRACK.NO_GLBL :            548 C |
 UPD_TRACK.NO_INS :             362 C |  UPD_TRACK.NO_NOTE :            357 C |
 UPD_TRACK.NO_VOL :             36D C |  UPD_TRACK.OLD_TYPE :           34B C |
 UPD_TRACK.RAN_OUT :            3F4 C |  UPD_TRACK.READ_TRACK :         23B C |
 UPD_TRACK.ROW_ACTIVE :         2BB C |  UPD_TRACK.SET_TRACK :          41E C |
 UPD_TRACK.SFXMD :              27F C |  UPD_TRACK.SRCH_NEW :           30F C |
 UPD_TRACK.TOO_MUCH :           26B C |  UPD_TRACK.TRACK_END :          4F6 C |
*VBLK :                          80 - | *VDPSTS :                         A - |
*VDP_CTRL :                  C00004 - | *VDP_DATA :                  C00000 - |
*VERSION :                     142F - | *VINTCLR :                       16 - |
*VIRQ_ON :                        8 - | *VRESINTCLR :                    14 - |
 WAVE_FLAGS :                  1CF5 C |  WAVE_LEN :                    1CED C |
 WAVE_LOOP :                   1CF0 C |  WAVE_PITCH :                  1CF3 C |
 WAVE_START :                  1CEA C |  WAVFREQ_CDPCM :               165D C |
 WAVFREQ_LIST :                15FB C |  X68KSRCLSB :                    35 C |
 X68KSRCMID :                    36 C | *YM_CTRL_1 :                 A04000 - |
*YM_CTRL_2 :                 A04002 - | *YM_DATA_1 :                 A04001 - |
*YM_DATA_2 :                 A04003 - | *Z80SYNTAX :                      0 - |
*Z80_BUS :                   A11100 - | *Z80_CPU :                   A00000 - |
 Z80_INIT :                      3E C | *Z80_RESET :                 A11200 - |
*ZBANK :                       6000 - |  ZMARS_SEND :                  1009 C |
 ZMARS_SEND.BLOCKED_M :        110D C |  ZMARS_SEND.CLR_PCM :          108F C |
 ZMARS_SEND.CLR_PWM :          1114 C |  ZMARS_SEND.COPY_BYTES :       1067 C |
 ZMARS_SEND.MAKE_SURE :        103F C |  ZMARS_SEND.MCDT_BLOCKED :     1088 C |
*ZMARS_SEND.MCDT_NOUPD :       1093 C |  ZMARS_SEND.MCD_NEXTP :        105E C |
 ZMARS_SEND.NEXT_COMM :        10E5 C |  ZMARS_SEND.NEXT_PACKET :      10DB C |
*ZMARS_SEND.PWM_EXIT :         1118 C |  ZMARS_SEND.SET_COMBANK :      1126 C |
 ZMARS_SEND.TEST_SUB :         104A C |  ZMARS_SEND.WAIT_ENTER :       10BB C |
 ZMARS_SEND.WAIT_IN :          102B C |  ZMARS_SEND.WAIT_SUB :         1076 C |
 ZMARS_SEND.W_PASS2 :          10FB C | *ZOPCEX :                         8 - |
 ZOPCEXX :                       D9 - | *ZOPCNOP :                        0 - |
 ZOPCPUSHAF :                    F5 - |  ZOPCRET :                       C9 - |
 ZPSG_CTRL :                   7F11 - |  ZTBL_CHIP :                      3 - |
 ZTBL_FREQINDX :                  5 - |  ZTBL_INSTCACH :                  A - |
*ZTBL_LINK :                      0 - |  ZTBL_MASTERVOL :                 4 - |
 ZTBL_PITCHBEND :                 6 - | *ZTBL_PRIORITY :                  2 - |
 ZTBL_VOLSLIDE :                  8 - |  ZTBL_VOLUME :                    7 - |
 ZYM_CTRL_1 :                  4000 - |  ZYM_CTRL_2 :                  4002 - |
 ZYM_DATA_1 :                  4001 - |  ZYM_DATA_2 :                  4003 - |
*_CCR :                    FFFFFE92 - | *_DMACHANNEL0 :            FFFFFF8C - |
*_DMACHANNEL1 :            FFFFFF9C - | *_DMACOUNT0 :              FFFFFF88 - |
*_DMACOUNT1 :              FFFFFF98 - | *_DMADEST0 :               FFFFFF84 - |
*_DMADEST1 :               FFFFFF94 - | *_DMAOPERATION :           FFFFFFB0 - |
*_DMAREQACK0 :             FFFFFFB4 - | *_DMAREQACK1 :             FFFFFFB8 - |
*_DMASOURCE0 :             FFFFFF80 - | *_DMASOURCE1 :             FFFFFF90 - |
*_DMAVECTORE0 :            FFFFFFA4 - | *_DMAVECTORE1 :            FFFFFFAC - |
*_DMAVECTORN0 :            FFFFFFA0 - | *_DMAVECTORN1 :            FFFFFFA8 - |
*_FRAMEBUFFER :            24000000 - | *_FRC_H :                         2 - |
*_FRC_L :                         3 - | *_FRT :                    FFFFFE10 - |
*_HRH :                    FFFFFF10 - | *_HRL :                    FFFFFF14 - |
*_HRL32 :                  FFFFFF04 - | *_JR :                     FFFFFF00 - |
*_OCR_H :                         4 - | *_OCR_L :                         5 - |
*_OVERWRITE :              24020000 - | *_PALETTE :                20004200 - |
*_SERIAL :                 FFFFFE00 - | *_SYSREG :                 20004000 - |
*_TCR :                           6 - | *_TCSR :                          1 - |
*_TIER :                          0 - | *_TOCR :                          7 - |
*_VDPREG :                 20004100 - |

    605 symbols
    181 unused symbols

 AS V1.42 Beta [Bld 212] - Source File driver_only.asm - Page 3 - 10/25/2024 03:38:56 AM


  Defined Macros:
  ---------------

BINCLUDE_DMA                          | BINCLUDE_DMA_E                       
DATA_DEND                             | DATA_DSET                            
ENDMEMORY                             | ERREPORT                             
FILLSECTORS                           | FS_END                               
FS_FILE                               | FS_MKLIST                            
MARS_VRAMEND                          | MARS_VRAMSTART                       
MEMORY                                | REPORT                               
ROMPAD                                | SCREEN_CODE                          
VDP_SHOWME                            |

     17 macros

 AS V1.42 Beta [Bld 212] - Source File driver_only.asm - Page 4 - 10/25/2024 03:38:56 AM


  Defined Functions:
  ------------------

FULL_LOC                              | PSTR_MEM                             
COLOR_INDX                            | CELL_VRAM                            
SPLITW                                |

 AS V1.42 Beta [Bld 212] - Source File driver_only.asm - Page 5 - 10/25/2024 03:38:56 AM


  Code Pages:
  ----------

STANDARD (0 changed characters)

1 code page

0.02 seconds assembly time

   5072 lines source file
      2 passes
      0 errors
      0 warnings
